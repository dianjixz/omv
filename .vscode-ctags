!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	Development	//
A	src/img/apriltag.c	/^    double A[3][3];$/;"	m	struct:graymodel	file:
A	src/img/include/imlib.h	/^        int8_t A;       \/\/ LAB A$/;"	m	union:simple_color::__anon26
A	test/python_module/test.c	/^        int8_t A;       \/\/ LAB A$/;"	m	union:simple_color::__anon60	file:
ABinCount	src/img/include/imlib.h	/^    int ABinCount;$/;"	m	struct:histogram
ABins	src/img/include/imlib.h	/^    float *ABins;$/;"	m	struct:histogram
ABins	src/py/py_image.c	/^    mp_obj_t LBins, ABins, BBins;$/;"	m	struct:py_histogram_obj	file:
ACTIVE_BINOCULAR	src/include/sensor.h	/^    ACTIVE_BINOCULAR,$/;"	e	enum:__anon54
ACTIVE_HIGH	src/include/sensor.h	/^    ACTIVE_HIGH,$/;"	e	enum:__anon54
ACTIVE_LOW	src/include/sensor.h	/^    ACTIVE_LOW,$/;"	e	enum:__anon54
ADDVSH	src/include/ov2640_regs.h	129;"	d
ADDVSL	src/include/ov2640_regs.h	128;"	d
AEB	src/include/ov2640_regs.h	125;"	d
AEC	src/include/ov2640_regs.h	111;"	d
AEW	src/include/ov2640_regs.h	124;"	d
ALQ	src/img/include/imlib.h	/^    int8_t AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ;$/;"	m	struct:statistics
ALQ	src/py/py_image.c	/^        AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ,$/;"	m	struct:py_statistics_obj	file:
ALWAYS_INLINE	src/include/common.h	11;"	d
AMax	src/img/include/imlib.h	/^    int8_t AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ;$/;"	m	struct:statistics
AMax	src/img/include/imlib.h	/^    int8_t AMin, AMax;$/;"	m	struct:color_thresholds_list_lnk_data
AMax	src/py/py_image.c	/^        AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ,$/;"	m	struct:py_statistics_obj	file:
AMean	src/img/include/imlib.h	/^    int8_t AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ;$/;"	m	struct:statistics
AMean	src/py/py_image.c	/^        AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ,$/;"	m	struct:py_statistics_obj	file:
AMedian	src/img/include/imlib.h	/^    int8_t AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ;$/;"	m	struct:statistics
AMedian	src/py/py_image.c	/^        AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ,$/;"	m	struct:py_statistics_obj	file:
AMin	src/img/include/imlib.h	/^    int8_t AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ;$/;"	m	struct:statistics
AMin	src/img/include/imlib.h	/^    int8_t AMin, AMax;$/;"	m	struct:color_thresholds_list_lnk_data
AMin	src/py/py_image.c	/^        AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ,$/;"	m	struct:py_statistics_obj	file:
AMode	src/img/include/imlib.h	/^    int8_t AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ;$/;"	m	struct:statistics
AMode	src/py/py_image.c	/^        AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ,$/;"	m	struct:py_statistics_obj	file:
ARCOM2	src/include/ov2640_regs.h	133;"	d
ARRAY_INIT_SIZE	src/array.c	14;"	d	file:
ARTOOLKIT	src/img/include/imlib.h	/^    ARTOOLKIT = 32$/;"	e	enum:apriltag_families
ASCII	src/img/include/font.h	/^    ASCII,$/;"	e	enum:FontIndex
ASSERT_POS	src/img/zbar.c	1531;"	d	file:
ASSERT_POS	zbar/img_scanner.c	47;"	d	file:
ASSERT_POS	zbar/img_scanner.c	50;"	d	file:
ASSOC	src/img/apriltag.c	10008;"	d	file:
ASTDev	src/img/include/imlib.h	/^    int8_t AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ;$/;"	m	struct:statistics
ASTDev	src/py/py_image.c	/^        AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ,$/;"	m	struct:py_statistics_obj	file:
ATTR_BRIGHTNESS	src/include/sensor.h	/^    ATTR_BRIGHTNESS,$/;"	e	enum:__anon53
ATTR_CONTRAST	src/include/sensor.h	/^    ATTR_CONTRAST=0,$/;"	e	enum:__anon53
ATTR_GAINCEILING	src/include/sensor.h	/^    ATTR_GAINCEILING,$/;"	e	enum:__anon53
ATTR_SATURATION	src/include/sensor.h	/^    ATTR_SATURATION,$/;"	e	enum:__anon53
AUQ	src/img/include/imlib.h	/^    int8_t AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ;$/;"	m	struct:statistics
AUQ	src/py/py_image.c	/^        AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ,$/;"	m	struct:py_statistics_obj	file:
AValue	src/img/include/imlib.h	/^    int8_t AValue;$/;"	m	struct:percentile
AValue	src/img/include/imlib.h	/^    int8_t AValue;$/;"	m	struct:threshold
AValue	src/py/py_image.c	/^    mp_obj_t LValue, AValue, BValue;$/;"	m	struct:py_percentile_obj	file:
AValue	src/py/py_image.c	/^    mp_obj_t LValue, AValue, BValue;$/;"	m	struct:py_threshold_obj	file:
ArrayIn	src/img/include/font.h	/^    ArrayIn,$/;"	e	enum:FontSource
B	src/img/apriltag.c	/^    double B[3];$/;"	m	struct:graymodel	file:
B	src/img/include/imlib.h	/^        int8_t B;       \/\/ LAB B$/;"	m	union:simple_color::__anon27
B	test/python_module/test.c	/^        int8_t B;       \/\/ LAB B$/;"	m	union:simple_color::__anon61	file:
B240X240_config	src/gc0328.c	/^static const uint8_t B240X240_config[][2] = { \/\/k210 $/;"	v	file:
BANK_SEL	src/include/ov2640_regs.h	100;"	d
BANK_SEL_DSP	src/include/ov2640_regs.h	101;"	d
BANK_SEL_SENSOR	src/include/ov2640_regs.h	102;"	d
BARCODE_CODABAR	src/img/include/imlib.h	/^    BARCODE_CODABAR,$/;"	e	enum:barcodes
BARCODE_CODE128	src/img/include/imlib.h	/^    BARCODE_CODE128$/;"	e	enum:barcodes
BARCODE_CODE39	src/img/include/imlib.h	/^    BARCODE_CODE39,$/;"	e	enum:barcodes
BARCODE_CODE93	src/img/include/imlib.h	/^    BARCODE_CODE93,$/;"	e	enum:barcodes
BARCODE_DATABAR	src/img/include/imlib.h	/^    BARCODE_DATABAR,$/;"	e	enum:barcodes
BARCODE_DATABAR_EXP	src/img/include/imlib.h	/^    BARCODE_DATABAR_EXP,$/;"	e	enum:barcodes
BARCODE_EAN13	src/img/include/imlib.h	/^    BARCODE_EAN13,$/;"	e	enum:barcodes
BARCODE_EAN2	src/img/include/imlib.h	/^    BARCODE_EAN2,$/;"	e	enum:barcodes
BARCODE_EAN5	src/img/include/imlib.h	/^    BARCODE_EAN5,$/;"	e	enum:barcodes
BARCODE_EAN8	src/img/include/imlib.h	/^    BARCODE_EAN8,$/;"	e	enum:barcodes
BARCODE_I25	src/img/include/imlib.h	/^    BARCODE_I25,$/;"	e	enum:barcodes
BARCODE_ISBN10	src/img/include/imlib.h	/^    BARCODE_ISBN10,$/;"	e	enum:barcodes
BARCODE_ISBN13	src/img/include/imlib.h	/^    BARCODE_ISBN13,$/;"	e	enum:barcodes
BARCODE_PDF417	src/img/include/imlib.h	/^    BARCODE_PDF417,$/;"	e	enum:barcodes
BARCODE_UPCA	src/img/include/imlib.h	/^    BARCODE_UPCA,$/;"	e	enum:barcodes
BARCODE_UPCE	src/img/include/imlib.h	/^    BARCODE_UPCE,$/;"	e	enum:barcodes
BBinCount	src/img/include/imlib.h	/^    int BBinCount;$/;"	m	struct:histogram
BBins	src/img/include/imlib.h	/^    float *BBins;$/;"	m	struct:histogram
BBins	src/py/py_image.c	/^    mp_obj_t LBins, ABins, BBins;$/;"	m	struct:py_histogram_obj	file:
BCH18_6_CODES	zbar/qrdec.c	/^static const unsigned BCH18_6_CODES[34]={$/;"	v	file:
BD50	src/include/ov2640_regs.h	141;"	d
BD60	src/include/ov2640_regs.h	142;"	d
BITMAP_COMPUTE_INDEX	src/img/include/collections.h	28;"	d
BITMAP_COMPUTE_ROW_INDEX	src/img/include/collections.h	27;"	d
BLOCK_SIZE	src/img/gif.c	13;"	d	file:
BLQ	src/img/include/imlib.h	/^    int8_t BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:statistics
BLQ	src/py/py_image.c	/^        BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:py_statistics_obj	file:
BMax	src/img/include/imlib.h	/^    int8_t BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:statistics
BMax	src/img/include/imlib.h	/^    int8_t BMin, BMax;$/;"	m	struct:color_thresholds_list_lnk_data
BMax	src/py/py_image.c	/^        BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:py_statistics_obj	file:
BMean	src/img/include/imlib.h	/^    int8_t BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:statistics
BMean	src/py/py_image.c	/^        BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:py_statistics_obj	file:
BMedian	src/img/include/imlib.h	/^    int8_t BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:statistics
BMedian	src/py/py_image.c	/^        BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:py_statistics_obj	file:
BMin	src/img/include/imlib.h	/^    int8_t BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:statistics
BMin	src/img/include/imlib.h	/^    int8_t BMin, BMax;$/;"	m	struct:color_thresholds_list_lnk_data
BMin	src/py/py_image.c	/^        BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:py_statistics_obj	file:
BMode	src/img/include/imlib.h	/^    int8_t BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:statistics
BMode	src/py/py_image.c	/^        BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:py_statistics_obj	file:
BPADDR	src/include/ov2640_regs.h	25;"	d
BPDATA	src/include/ov2640_regs.h	26;"	d
BREAK	src/include/common.h	15;"	d
BSTDev	src/img/include/imlib.h	/^    int8_t BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:statistics
BSTDev	src/py/py_image.c	/^        BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:py_statistics_obj	file:
BUFFER_INCR	src/img/zbar.c	2918;"	d	file:
BUFFER_INCR	zbar/decoder.h	71;"	d
BUFFER_MAX	src/img/zbar.c	2913;"	d	file:
BUFFER_MAX	zbar/decoder.h	66;"	d
BUFFER_MIN	src/img/zbar.c	2906;"	d	file:
BUFFER_MIN	zbar/decoder.h	59;"	d
BUQ	src/img/include/imlib.h	/^    int8_t BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:statistics
BUQ	src/py/py_image.c	/^        BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;$/;"	m	struct:py_statistics_obj	file:
BValue	src/img/include/imlib.h	/^    int8_t BValue;$/;"	m	struct:percentile
BValue	src/img/include/imlib.h	/^    int8_t BValue;$/;"	m	struct:threshold
BValue	src/py/py_image.c	/^    mp_obj_t LValue, AValue, BValue;$/;"	m	struct:py_percentile_obj	file:
BValue	src/py/py_image.c	/^    mp_obj_t LValue, AValue, BValue;$/;"	m	struct:py_threshold_obj	file:
BYTE_IMAGE	src/img/clahe.c	7;"	d	file:
BresLineGetStep	src/img/dmtx.c	/^BresLineGetStep(DmtxBresLine line, DmtxPixelLoc target, int *travel, int *outward)$/;"	f	file:
BresLineInit	src/img/dmtx.c	/^BresLineInit(DmtxPixelLoc loc0, DmtxPixelLoc loc1, DmtxPixelLoc locInside)$/;"	f	file:
BresLineStep	src/img/dmtx.c	/^BresLineStep(DmtxBresLine *line, int travel, int outward)$/;"	f	file:
BuildIn	src/img/include/font.h	/^    BuildIn,$/;"	e	enum:FontSource
C	src/img/apriltag.c	/^    double C[3];$/;"	m	struct:graymodel	file:
C40TextState	src/img/dmtx.c	/^}__attribute__((aligned(8))) C40TextState;$/;"	t	typeref:struct:C40TextState_struct	file:
C40TextState_struct	src/img/dmtx.c	/^typedef struct C40TextState_struct {$/;"	s	file:
CACHE_CONSISTENCY	zbar/img_scanner.c	58;"	d	file:
CACHE_HYSTERESIS	src/img/zbar.c	1543;"	d	file:
CACHE_HYSTERESIS	zbar/img_scanner.c	67;"	d	file:
CACHE_PROXIMITY	src/img/zbar.c	1538;"	d	file:
CACHE_PROXIMITY	zbar/img_scanner.c	62;"	d	file:
CACHE_TIMEOUT	src/img/zbar.c	1547;"	d	file:
CACHE_TIMEOUT	zbar/img_scanner.c	71;"	d	file:
CALLBACK_FINAL	src/img/dmtx.c	820;"	d	file:
CALLBACK_MATRIX	src/img/dmtx.c	816;"	d	file:
CALLBACK_MODULE	src/img/dmtx.c	812;"	d	file:
CALLBACK_POINT_PLOT	src/img/dmtx.c	804;"	d	file:
CALLBACK_POINT_XFRM	src/img/dmtx.c	808;"	d	file:
CC	test/Makefile	/^CC=$(vgcc)$/;"	m
CC	test/python_module/Makefile	/^CC = \/opt\/v831\/toolchain-sunxi-musl\/toolchain\/bin\/arm-openwrt-linux-muslgnueabi-gcc$/;"	m
CC	zbar/makefile	/^CC=$(vgcc)$/;"	m
CFG	src/img/zbar.c	1551;"	d	file:
CFG	src/img/zbar.c	2385;"	d	file:
CFG	src/img/zbar.c	2921;"	d	file:
CFG	zbar/decoder.h	74;"	d
CFG	zbar/img_scanner.c	75;"	d	file:
CFLAGS	test/Makefile	/^CFLAGS=  $/;"	m
CFLAGS	zbar/makefile	/^CFLAGS=  $/;"	m
CHAR_BITS	src/img/collections.c	7;"	d	file:
CHAR_MASK	src/img/collections.c	8;"	d	file:
CHAR_SHIFT	src/img/collections.c	9;"	d	file:
CHKMOD	src/img/zbar.c	6400;"	d	file:
CHKPASS	src/img/dmtx.c	4616;"	d	file:
CHKPASS	src/img/dmtx.c	4617;"	d	file:
CHKPASS	src/img/dmtx.c	4726;"	d	file:
CHKPASS	src/img/dmtx.c	4727;"	d	file:
CHKPASS	src/img/dmtx.c	4762;"	d	file:
CHKPASS	src/img/dmtx.c	4763;"	d	file:
CHKPASS	src/img/dmtx.c	4846;"	d	file:
CHKPASS	src/img/dmtx.c	4847;"	d	file:
CHKPASS	src/img/dmtx.c	4891;"	d	file:
CHKPASS	src/img/dmtx.c	4892;"	d	file:
CLAHE	src/img/clahe.c	/^int CLAHE (kz_pixel_t* pImage, unsigned int uiXRes, unsigned int uiYRes,$/;"	f
CLKRC	src/include/ov2640_regs.h	113;"	d
CLKRC_DIVIDER_MASK	src/include/ov2640_regs.h	115;"	d
CLKRC_DOUBLE	src/include/ov2640_regs.h	114;"	d
CODE_A	src/img/zbar.c	/^    CODE_A      = 0x65,$/;"	e	enum:code128_char_e	file:
CODE_B	src/img/zbar.c	/^    CODE_B      = 0x64,$/;"	e	enum:code128_char_e	file:
CODE_C	src/img/zbar.c	/^    CODE_C      = 0x63,$/;"	e	enum:code128_char_e	file:
COLOR_A_MAX	src/img/include/imlib.h	228;"	d
COLOR_A_MIN	src/img/include/imlib.h	227;"	d
COLOR_B5_MAX	src/img/include/imlib.h	216;"	d
COLOR_B5_MIN	src/img/include/imlib.h	215;"	d
COLOR_B5_TO_B8	src/img/include/imlib.h	244;"	d
COLOR_B8_MAX	src/img/include/imlib.h	223;"	d
COLOR_B8_MIN	src/img/include/imlib.h	222;"	d
COLOR_B8_TO_B5	src/img/include/imlib.h	251;"	d
COLOR_BAYER_TO_RGB565	src/img/include/imlib.h	349;"	d
COLOR_BINARY_MAX	src/img/include/imlib.h	202;"	d
COLOR_BINARY_MIN	src/img/include/imlib.h	201;"	d
COLOR_BINARY_TO_GRAYSCALE	src/img/include/imlib.h	403;"	d
COLOR_BINARY_TO_RGB565	src/img/include/imlib.h	404;"	d
COLOR_BOUND_BINARY	src/img/include/imlib.h	175;"	d
COLOR_BOUND_GRAYSCALE	src/img/include/imlib.h	183;"	d
COLOR_BOUND_RGB565	src/img/include/imlib.h	191;"	d
COLOR_B_MAX	src/img/include/imlib.h	230;"	d
COLOR_B_MIN	src/img/include/imlib.h	229;"	d
COLOR_G6_MAX	src/img/include/imlib.h	214;"	d
COLOR_G6_MIN	src/img/include/imlib.h	213;"	d
COLOR_G6_TO_G8	src/img/include/imlib.h	243;"	d
COLOR_G8_MAX	src/img/include/imlib.h	221;"	d
COLOR_G8_MIN	src/img/include/imlib.h	220;"	d
COLOR_G8_TO_G6	src/img/include/imlib.h	250;"	d
COLOR_GRAYSCALE_BINARY_MAX	src/img/include/imlib.h	204;"	d
COLOR_GRAYSCALE_BINARY_MIN	src/img/include/imlib.h	203;"	d
COLOR_GRAYSCALE_MAX	src/img/include/imlib.h	209;"	d
COLOR_GRAYSCALE_MIN	src/img/include/imlib.h	208;"	d
COLOR_GRAYSCALE_TO_BINARY	src/img/include/imlib.h	407;"	d
COLOR_GRAYSCALE_TO_RGB565	src/img/include/imlib.h	408;"	d
COLOR_LAB_TO_RGB565	src/img/include/imlib.h	313;"	d
COLOR_L_MAX	src/img/include/imlib.h	226;"	d
COLOR_L_MIN	src/img/include/imlib.h	225;"	d
COLOR_R5_G6_B5_TO_RGB565	src/img/include/imlib.h	267;"	d
COLOR_R5_MAX	src/img/include/imlib.h	212;"	d
COLOR_R5_MIN	src/img/include/imlib.h	211;"	d
COLOR_R5_TO_R8	src/img/include/imlib.h	242;"	d
COLOR_R8_G8_B8_TO_RGB565	src/img/include/imlib.h	283;"	d
COLOR_R8_MAX	src/img/include/imlib.h	219;"	d
COLOR_R8_MIN	src/img/include/imlib.h	218;"	d
COLOR_R8_TO_R5	src/img/include/imlib.h	249;"	d
COLOR_RGB565_BINARY_MAX	src/img/include/imlib.h	206;"	d
COLOR_RGB565_BINARY_MIN	src/img/include/imlib.h	205;"	d
COLOR_RGB565_TO_A	src/img/include/imlib.h	291;"	d
COLOR_RGB565_TO_A	src/img/include/imlib.h	303;"	d
COLOR_RGB565_TO_B	src/img/include/imlib.h	292;"	d
COLOR_RGB565_TO_B	src/img/include/imlib.h	304;"	d
COLOR_RGB565_TO_B5	src/img/include/imlib.h	261;"	d
COLOR_RGB565_TO_B8	src/img/include/imlib.h	264;"	d
COLOR_RGB565_TO_BINARY	src/img/include/imlib.h	405;"	d
COLOR_RGB565_TO_G6	src/img/include/imlib.h	256;"	d
COLOR_RGB565_TO_G8	src/img/include/imlib.h	263;"	d
COLOR_RGB565_TO_GRAYSCALE	src/img/include/imlib.h	406;"	d
COLOR_RGB565_TO_L	src/img/include/imlib.h	290;"	d
COLOR_RGB565_TO_L	src/img/include/imlib.h	302;"	d
COLOR_RGB565_TO_R5	src/img/include/imlib.h	255;"	d
COLOR_RGB565_TO_R8	src/img/include/imlib.h	262;"	d
COLOR_RGB565_TO_U	src/img/include/imlib.h	294;"	d
COLOR_RGB565_TO_U	src/img/include/imlib.h	306;"	d
COLOR_RGB565_TO_V	src/img/include/imlib.h	295;"	d
COLOR_RGB565_TO_V	src/img/include/imlib.h	307;"	d
COLOR_RGB565_TO_Y	src/img/include/imlib.h	293;"	d
COLOR_RGB565_TO_Y	src/img/include/imlib.h	305;"	d
COLOR_THRESHOLD_BINARY	src/img/include/imlib.h	146;"	d
COLOR_THRESHOLD_GRAYSCALE	src/img/include/imlib.h	154;"	d
COLOR_THRESHOLD_RGB565	src/img/include/imlib.h	162;"	d
COLOR_U_MAX	src/img/include/imlib.h	235;"	d
COLOR_U_MIN	src/img/include/imlib.h	234;"	d
COLOR_V_MAX	src/img/include/imlib.h	237;"	d
COLOR_V_MIN	src/img/include/imlib.h	236;"	d
COLOR_YUV_TO_RGB565	src/img/include/imlib.h	338;"	d
COLOR_Y_MAX	src/img/include/imlib.h	233;"	d
COLOR_Y_MIN	src/img/include/imlib.h	232;"	d
COM1	src/include/ov2640_regs.h	107;"	d
COM10	src/include/ov2640_regs.h	117;"	d
COM19	src/include/ov2640_regs.h	137;"	d
COM2	src/include/ov2640_regs.h	159;"	d
COM22	src/include/ov2640_regs.h	139;"	d
COM25	src/include/ov2640_regs.h	140;"	d
COM2_OUT_DRIVE_1x	src/include/ov2640_regs.h	161;"	d
COM2_OUT_DRIVE_2x	src/include/ov2640_regs.h	162;"	d
COM2_OUT_DRIVE_3x	src/include/ov2640_regs.h	163;"	d
COM2_OUT_DRIVE_4x	src/include/ov2640_regs.h	164;"	d
COM2_STDBY	src/include/ov2640_regs.h	160;"	d
COM3	src/include/ov2640_regs.h	166;"	d
COM3_BAND_50Hz	src/include/ov2640_regs.h	168;"	d
COM3_BAND_60Hz	src/include/ov2640_regs.h	169;"	d
COM3_BAND_AUTO	src/include/ov2640_regs.h	170;"	d
COM3_BAND_SET	src/include/ov2640_regs.h	171;"	d
COM3_DEFAULT	src/include/ov2640_regs.h	167;"	d
COM4	src/include/ov2640_regs.h	110;"	d
COM7	src/include/ov2640_regs.h	173;"	d
COM7_COLOR_BAR	src/include/ov2640_regs.h	179;"	d
COM7_GET_RES	src/include/ov2640_regs.h	180;"	d
COM7_RES_CIF	src/include/ov2640_regs.h	177;"	d
COM7_RES_SVGA	src/include/ov2640_regs.h	176;"	d
COM7_RES_UXGA	src/include/ov2640_regs.h	175;"	d
COM7_SRST	src/include/ov2640_regs.h	174;"	d
COM7_ZOOM_EN	src/include/ov2640_regs.h	178;"	d
COM8	src/include/ov2640_regs.h	182;"	d
COM8_AEC_EN	src/include/ov2640_regs.h	186;"	d
COM8_AGC_EN	src/include/ov2640_regs.h	185;"	d
COM8_BNDF_EN	src/include/ov2640_regs.h	184;"	d
COM8_DEFAULT	src/include/ov2640_regs.h	183;"	d
COM8_SET	src/include/ov2640_regs.h	187;"	d
COM8_SET_AEC	src/include/ov2640_regs.h	188;"	d
COM9	src/include/ov2640_regs.h	190;"	d
COM9_AGC_GAIN_128x	src/include/ov2640_regs.h	198;"	d
COM9_AGC_GAIN_16x	src/include/ov2640_regs.h	195;"	d
COM9_AGC_GAIN_2x	src/include/ov2640_regs.h	192;"	d
COM9_AGC_GAIN_32x	src/include/ov2640_regs.h	196;"	d
COM9_AGC_GAIN_4x	src/include/ov2640_regs.h	193;"	d
COM9_AGC_GAIN_64x	src/include/ov2640_regs.h	197;"	d
COM9_AGC_GAIN_8x	src/include/ov2640_regs.h	194;"	d
COM9_AGC_SET	src/include/ov2640_regs.h	199;"	d
COM9_DEFAULT	src/include/ov2640_regs.h	191;"	d
CORE_NUM	src/img/hough.c	17;"	d	file:
CORE_NUM	src/img/jpeg.c	30;"	d	file:
CORNER_AGAST	src/img/include/imlib.h	/^    CORNER_AGAST$/;"	e	enum:corner_detector_type
CORNER_FAST	src/img/include/imlib.h	/^    CORNER_FAST,$/;"	e	enum:corner_detector_type
CPP_OBJ	test/Makefile	/^CPP_OBJ =  $/;"	m
CPP_OBJ	zbar/makefile	/^CPP_OBJ =  $/;"	m
CPP_SRC	test/Makefile	/^CPP_SRC =  $/;"	m
CPP_SRC	zbar/makefile	/^CPP_SRC =  $/;"	m
CTRL0	src/include/ov2640_regs.h	44;"	d
CTRL0_AEC_EN	src/include/ov2640_regs.h	45;"	d
CTRL0_AEC_SEL	src/include/ov2640_regs.h	46;"	d
CTRL0_RAW_EN	src/include/ov2640_regs.h	52;"	d
CTRL0_RGB_EN	src/include/ov2640_regs.h	51;"	d
CTRL0_STAT_SEL	src/include/ov2640_regs.h	47;"	d
CTRL0_VFIRST	src/include/ov2640_regs.h	48;"	d
CTRL0_YUV422	src/include/ov2640_regs.h	49;"	d
CTRL0_YUV_EN	src/include/ov2640_regs.h	50;"	d
CTRL1	src/include/ov2640_regs.h	30;"	d
CTRL1_AWB	src/include/ov2640_regs.h	201;"	d
CTRL2	src/include/ov2640_regs.h	54;"	d
CTRL2_CMX_EN	src/include/ov2640_regs.h	59;"	d
CTRL2_DCW_EN	src/include/ov2640_regs.h	55;"	d
CTRL2_SDE_EN	src/include/ov2640_regs.h	56;"	d
CTRL2_UV_ADJ_EN	src/include/ov2640_regs.h	57;"	d
CTRL2_UV_AVG_EN	src/include/ov2640_regs.h	58;"	d
CTRL3	src/include/ov2640_regs.h	61;"	d
CTRL3_BPC_EN	src/include/ov2640_regs.h	62;"	d
CTRL3_WPC_EN	src/include/ov2640_regs.h	63;"	d
CTRLI	src/include/ov2640_regs.h	40;"	d
CTRLI_LP_DP	src/include/ov2640_regs.h	41;"	d
CTRLI_ROUND	src/include/ov2640_regs.h	42;"	d
C_OBJ	test/Makefile	/^C_OBJ = $(patsubst %c, %o, $(C_SRC))  $/;"	m
C_OBJ	zbar/makefile	/^C_OBJ = $(patsubst %c, %o, $(C_SRC))  $/;"	m
CacheFillQuad	src/img/dmtx.c	/^CacheFillQuad(DmtxDecode *dec, DmtxPixelLoc p0, DmtxPixelLoc p1, DmtxPixelLoc p2, DmtxPixelLoc p3)$/;"	f	file:
Chinese	pybind_test/whjy.h	/^    int Chinese;  $/;"	m	struct:student
ClipHistogram	src/img/clahe.c	/^void ClipHistogram (unsigned long* pulHistogram, unsigned int$/;"	f
Compare	src/img/agast.c	12;"	d	file:
Compare	src/img/fast.c	11;"	d	file:
CountJumpTally	src/img/dmtx.c	/^CountJumpTally(DmtxDecode *dec, DmtxRegion *reg, int xStart, int yStart, DmtxDirection dir)$/;"	f	file:
DATABAR_MAX_SEGMENTS	src/img/zbar.c	2563;"	d	file:
DBGLOG_DEBUG	src/umm_malloc.c	95;"	d	file:
DBGLOG_TRACE	src/umm_malloc.c	93;"	d	file:
DBG_TIME	src/img/hough.c	21;"	d	file:
DBG_TIME	src/img/jpeg.c	1084;"	d	file:
DBL_EPSILON	src/img/lsd.c	30;"	d	file:
DBL_EPSILON	src/img/lsd.c	31;"	d	file:
DBL_MAX	src/img/apriltag.c	56;"	d	file:
DBL_MAX	src/img/apriltag.c	57;"	d	file:
DBL_MAX	src/img/dmtx.c	27;"	d	file:
DBL_MAX	src/img/dmtx.c	28;"	d	file:
DBL_MAX	src/img/lsd.c	28;"	d	file:
DBL_MAX	src/img/lsd.c	29;"	d	file:
DBL_MIN	src/img/apriltag.c	54;"	d	file:
DBL_MIN	src/img/apriltag.c	55;"	d	file:
DBL_MIN	src/img/dmtx.c	25;"	d	file:
DBL_MIN	src/img/dmtx.c	26;"	d	file:
DBL_MIN	src/img/lsd.c	26;"	d	file:
DBL_MIN	src/img/lsd.c	27;"	d	file:
DCMI_D0_PIN	src/include/omv_boardconfig.h	150;"	d
DCMI_D0_PORT	src/include/omv_boardconfig.h	159;"	d
DCMI_D1_PIN	src/include/omv_boardconfig.h	151;"	d
DCMI_D1_PORT	src/include/omv_boardconfig.h	160;"	d
DCMI_D2_PIN	src/include/omv_boardconfig.h	152;"	d
DCMI_D2_PORT	src/include/omv_boardconfig.h	161;"	d
DCMI_D3_PIN	src/include/omv_boardconfig.h	153;"	d
DCMI_D3_PORT	src/include/omv_boardconfig.h	162;"	d
DCMI_D4_PIN	src/include/omv_boardconfig.h	154;"	d
DCMI_D4_PORT	src/include/omv_boardconfig.h	163;"	d
DCMI_D5_PIN	src/include/omv_boardconfig.h	155;"	d
DCMI_D5_PORT	src/include/omv_boardconfig.h	164;"	d
DCMI_D6_PIN	src/include/omv_boardconfig.h	156;"	d
DCMI_D6_PORT	src/include/omv_boardconfig.h	165;"	d
DCMI_D7_PIN	src/include/omv_boardconfig.h	157;"	d
DCMI_D7_PORT	src/include/omv_boardconfig.h	166;"	d
DCMI_FSIN_HIGH	src/include/omv_boardconfig.h	177;"	d
DCMI_FSIN_LOW	src/include/omv_boardconfig.h	176;"	d
DCMI_FSIN_PIN	src/include/omv_boardconfig.h	147;"	d
DCMI_FSIN_PORT	src/include/omv_boardconfig.h	148;"	d
DCMI_HSYNC_PIN	src/include/omv_boardconfig.h	168;"	d
DCMI_HSYNC_PORT	src/include/omv_boardconfig.h	172;"	d
DCMI_PWDN_HIGH	src/include/omv_boardconfig.h	41;"	d
DCMI_PWDN_LOW	src/include/omv_boardconfig.h	40;"	d
DCMI_PWDN_PIN	src/include/omv_boardconfig.h	144;"	d
DCMI_PWDN_PORT	src/include/omv_boardconfig.h	145;"	d
DCMI_PXCLK_PIN	src/include/omv_boardconfig.h	170;"	d
DCMI_PXCLK_PORT	src/include/omv_boardconfig.h	174;"	d
DCMI_RESET_HIGH	src/include/omv_boardconfig.h	39;"	d
DCMI_RESET_LOW	src/include/omv_boardconfig.h	38;"	d
DCMI_RESET_PIN	src/include/omv_boardconfig.h	141;"	d
DCMI_RESET_PORT	src/include/omv_boardconfig.h	142;"	d
DCMI_TIM	src/include/omv_boardconfig.h	132;"	d
DCMI_TIM_AF	src/include/omv_boardconfig.h	135;"	d
DCMI_TIM_CHANNEL	src/include/omv_boardconfig.h	136;"	d
DCMI_TIM_CLK_DISABLE	src/include/omv_boardconfig.h	138;"	d
DCMI_TIM_CLK_ENABLE	src/include/omv_boardconfig.h	137;"	d
DCMI_TIM_PCLK_FREQ	src/include/omv_boardconfig.h	139;"	d
DCMI_TIM_PIN	src/include/omv_boardconfig.h	133;"	d
DCMI_TIM_PORT	src/include/omv_boardconfig.h	134;"	d
DCMI_VSYNC_IRQN	src/include/omv_boardconfig.h	179;"	d
DCMI_VSYNC_IRQ_LINE	src/include/omv_boardconfig.h	180;"	d
DCMI_VSYNC_PIN	src/include/omv_boardconfig.h	169;"	d
DCMI_VSYNC_PORT	src/include/omv_boardconfig.h	173;"	d
DEBUG	pybind_test/conversion.c	4;"	d	file:
DEBUG	test/conversion.c	4;"	d	file:
DEBUG_LEVEL	zbar/decoder.c	37;"	d	file:
DEBUG_LEVEL	zbar/qr_finder.c	7;"	d	file:
DEBUG_LEVEL	zbar/scanner.c	32;"	d	file:
DEBUG_LINE	test/mf_qr.c	16;"	d	file:
DEBUG_LINE	test/mf_qr.c	18;"	d	file:
DECODE_WINDOW	src/img/zbar.c	2901;"	d	file:
DECODE_WINDOW	zbar/decoder.h	54;"	d
DESCALE	src/img/jpeg.c	235;"	d	file:
DESC_LBP	src/img/include/imlib.h	/^    DESC_LBP,$/;"	e	enum:descriptor_type
DESC_ORB	src/img/include/imlib.h	/^    DESC_ORB,$/;"	e	enum:descriptor_type
DEV_CONVERTER	src/py/py_lcd.c	/^    DEV_CONVERTER$/;"	e	enum:__anon56	file:
DEV_CUBE_IPS_240x240	src/py/py_lcd.c	/^    DEV_CUBE_IPS_240x240,$/;"	e	enum:__anon56	file:
DEV_M5STICK	src/py/py_lcd.c	/^    DEV_M5STICK,$/;"	e	enum:__anon56	file:
DEV_NONE	src/py/py_lcd.c	/^    DEV_NONE,$/;"	e	enum:__anon56	file:
DEV_SHIELD	src/py/py_lcd.c	/^    DEV_SHIELD, \/\/ default$/;"	e	enum:__anon56	file:
DEV_TWATCH	src/py/py_lcd.c	/^    DEV_TWATCH,$/;"	e	enum:__anon56	file:
DISABLE_OPT	src/include/common.h	19;"	d
DMTX_CHECK_BOUNDS	src/img/dmtx.c	112;"	d	file:
DMTX_HOUGH_RES	src/img/dmtx.c	2199;"	d	file:
DO_CONN	src/img/apriltag.c	10629;"	d	file:
DO_CONN	src/img/apriltag.c	10676;"	d	file:
DO_UNIONFIND	src/img/apriltag.c	10318;"	d	file:
DO_UNIONFIND	src/img/apriltag.c	10342;"	d	file:
DPRP	src/include/ov2640_regs.h	20;"	d
DecodeDataStream	src/img/dmtx.c	/^DecodeDataStream(DmtxMessage *msg, int sizeIdx, unsigned char *outputStart)$/;"	f	file:
DecodeSchemeAscii	src/img/dmtx.c	/^DecodeSchemeAscii(DmtxMessage *msg, unsigned char *ptr, unsigned char *dataEnd)$/;"	f	file:
DecodeSchemeBase256	src/img/dmtx.c	/^DecodeSchemeBase256(DmtxMessage *msg, unsigned char *ptr, unsigned char *dataEnd)$/;"	f	file:
DecodeSchemeC40Text	src/img/dmtx.c	/^DecodeSchemeC40Text(DmtxMessage *msg, unsigned char *ptr, unsigned char *dataEnd, DmtxScheme encScheme)$/;"	f	file:
DecodeSchemeEdifact	src/img/dmtx.c	/^DecodeSchemeEdifact(DmtxMessage *msg, unsigned char *ptr, unsigned char *dataEnd)$/;"	f	file:
DecodeSchemeX12	src/img/dmtx.c	/^DecodeSchemeX12(DmtxMessage *msg, unsigned char *ptr, unsigned char *dataEnd)$/;"	f	file:
DistanceSquared	src/img/dmtx.c	/^DistanceSquared(DmtxPixelLoc a, DmtxPixelLoc b)$/;"	f	file:
DmtxAlmostInfinity	src/img/dmtx.c	576;"	d	file:
DmtxAlmostZero	src/img/dmtx.c	575;"	d	file:
DmtxBestLine	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxBestLine;$/;"	t	typeref:struct:DmtxBestLine_struct	file:
DmtxBestLine_struct	src/img/dmtx.c	/^typedef struct DmtxBestLine_struct {$/;"	s	file:
DmtxBoolean	src/img/dmtx.c	91;"	d	file:
DmtxBresLine	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxBresLine;$/;"	t	typeref:struct:DmtxBresLine_struct	file:
DmtxBresLine_struct	src/img/dmtx.c	/^typedef struct DmtxBresLine_struct {$/;"	s	file:
DmtxByte	src/img/dmtx.c	/^typedef unsigned char DmtxByte;$/;"	t	file:
DmtxByteList	src/img/dmtx.c	/^typedef struct DmtxByteList_struct DmtxByteList;$/;"	t	typeref:struct:DmtxByteList_struct	file:
DmtxByteList_struct	src/img/dmtx.c	/^struct DmtxByteList_struct$/;"	s	file:
DmtxC40TextBasicSet	src/img/dmtx.c	598;"	d	file:
DmtxC40TextShift1	src/img/dmtx.c	599;"	d	file:
DmtxC40TextShift2	src/img/dmtx.c	600;"	d	file:
DmtxC40TextShift3	src/img/dmtx.c	601;"	d	file:
DmtxChannelCannotUnlatch	src/img/dmtx.c	608;"	d	file:
DmtxChannelUnsupportedChar	src/img/dmtx.c	607;"	d	file:
DmtxChannelValid	src/img/dmtx.c	606;"	d	file:
DmtxDecode	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxDecode;$/;"	t	typeref:struct:DmtxDecode_struct	file:
DmtxDecode_struct	src/img/dmtx.c	/^typedef struct DmtxDecode_struct {$/;"	s	file:
DmtxDirDown	src/img/dmtx.c	/^   DmtxDirDown               = 0x01 << 2,$/;"	e	enum:__anon13	file:
DmtxDirHorizontal	src/img/dmtx.c	/^   DmtxDirHorizontal         = DmtxDirLeft  | DmtxDirRight,$/;"	e	enum:__anon13	file:
DmtxDirLeft	src/img/dmtx.c	/^   DmtxDirLeft               = 0x01 << 1,$/;"	e	enum:__anon13	file:
DmtxDirLeftDown	src/img/dmtx.c	/^   DmtxDirLeftDown           = DmtxDirLeft  | DmtxDirDown$/;"	e	enum:__anon13	file:
DmtxDirNone	src/img/dmtx.c	/^   DmtxDirNone               = 0x00,$/;"	e	enum:__anon13	file:
DmtxDirRight	src/img/dmtx.c	/^   DmtxDirRight              = 0x01 << 3,$/;"	e	enum:__anon13	file:
DmtxDirRightUp	src/img/dmtx.c	/^   DmtxDirRightUp            = DmtxDirRight | DmtxDirUp,$/;"	e	enum:__anon13	file:
DmtxDirUp	src/img/dmtx.c	/^   DmtxDirUp                 = 0x01 << 0,$/;"	e	enum:__anon13	file:
DmtxDirVertical	src/img/dmtx.c	/^   DmtxDirVertical           = DmtxDirUp    | DmtxDirDown,$/;"	e	enum:__anon13	file:
DmtxDirection	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxDirection;$/;"	t	typeref:enum:__anon13	file:
DmtxEdge	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxEdge;$/;"	t	typeref:enum:__anon19	file:
DmtxEdgeBottom	src/img/dmtx.c	/^   DmtxEdgeBottom            = 0x01 << 1,$/;"	e	enum:__anon19	file:
DmtxEdgeLeft	src/img/dmtx.c	/^   DmtxEdgeLeft              = 0x01 << 2,$/;"	e	enum:__anon19	file:
DmtxEdgeRight	src/img/dmtx.c	/^   DmtxEdgeRight             = 0x01 << 3$/;"	e	enum:__anon19	file:
DmtxEdgeTop	src/img/dmtx.c	/^   DmtxEdgeTop               = 0x01 << 0,$/;"	e	enum:__anon19	file:
DmtxFail	src/img/dmtx.c	89;"	d	file:
DmtxFalse	src/img/dmtx.c	93;"	d	file:
DmtxFlip	src/img/dmtx.c	/^} __attribute__((aligned(8)))DmtxFlip;$/;"	t	typeref:enum:__anon17	file:
DmtxFlipNone	src/img/dmtx.c	/^  DmtxFlipNone               = 0x00,$/;"	e	enum:__anon17	file:
DmtxFlipX	src/img/dmtx.c	/^  DmtxFlipX                  = 0x01 << 0,$/;"	e	enum:__anon17	file:
DmtxFlipY	src/img/dmtx.c	/^  DmtxFlipY                  = 0x01 << 1$/;"	e	enum:__anon17	file:
DmtxFollow	src/img/dmtx.c	/^} __attribute__((aligned(8)))DmtxFollow;$/;"	t	typeref:struct:DmtxFollow_struct	file:
DmtxFollow_struct	src/img/dmtx.c	/^typedef struct DmtxFollow_struct {$/;"	s	file:
DmtxFormatMatrix	src/img/dmtx.c	95;"	d	file:
DmtxFormatMosaic	src/img/dmtx.c	96;"	d	file:
DmtxImage	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxImage;$/;"	t	typeref:struct:DmtxImage_struct	file:
DmtxImage_struct	src/img/dmtx.c	/^typedef struct DmtxImage_struct {$/;"	s	file:
DmtxMaskBit	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxMaskBit;$/;"	t	typeref:enum:__anon20	file:
DmtxMaskBit1	src/img/dmtx.c	/^   DmtxMaskBit1              = 0x01 << 7$/;"	e	enum:__anon20	file:
DmtxMaskBit2	src/img/dmtx.c	/^   DmtxMaskBit2              = 0x01 << 6,$/;"	e	enum:__anon20	file:
DmtxMaskBit3	src/img/dmtx.c	/^   DmtxMaskBit3              = 0x01 << 5,$/;"	e	enum:__anon20	file:
DmtxMaskBit4	src/img/dmtx.c	/^   DmtxMaskBit4              = 0x01 << 4,$/;"	e	enum:__anon20	file:
DmtxMaskBit5	src/img/dmtx.c	/^   DmtxMaskBit5              = 0x01 << 3,$/;"	e	enum:__anon20	file:
DmtxMaskBit6	src/img/dmtx.c	/^   DmtxMaskBit6              = 0x01 << 2,$/;"	e	enum:__anon20	file:
DmtxMaskBit7	src/img/dmtx.c	/^   DmtxMaskBit7              = 0x01 << 1,$/;"	e	enum:__anon20	file:
DmtxMaskBit8	src/img/dmtx.c	/^   DmtxMaskBit8              = 0x01 << 0,$/;"	e	enum:__anon20	file:
DmtxMatrix3	src/img/dmtx.c	/^typedef double DmtxMatrix3[3][3];$/;"	t	file:
DmtxMessage	src/img/dmtx.c	/^} __attribute__((aligned(8)))DmtxMessage;$/;"	t	typeref:struct:DmtxMessage_struct	file:
DmtxMessage_struct	src/img/dmtx.c	/^typedef struct DmtxMessage_struct {$/;"	s	file:
DmtxModuleAssigned	src/img/dmtx.c	108;"	d	file:
DmtxModuleData	src/img/dmtx.c	110;"	d	file:
DmtxModuleOff	src/img/dmtx.c	101;"	d	file:
DmtxModuleOn	src/img/dmtx.c	106;"	d	file:
DmtxModuleOnBlue	src/img/dmtx.c	104;"	d	file:
DmtxModuleOnGreen	src/img/dmtx.c	103;"	d	file:
DmtxModuleOnRGB	src/img/dmtx.c	105;"	d	file:
DmtxModuleOnRed	src/img/dmtx.c	102;"	d	file:
DmtxModuleUnsure	src/img/dmtx.c	107;"	d	file:
DmtxModuleVisited	src/img/dmtx.c	109;"	d	file:
DmtxPack16bppBGR	src/img/dmtx.c	/^   DmtxPack16bppBGR,$/;"	e	enum:__anon16	file:
DmtxPack16bppBGRX	src/img/dmtx.c	/^   DmtxPack16bppBGRX,$/;"	e	enum:__anon16	file:
DmtxPack16bppRGB	src/img/dmtx.c	/^   DmtxPack16bppRGB          = 400,$/;"	e	enum:__anon16	file:
DmtxPack16bppRGBX	src/img/dmtx.c	/^   DmtxPack16bppRGBX,$/;"	e	enum:__anon16	file:
DmtxPack16bppXBGR	src/img/dmtx.c	/^   DmtxPack16bppXBGR,$/;"	e	enum:__anon16	file:
DmtxPack16bppXRGB	src/img/dmtx.c	/^   DmtxPack16bppXRGB,$/;"	e	enum:__anon16	file:
DmtxPack16bppYCbCr	src/img/dmtx.c	/^   DmtxPack16bppYCbCr,$/;"	e	enum:__anon16	file:
DmtxPack1bppK	src/img/dmtx.c	/^   DmtxPack1bppK             = 200,$/;"	e	enum:__anon16	file:
DmtxPack24bppBGR	src/img/dmtx.c	/^   DmtxPack24bppBGR,$/;"	e	enum:__anon16	file:
DmtxPack24bppRGB	src/img/dmtx.c	/^   DmtxPack24bppRGB          = 500,$/;"	e	enum:__anon16	file:
DmtxPack24bppYCbCr	src/img/dmtx.c	/^   DmtxPack24bppYCbCr,$/;"	e	enum:__anon16	file:
DmtxPack32bppBGRX	src/img/dmtx.c	/^   DmtxPack32bppBGRX,$/;"	e	enum:__anon16	file:
DmtxPack32bppCMYK	src/img/dmtx.c	/^   DmtxPack32bppCMYK$/;"	e	enum:__anon16	file:
DmtxPack32bppRGBX	src/img/dmtx.c	/^   DmtxPack32bppRGBX         = 600,$/;"	e	enum:__anon16	file:
DmtxPack32bppXBGR	src/img/dmtx.c	/^   DmtxPack32bppXBGR,$/;"	e	enum:__anon16	file:
DmtxPack32bppXRGB	src/img/dmtx.c	/^   DmtxPack32bppXRGB,$/;"	e	enum:__anon16	file:
DmtxPack8bppK	src/img/dmtx.c	/^   DmtxPack8bppK             = 300,$/;"	e	enum:__anon16	file:
DmtxPackCustom	src/img/dmtx.c	/^   DmtxPackCustom            = 100,$/;"	e	enum:__anon16	file:
DmtxPackOrder	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxPackOrder;$/;"	t	typeref:enum:__anon16	file:
DmtxPass	src/img/dmtx.c	88;"	d	file:
DmtxPassFail	src/img/dmtx.c	87;"	d	file:
DmtxPixelLoc	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxPixelLoc;$/;"	t	typeref:struct:DmtxPixelLoc_struct	file:
DmtxPixelLoc_struct	src/img/dmtx.c	/^typedef struct DmtxPixelLoc_struct {$/;"	s	file:
DmtxPointFlow	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxPointFlow;$/;"	t	typeref:struct:DmtxPointFlow_struct	file:
DmtxPointFlow_struct	src/img/dmtx.c	/^typedef struct DmtxPointFlow_struct {$/;"	s	file:
DmtxPropBitsPerPixel	src/img/dmtx.c	/^   DmtxPropBitsPerPixel,$/;"	e	enum:__anon15	file:
DmtxPropBytesPerPixel	src/img/dmtx.c	/^   DmtxPropBytesPerPixel,$/;"	e	enum:__anon15	file:
DmtxPropChannelCount	src/img/dmtx.c	/^   DmtxPropChannelCount,$/;"	e	enum:__anon15	file:
DmtxPropEdgeMax	src/img/dmtx.c	/^   DmtxPropEdgeMax,$/;"	e	enum:__anon15	file:
DmtxPropEdgeMin	src/img/dmtx.c	/^   DmtxPropEdgeMin           = 200,$/;"	e	enum:__anon15	file:
DmtxPropEdgeThresh	src/img/dmtx.c	/^   DmtxPropEdgeThresh,$/;"	e	enum:__anon15	file:
DmtxPropHeight	src/img/dmtx.c	/^   DmtxPropHeight,$/;"	e	enum:__anon15	file:
DmtxPropImageFlip	src/img/dmtx.c	/^   DmtxPropImageFlip,$/;"	e	enum:__anon15	file:
DmtxPropMarginSize	src/img/dmtx.c	/^   DmtxPropMarginSize,$/;"	e	enum:__anon15	file:
DmtxPropModuleSize	src/img/dmtx.c	/^   DmtxPropModuleSize,$/;"	e	enum:__anon15	file:
DmtxPropPixelPacking	src/img/dmtx.c	/^   DmtxPropPixelPacking,$/;"	e	enum:__anon15	file:
DmtxPropRowPadBytes	src/img/dmtx.c	/^   DmtxPropRowPadBytes,$/;"	e	enum:__anon15	file:
DmtxPropRowSizeBytes	src/img/dmtx.c	/^   DmtxPropRowSizeBytes,$/;"	e	enum:__anon15	file:
DmtxPropScale	src/img/dmtx.c	/^   DmtxPropScale$/;"	e	enum:__anon15	file:
DmtxPropScanGap	src/img/dmtx.c	/^   DmtxPropScanGap,$/;"	e	enum:__anon15	file:
DmtxPropScheme	src/img/dmtx.c	/^   DmtxPropScheme            = 100,$/;"	e	enum:__anon15	file:
DmtxPropSizeRequest	src/img/dmtx.c	/^   DmtxPropSizeRequest,$/;"	e	enum:__anon15	file:
DmtxPropSquareDevn	src/img/dmtx.c	/^   DmtxPropSquareDevn,$/;"	e	enum:__anon15	file:
DmtxPropSymbolSize	src/img/dmtx.c	/^   DmtxPropSymbolSize,$/;"	e	enum:__anon15	file:
DmtxPropWidth	src/img/dmtx.c	/^   DmtxPropWidth             = 300,$/;"	e	enum:__anon15	file:
DmtxPropXmax	src/img/dmtx.c	/^   DmtxPropXmax,$/;"	e	enum:__anon15	file:
DmtxPropXmin	src/img/dmtx.c	/^   DmtxPropXmin              = 400,$/;"	e	enum:__anon15	file:
DmtxPropYmax	src/img/dmtx.c	/^   DmtxPropYmax,$/;"	e	enum:__anon15	file:
DmtxPropYmin	src/img/dmtx.c	/^   DmtxPropYmin,$/;"	e	enum:__anon15	file:
DmtxProperty	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxProperty;$/;"	t	typeref:enum:__anon15	file:
DmtxRange	src/img/dmtx.c	/^} __attribute__((aligned(8)))DmtxRange;$/;"	t	typeref:enum:__anon18	file:
DmtxRangeBad	src/img/dmtx.c	/^   DmtxRangeBad,$/;"	e	enum:__anon18	file:
DmtxRangeEnd	src/img/dmtx.c	/^   DmtxRangeEnd$/;"	e	enum:__anon18	file:
DmtxRangeGood	src/img/dmtx.c	/^   DmtxRangeGood,$/;"	e	enum:__anon18	file:
DmtxRay2	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxRay2;$/;"	t	typeref:struct:DmtxRay2_struct	file:
DmtxRay2_struct	src/img/dmtx.c	/^typedef struct DmtxRay2_struct {$/;"	s	file:
DmtxRegion	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxRegion;$/;"	t	typeref:struct:DmtxRegion_struct	file:
DmtxRegion_struct	src/img/dmtx.c	/^typedef struct DmtxRegion_struct {$/;"	s	file:
DmtxScanGrid	src/img/dmtx.c	/^} __attribute__((aligned(8)))DmtxScanGrid;$/;"	t	typeref:struct:DmtxScanGrid_struct	file:
DmtxScanGrid_struct	src/img/dmtx.c	/^typedef struct DmtxScanGrid_struct {$/;"	s	file:
DmtxScheme	src/img/dmtx.c	/^} __attribute__((aligned(8)))DmtxScheme;$/;"	t	typeref:enum:__anon11	file:
DmtxSchemeAscii	src/img/dmtx.c	/^   DmtxSchemeAscii           =  0,$/;"	e	enum:__anon11	file:
DmtxSchemeAutoBest	src/img/dmtx.c	/^   DmtxSchemeAutoBest        = -1,$/;"	e	enum:__anon11	file:
DmtxSchemeAutoFast	src/img/dmtx.c	/^   DmtxSchemeAutoFast        = -2,$/;"	e	enum:__anon11	file:
DmtxSchemeBase256	src/img/dmtx.c	/^   DmtxSchemeBase256$/;"	e	enum:__anon11	file:
DmtxSchemeC40	src/img/dmtx.c	/^   DmtxSchemeC40,$/;"	e	enum:__anon11	file:
DmtxSchemeEdifact	src/img/dmtx.c	/^   DmtxSchemeEdifact,$/;"	e	enum:__anon11	file:
DmtxSchemeText	src/img/dmtx.c	/^   DmtxSchemeText,$/;"	e	enum:__anon11	file:
DmtxSchemeX12	src/img/dmtx.c	/^   DmtxSchemeX12,$/;"	e	enum:__anon11	file:
DmtxSymAttribBlockErrorWords	src/img/dmtx.c	/^   DmtxSymAttribBlockErrorWords,$/;"	e	enum:__anon14	file:
DmtxSymAttribBlockMaxCorrectable	src/img/dmtx.c	/^   DmtxSymAttribBlockMaxCorrectable,$/;"	e	enum:__anon14	file:
DmtxSymAttribDataRegionCols	src/img/dmtx.c	/^   DmtxSymAttribDataRegionCols,$/;"	e	enum:__anon14	file:
DmtxSymAttribDataRegionRows	src/img/dmtx.c	/^   DmtxSymAttribDataRegionRows,$/;"	e	enum:__anon14	file:
DmtxSymAttribHorizDataRegions	src/img/dmtx.c	/^   DmtxSymAttribHorizDataRegions,$/;"	e	enum:__anon14	file:
DmtxSymAttribInterleavedBlocks	src/img/dmtx.c	/^   DmtxSymAttribInterleavedBlocks,$/;"	e	enum:__anon14	file:
DmtxSymAttribMappingMatrixCols	src/img/dmtx.c	/^   DmtxSymAttribMappingMatrixCols,$/;"	e	enum:__anon14	file:
DmtxSymAttribMappingMatrixRows	src/img/dmtx.c	/^   DmtxSymAttribMappingMatrixRows,$/;"	e	enum:__anon14	file:
DmtxSymAttribSymbolCols	src/img/dmtx.c	/^   DmtxSymAttribSymbolCols,$/;"	e	enum:__anon14	file:
DmtxSymAttribSymbolDataWords	src/img/dmtx.c	/^   DmtxSymAttribSymbolDataWords,$/;"	e	enum:__anon14	file:
DmtxSymAttribSymbolErrorWords	src/img/dmtx.c	/^   DmtxSymAttribSymbolErrorWords,$/;"	e	enum:__anon14	file:
DmtxSymAttribSymbolMaxCorrectable	src/img/dmtx.c	/^   DmtxSymAttribSymbolMaxCorrectable$/;"	e	enum:__anon14	file:
DmtxSymAttribSymbolRows	src/img/dmtx.c	/^   DmtxSymAttribSymbolRows,$/;"	e	enum:__anon14	file:
DmtxSymAttribVertDataRegions	src/img/dmtx.c	/^   DmtxSymAttribVertDataRegions,$/;"	e	enum:__anon14	file:
DmtxSymAttribute	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxSymAttribute;$/;"	t	typeref:enum:__anon14	file:
DmtxSymbol104x104	src/img/dmtx.c	/^   DmtxSymbol104x104,$/;"	e	enum:__anon12	file:
DmtxSymbol10x10	src/img/dmtx.c	/^   DmtxSymbol10x10           =  0,$/;"	e	enum:__anon12	file:
DmtxSymbol120x120	src/img/dmtx.c	/^   DmtxSymbol120x120,$/;"	e	enum:__anon12	file:
DmtxSymbol12x12	src/img/dmtx.c	/^   DmtxSymbol12x12,$/;"	e	enum:__anon12	file:
DmtxSymbol12x26	src/img/dmtx.c	/^   DmtxSymbol12x26,$/;"	e	enum:__anon12	file:
DmtxSymbol12x36	src/img/dmtx.c	/^   DmtxSymbol12x36,$/;"	e	enum:__anon12	file:
DmtxSymbol132x132	src/img/dmtx.c	/^   DmtxSymbol132x132,$/;"	e	enum:__anon12	file:
DmtxSymbol144x144	src/img/dmtx.c	/^   DmtxSymbol144x144,$/;"	e	enum:__anon12	file:
DmtxSymbol14x14	src/img/dmtx.c	/^   DmtxSymbol14x14,$/;"	e	enum:__anon12	file:
DmtxSymbol16x16	src/img/dmtx.c	/^   DmtxSymbol16x16,$/;"	e	enum:__anon12	file:
DmtxSymbol16x36	src/img/dmtx.c	/^   DmtxSymbol16x36,$/;"	e	enum:__anon12	file:
DmtxSymbol16x48	src/img/dmtx.c	/^   DmtxSymbol16x48$/;"	e	enum:__anon12	file:
DmtxSymbol18x18	src/img/dmtx.c	/^   DmtxSymbol18x18,$/;"	e	enum:__anon12	file:
DmtxSymbol20x20	src/img/dmtx.c	/^   DmtxSymbol20x20,$/;"	e	enum:__anon12	file:
DmtxSymbol22x22	src/img/dmtx.c	/^   DmtxSymbol22x22,$/;"	e	enum:__anon12	file:
DmtxSymbol24x24	src/img/dmtx.c	/^   DmtxSymbol24x24,$/;"	e	enum:__anon12	file:
DmtxSymbol26x26	src/img/dmtx.c	/^   DmtxSymbol26x26,$/;"	e	enum:__anon12	file:
DmtxSymbol32x32	src/img/dmtx.c	/^   DmtxSymbol32x32,$/;"	e	enum:__anon12	file:
DmtxSymbol36x36	src/img/dmtx.c	/^   DmtxSymbol36x36,$/;"	e	enum:__anon12	file:
DmtxSymbol40x40	src/img/dmtx.c	/^   DmtxSymbol40x40,$/;"	e	enum:__anon12	file:
DmtxSymbol44x44	src/img/dmtx.c	/^   DmtxSymbol44x44,$/;"	e	enum:__anon12	file:
DmtxSymbol48x48	src/img/dmtx.c	/^   DmtxSymbol48x48,$/;"	e	enum:__anon12	file:
DmtxSymbol52x52	src/img/dmtx.c	/^   DmtxSymbol52x52,$/;"	e	enum:__anon12	file:
DmtxSymbol64x64	src/img/dmtx.c	/^   DmtxSymbol64x64,$/;"	e	enum:__anon12	file:
DmtxSymbol72x72	src/img/dmtx.c	/^   DmtxSymbol72x72,$/;"	e	enum:__anon12	file:
DmtxSymbol80x80	src/img/dmtx.c	/^   DmtxSymbol80x80,$/;"	e	enum:__anon12	file:
DmtxSymbol88x88	src/img/dmtx.c	/^   DmtxSymbol88x88,$/;"	e	enum:__anon12	file:
DmtxSymbol8x18	src/img/dmtx.c	/^   DmtxSymbol8x18,$/;"	e	enum:__anon12	file:
DmtxSymbol8x32	src/img/dmtx.c	/^   DmtxSymbol8x32,$/;"	e	enum:__anon12	file:
DmtxSymbol96x96	src/img/dmtx.c	/^   DmtxSymbol96x96,$/;"	e	enum:__anon12	file:
DmtxSymbolRectAuto	src/img/dmtx.c	/^   DmtxSymbolRectAuto        = -3,$/;"	e	enum:__anon12	file:
DmtxSymbolRectCount	src/img/dmtx.c	99;"	d	file:
DmtxSymbolShapeAuto	src/img/dmtx.c	/^   DmtxSymbolShapeAuto       = -1,$/;"	e	enum:__anon12	file:
DmtxSymbolSize	src/img/dmtx.c	/^}__attribute__((aligned(8))) DmtxSymbolSize;$/;"	t	typeref:enum:__anon12	file:
DmtxSymbolSquareAuto	src/img/dmtx.c	/^   DmtxSymbolSquareAuto      = -2,$/;"	e	enum:__anon12	file:
DmtxSymbolSquareCount	src/img/dmtx.c	98;"	d	file:
DmtxTrue	src/img/dmtx.c	92;"	d	file:
DmtxUndefined	src/img/dmtx.c	85;"	d	file:
DmtxUnlatchExplicit	src/img/dmtx.c	603;"	d	file:
DmtxUnlatchImplicit	src/img/dmtx.c	604;"	d	file:
DmtxValue05Macro	src/img/dmtx.c	594;"	d	file:
DmtxValue06Macro	src/img/dmtx.c	595;"	d	file:
DmtxValueAsciiPad	src/img/dmtx.c	587;"	d	file:
DmtxValueAsciiUpperShift	src/img/dmtx.c	588;"	d	file:
DmtxValueBase256Latch	src/img/dmtx.c	582;"	d	file:
DmtxValueC40Latch	src/img/dmtx.c	578;"	d	file:
DmtxValueCTXShift1	src/img/dmtx.c	589;"	d	file:
DmtxValueCTXShift2	src/img/dmtx.c	590;"	d	file:
DmtxValueCTXShift3	src/img/dmtx.c	591;"	d	file:
DmtxValueCTXUnlatch	src/img/dmtx.c	584;"	d	file:
DmtxValueECI	src/img/dmtx.c	596;"	d	file:
DmtxValueEdifactLatch	src/img/dmtx.c	581;"	d	file:
DmtxValueEdifactUnlatch	src/img/dmtx.c	585;"	d	file:
DmtxValueFNC1	src/img/dmtx.c	592;"	d	file:
DmtxValueStructuredAppend	src/img/dmtx.c	593;"	d	file:
DmtxValueTextLatch	src/img/dmtx.c	579;"	d	file:
DmtxValueX12Latch	src/img/dmtx.c	580;"	d	file:
DmtxVector2	src/img/dmtx.c	/^} __attribute__((aligned(8)))DmtxVector2;$/;"	t	typeref:struct:DmtxVector2_struct	file:
DmtxVector2_struct	src/img/dmtx.c	/^typedef struct DmtxVector2_struct {$/;"	s	file:
DmtxVersion	src/img/dmtx.c	83;"	d	file:
EAN_LEFT	src/img/zbar.c	/^    EAN_LEFT   = 0x0000,$/;"	e	enum:symbol_partial_e	file:
EAN_RIGHT	src/img/zbar.c	/^    EAN_RIGHT  = 0x1000,$/;"	e	enum:symbol_partial_e	file:
EDGE_CANNY	src/img/include/imlib.h	/^   EDGE_CANNY,$/;"	e	enum:edge_detector_type
EDGE_GATE	src/py/py_image.c	6109;"	d	file:
EDGE_SIMPLE	src/img/include/imlib.h	/^   EDGE_SIMPLE,$/;"	e	enum:edge_detector_type
ENABLE_CODABAR	src/img/zbar.c	40;"	d	file:
ENABLE_CODE128	src/img/zbar.c	43;"	d	file:
ENABLE_CODE39	src/img/zbar.c	41;"	d	file:
ENABLE_CODE93	src/img/zbar.c	42;"	d	file:
ENABLE_DATABAR	src/img/zbar.c	39;"	d	file:
ENABLE_EAN	src/img/zbar.c	36;"	d	file:
ENABLE_I25	src/img/zbar.c	38;"	d	file:
ENABLE_PDF417	src/img/zbar.c	44;"	d	file:
ENABLE_QRCODE	zbar/config.h	25;"	d
ERRINFO_MAGIC	zbar/error.h	50;"	d
ERR_MAX	zbar/error.c	57;"	d	file:
EWMA_WEIGHT	src/img/zbar.c	8453;"	d	file:
EWMA_WEIGHT	zbar/scanner.c	61;"	d	file:
English	pybind_test/whjy.h	/^    int English;  $/;"	m	struct:student
FALSE	src/img/lsd.c	443;"	d	file:
FAST_MATH_TABLE_SIZE	src/img/apriltag.c	84;"	d	file:
FB_MAX_ALLOC_TIMES	src/fb_alloc.c	23;"	d	file:
FB_MAX_ALLOC_TIMES	src/fb_alloc.c	28;"	d	file:
FB_MAX_ALLOC_TIMES	src/include/omv_boardconfig.h	28;"	d
FB_MAX_ALLOC_TIMES	src/include/omv_boardconfig.h	33;"	d
FEED_BITS	src/img/zbar.c	4692;"	d	file:
FEED_BITS	src/img/zbar.c	5005;"	d	file:
FIXME_ADDON_SYNC	src/img/zbar.c	37;"	d	file:
FIX_0_382683433	src/img/jpeg.c	230;"	d	file:
FIX_0_541196100	src/img/jpeg.c	231;"	d	file:
FIX_0_707106781	src/img/jpeg.c	232;"	d	file:
FIX_1_306562965	src/img/jpeg.c	233;"	d	file:
FLH	src/include/ov2640_regs.h	136;"	d
FLL	src/include/ov2640_regs.h	135;"	d
FNC1	src/img/zbar.c	/^    FNC1        = 0x66,$/;"	e	enum:code128_char_e	file:
FNC2	src/img/zbar.c	/^    FNC2        = 0x61,$/;"	e	enum:code128_char_e	file:
FNC3	src/img/zbar.c	/^    FNC3        = 0x60,$/;"	e	enum:code128_char_e	file:
FNC4	src/img/zbar.c	/^    FNC4        = 0x6c,$/;"	e	enum:code128_char_e	file:
FORMAT_BITS	src/img/qrcode.c	2261;"	d	file:
FORMAT_BMP	src/img/include/imlib.h	/^    FORMAT_BMP,$/;"	e	enum:save_image_format
FORMAT_DONT_CARE	src/img/include/imlib.h	/^    FORMAT_DONT_CARE,$/;"	e	enum:save_image_format
FORMAT_JPG	src/img/include/imlib.h	/^    FORMAT_JPG,$/;"	e	enum:save_image_format
FORMAT_MAX_ERROR	src/img/qrcode.c	2259;"	d	file:
FORMAT_PNM	src/img/include/imlib.h	/^    FORMAT_PNM,$/;"	e	enum:save_image_format
FORMAT_RAW	src/img/include/imlib.h	/^    FORMAT_RAW,$/;"	e	enum:save_image_format
FORMAT_SYNDROMES	src/img/qrcode.c	2260;"	d	file:
FRAMERATE_15FPS	src/include/sensor.h	/^    FRAMERATE_15FPS,$/;"	e	enum:__anon50
FRAMERATE_25FPS	src/include/sensor.h	/^    FRAMERATE_25FPS,$/;"	e	enum:__anon50
FRAMERATE_2FPS	src/include/sensor.h	/^    FRAMERATE_2FPS ,$/;"	e	enum:__anon50
FRAMERATE_30FPS	src/include/sensor.h	/^    FRAMERATE_30FPS,$/;"	e	enum:__anon50
FRAMERATE_60FPS	src/include/sensor.h	/^    FRAMERATE_60FPS,$/;"	e	enum:__anon50
FRAMERATE_8FPS	src/include/sensor.h	/^    FRAMERATE_8FPS ,$/;"	e	enum:__anon50
FRAMESIZE_128X128	src/include/sensor.h	/^    FRAMESIZE_128X128,  \/\/ 128x128$/;"	e	enum:__anon49
FRAMESIZE_128X64	src/include/sensor.h	/^    FRAMESIZE_128X64,   \/\/ 128x64$/;"	e	enum:__anon49
FRAMESIZE_240X240	src/include/sensor.h	/^    FRAMESIZE_240X240,  \/\/ 240x240$/;"	e	enum:__anon49
FRAMESIZE_64X32	src/include/sensor.h	/^    FRAMESIZE_64X32,    \/\/ 64x32$/;"	e	enum:__anon49
FRAMESIZE_64X64	src/include/sensor.h	/^    FRAMESIZE_64X64,    \/\/ 64x64$/;"	e	enum:__anon49
FRAMESIZE_CIF	src/include/sensor.h	/^    FRAMESIZE_CIF,      \/\/ 352x288$/;"	e	enum:__anon49
FRAMESIZE_HQQQVGA	src/include/sensor.h	/^    FRAMESIZE_HQQQVGA,  \/\/ 60x40$/;"	e	enum:__anon49
FRAMESIZE_HQQVGA	src/include/sensor.h	/^    FRAMESIZE_HQQVGA,   \/\/ 120x80$/;"	e	enum:__anon49
FRAMESIZE_HQVGA	src/include/sensor.h	/^    FRAMESIZE_HQVGA,    \/\/ 240x160$/;"	e	enum:__anon49
FRAMESIZE_INVALID	src/include/sensor.h	/^    FRAMESIZE_INVALID = 0,$/;"	e	enum:__anon49
FRAMESIZE_LCD	src/include/sensor.h	/^    FRAMESIZE_LCD,      \/\/ 128x160$/;"	e	enum:__anon49
FRAMESIZE_QCIF	src/include/sensor.h	/^    FRAMESIZE_QCIF,     \/\/ 176x144$/;"	e	enum:__anon49
FRAMESIZE_QQCIF	src/include/sensor.h	/^    FRAMESIZE_QQCIF,    \/\/ 88x72$/;"	e	enum:__anon49
FRAMESIZE_QQQQVGA	src/include/sensor.h	/^    FRAMESIZE_QQQQVGA,  \/\/ 40x30$/;"	e	enum:__anon49
FRAMESIZE_QQQVGA	src/include/sensor.h	/^    FRAMESIZE_QQQVGA,   \/\/ 80x60$/;"	e	enum:__anon49
FRAMESIZE_QQSIF	src/include/sensor.h	/^    FRAMESIZE_QQSIF,    \/\/ 88x60$/;"	e	enum:__anon49
FRAMESIZE_QQVGA	src/include/sensor.h	/^    FRAMESIZE_QQVGA,    \/\/ 160x120$/;"	e	enum:__anon49
FRAMESIZE_QQVGA2	src/include/sensor.h	/^    FRAMESIZE_QQVGA2,   \/\/ 128x160$/;"	e	enum:__anon49
FRAMESIZE_QSIF	src/include/sensor.h	/^    FRAMESIZE_QSIF,     \/\/ 176x120$/;"	e	enum:__anon49
FRAMESIZE_QVGA	src/include/sensor.h	/^    FRAMESIZE_QVGA,     \/\/ 320x240$/;"	e	enum:__anon49
FRAMESIZE_SIF	src/include/sensor.h	/^    FRAMESIZE_SIF,      \/\/ 352x240$/;"	e	enum:__anon49
FRAMESIZE_SVGA	src/include/sensor.h	/^    FRAMESIZE_SVGA,     \/\/ 800x600$/;"	e	enum:__anon49
FRAMESIZE_SXGA	src/include/sensor.h	/^    FRAMESIZE_SXGA,     \/\/ 1280x1024$/;"	e	enum:__anon49
FRAMESIZE_UXGA	src/include/sensor.h	/^    FRAMESIZE_UXGA,     \/\/ 1600x1200$/;"	e	enum:__anon49
FRAMESIZE_VGA	src/include/sensor.h	/^    FRAMESIZE_VGA,      \/\/ 640x480$/;"	e	enum:__anon49
FRAMESIZE_WVGA	src/include/sensor.h	/^    FRAMESIZE_WVGA,     \/\/ 720x480$/;"	e	enum:__anon49
FRAMESIZE_WVGA2	src/include/sensor.h	/^    FRAMESIZE_WVGA2,    \/\/ 752x480$/;"	e	enum:__anon49
FRAMES_OFFSET	src/img/mjpeg.c	15;"	d	file:
FRARL	src/include/ov2640_regs.h	127;"	d
FileIn	src/img/include/font.h	/^    FileIn,$/;"	e	enum:FontSource
FindBestSolidLine	src/img/dmtx.c	/^FindBestSolidLine(DmtxDecode *dec, DmtxRegion *reg, int step0, int step1, int streamDir, int houghAvoid)$/;"	f	file:
FindBestSolidLine2	src/img/dmtx.c	/^FindBestSolidLine2(DmtxDecode *dec, DmtxPixelLoc loc0, int tripSteps, int sign, int houghAvoid)$/;"	f	file:
FindStrongestNeighbor	src/img/dmtx.c	/^FindStrongestNeighbor(DmtxDecode *dec, DmtxPointFlow center, int sign)$/;"	f	file:
FindTravelLimits	src/img/dmtx.c	/^FindTravelLimits(DmtxDecode *dec, DmtxRegion *reg, DmtxBestLine *line)$/;"	f	file:
FollowSeek	src/img/dmtx.c	/^FollowSeek(DmtxDecode *dec, DmtxRegion *reg, int seek)$/;"	f	file:
FollowSeekLoc	src/img/dmtx.c	/^FollowSeekLoc(DmtxDecode *dec, DmtxPixelLoc loc)$/;"	f	file:
FollowStep	src/img/dmtx.c	/^FollowStep(DmtxDecode *dec, DmtxRegion *reg, DmtxFollow followBeg, int sign)$/;"	f	file:
FollowStep2	src/img/dmtx.c	/^FollowStep2(DmtxDecode *dec, DmtxFollow followBeg, int sign)$/;"	f	file:
FontIndex	src/img/include/font.h	/^enum FontIndex {$/;"	g
FontSource	src/img/include/font.h	/^enum FontSource {$/;"	g
G	src/img/include/imlib.h	/^    uint8_t G;          \/\/ Gray$/;"	m	struct:simple_color
G	test/python_module/test.c	/^    uint8_t G;          \/\/ Gray$/;"	m	struct:simple_color	file:
GAIN	src/include/ov2640_regs.h	106;"	d
GAINCEILING_128X	src/include/sensor.h	/^    GAINCEILING_128X,$/;"	e	enum:__anon51
GAINCEILING_16X	src/include/sensor.h	/^    GAINCEILING_16X,$/;"	e	enum:__anon51
GAINCEILING_2X	src/include/sensor.h	/^    GAINCEILING_2X,$/;"	e	enum:__anon51
GAINCEILING_32X	src/include/sensor.h	/^    GAINCEILING_32X,$/;"	e	enum:__anon51
GAINCEILING_4X	src/include/sensor.h	/^    GAINCEILING_4X,$/;"	e	enum:__anon51
GAINCEILING_64X	src/include/sensor.h	/^    GAINCEILING_64X,$/;"	e	enum:__anon51
GAINCEILING_8X	src/include/sensor.h	/^    GAINCEILING_8X,$/;"	e	enum:__anon51
GB2312	src/img/include/font.h	/^    GB2312,$/;"	e	enum:FontIndex
GBK	src/img/include/font.h	/^    GBK,$/;"	e	enum:FontIndex
GC0328_ADDR	src/include/gc0328.h	22;"	d
GC0328_ID	src/include/gc0328.h	21;"	d
GC0328_RGB_Gamma	src/gc0328.c	51;"	d	file:
GC0328_RGB_Gamma_cap	src/gc0328.c	/^	GC0328_RGB_Gamma_cap,$/;"	e	enum:__anon2	file:
GC0328_RGB_Gamma_m0	src/gc0328.c	/^    GC0328_RGB_Gamma_m0 = 0,$/;"	e	enum:__anon2	file:
GC0328_RGB_Gamma_m1	src/gc0328.c	/^    GC0328_RGB_Gamma_m1,$/;"	e	enum:__anon2	file:
GC0328_RGB_Gamma_m2	src/gc0328.c	/^    GC0328_RGB_Gamma_m2,$/;"	e	enum:__anon2	file:
GC0328_RGB_Gamma_m3	src/gc0328.c	/^    GC0328_RGB_Gamma_m3,$/;"	e	enum:__anon2	file:
GC0328_RGB_Gamma_m4	src/gc0328.c	/^    GC0328_RGB_Gamma_m4,$/;"	e	enum:__anon2	file:
GC0328_RGB_Gamma_m5	src/gc0328.c	/^    GC0328_RGB_Gamma_m5,$/;"	e	enum:__anon2	file:
GC0328_RGB_Gamma_m6	src/gc0328.c	/^    GC0328_RGB_Gamma_m6,$/;"	e	enum:__anon2	file:
GC0328_RGB_Gamma_night	src/gc0328.c	/^    GC0328_RGB_Gamma_night,$/;"	e	enum:__anon2	file:
GC0328_RGB_Gamma_test	src/gc0328.c	/^	GC0328_RGB_Gamma_test$/;"	e	enum:__anon2	file:
GC0328_Y_Gamma	src/gc0328.c	52;"	d	file:
GC0328_Y_Gamma_05	src/gc0328.c	/^    GC0328_Y_Gamma_05,$/;"	e	enum:__anon3	file:
GC0328_Y_Gamma_06	src/gc0328.c	/^    GC0328_Y_Gamma_06,$/;"	e	enum:__anon3	file:
GC0328_Y_Gamma_07	src/gc0328.c	/^    GC0328_Y_Gamma_07,$/;"	e	enum:__anon3	file:
GC0328_Y_Gamma_08	src/gc0328.c	/^    GC0328_Y_Gamma_08,$/;"	e	enum:__anon3	file:
GC0328_Y_Gamma_09	src/gc0328.c	/^    GC0328_Y_Gamma_09,$/;"	e	enum:__anon3	file:
GC0328_Y_Gamma_10	src/gc0328.c	/^	GC0328_Y_Gamma_10,$/;"	e	enum:__anon3	file:
GC0328_Y_Gamma_default	src/gc0328.c	/^	GC0328_Y_Gamma_default,$/;"	e	enum:__anon3	file:
GC2145_ADDR	src/include/gc2145.h	24;"	d
GC2145_ID	src/include/gc2145.h	23;"	d
GET_VALUE	src/img/orb.c	412;"	d	file:
GS	src/img/zbar.c	4601;"	d	file:
GetBitsPerPixel	src/img/dmtx.c	/^GetBitsPerPixel(int pack)$/;"	f	file:
GetEncodationScheme	src/img/dmtx.c	/^GetEncodationScheme(unsigned char cw)$/;"	f	file:
GetGridCoordinates	src/img/dmtx.c	/^GetGridCoordinates(DmtxScanGrid *grid, DmtxPixelLoc *locPtr)$/;"	f	file:
GetPointFlow	src/img/dmtx.c	/^GetPointFlow(DmtxDecode *dec, int colorPlane, DmtxPixelLoc loc, int arrive)$/;"	f	file:
GfAdd	src/img/dmtx.c	4559;"	d	file:
GfMult	src/img/dmtx.c	4563;"	d	file:
GfMultAntilog	src/img/dmtx.c	4567;"	d	file:
H	src/img/apriltag.c	/^    matd_t  *H, *Hinv;$/;"	m	struct:evaluate_quad_ret	file:
H	src/img/apriltag.c	/^    matd_t *H, *Hinv;$/;"	m	struct:quad	file:
H	src/img/apriltag.c	/^    matd_t *H;$/;"	m	struct:apriltag_detection	file:
HAL_JPEG_DataReadyCallback	src/img/jpeg.c	/^void HAL_JPEG_DataReadyCallback (JPEG_HandleTypeDef *hjpeg, uint8_t *pDataOut, uint32_t OutDataLength)$/;"	f
HAL_JPEG_ErrorCallback	src/img/jpeg.c	/^void HAL_JPEG_ErrorCallback(JPEG_HandleTypeDef *hjpeg)$/;"	f
HAL_JPEG_GetDataCallback	src/img/jpeg.c	/^void HAL_JPEG_GetDataCallback(JPEG_HandleTypeDef *hjpeg, uint32_t NbDecodedData)$/;"	f
HEDY	src/include/ov2640_regs.h	132;"	d
HISTO_HIGH	src/include/ov2640_regs.h	148;"	d
HISTO_LOW	src/include/ov2640_regs.h	147;"	d
HOMOGRAPHY_COMPUTE_FLAG_INVERSE	src/img/apriltag.c	3701;"	d	file:
HOMOGRAPHY_COMPUTE_FLAG_SVD	src/img/apriltag.c	3702;"	d	file:
HSDY	src/include/ov2640_regs.h	131;"	d
HSIZE	src/include/ov2640_regs.h	15;"	d
HSIZE8	src/include/ov2640_regs.h	28;"	d
HSTART	src/include/ov2640_regs.h	118;"	d
HSTOP	src/include/ov2640_regs.h	119;"	d
Hinv	src/img/apriltag.c	/^    matd_t  *H, *Hinv;$/;"	m	struct:evaluate_quad_ret	file:
Hinv	src/img/apriltag.c	/^    matd_t *H, *Hinv;$/;"	m	struct:quad	file:
HuffTable	src/img/picojpeg.c	/^} HuffTable;$/;"	t	typeref:struct:HuffTableT	file:
HuffTableT	src/img/picojpeg.c	/^typedef struct HuffTableT$/;"	s	file:
I2C_PORT	src/include/omv_boardconfig.h	209;"	d
I2C_SIOC_H	src/include/omv_boardconfig.h	213;"	d
I2C_SIOC_L	src/include/omv_boardconfig.h	214;"	d
I2C_SIOC_PIN	src/include/omv_boardconfig.h	210;"	d
I2C_SIOD_H	src/include/omv_boardconfig.h	216;"	d
I2C_SIOD_L	src/include/omv_boardconfig.h	217;"	d
I2C_SIOD_PIN	src/include/omv_boardconfig.h	211;"	d
I2C_SIOD_READ	src/include/omv_boardconfig.h	219;"	d
I2C_SIOD_WRITE	src/include/omv_boardconfig.h	220;"	d
I2C_SPIN_DELAY	src/include/omv_boardconfig.h	222;"	d
IDE_DBG_CMD_START_FLAG	src/include/omv_boardconfig.h	20;"	d
IDE_DBG_DISPATCH_STATUS_BUSY	src/include/ide_dbg.h	/^    IDE_DBG_DISPATCH_STATUS_BUSY,$/;"	e	enum:__anon46
IDE_DBG_DISPATCH_STATUS_DATA	src/include/ide_dbg.h	/^    IDE_DBG_DISPATCH_STATUS_DATA,$/;"	e	enum:__anon46
IDE_DBG_DISPATCH_STATUS_ERR	src/include/ide_dbg.h	/^    IDE_DBG_DISPATCH_STATUS_ERR = 1,$/;"	e	enum:__anon46
IDE_DBG_DISPATCH_STATUS_WAIT	src/include/ide_dbg.h	/^    IDE_DBG_DISPATCH_STATUS_WAIT,$/;"	e	enum:__anon46
IDE_DBG_MAX_PACKET	src/include/omv_boardconfig.h	19;"	d
IDE_DBG_STATUS_OK	src/include/ide_dbg.h	/^    IDE_DBG_STATUS_OK = 0,$/;"	e	enum:__anon46
IDX	src/img/zbar.c	5270;"	d	file:
IDX	src/img/zbar.c	5401;"	d	file:
IMAGE_BINARY_LINE_LEN	src/img/include/imlib.h	447;"	d
IMAGE_BINARY_LINE_LEN_BYTES	src/img/include/imlib.h	448;"	d
IMAGE_BPP_BAYER	src/img/include/imlib.h	/^    IMAGE_BPP_BAYER,        \/\/ BPP = 3$/;"	e	enum:image_bpp
IMAGE_BPP_BINARY	src/img/include/imlib.h	/^    IMAGE_BPP_BINARY,       \/\/ BPP = 0$/;"	e	enum:image_bpp
IMAGE_BPP_GRAYSCALE	src/img/include/imlib.h	/^    IMAGE_BPP_GRAYSCALE,    \/\/ BPP = 1$/;"	e	enum:image_bpp
IMAGE_BPP_JPEG	src/img/include/imlib.h	/^    IMAGE_BPP_JPEG,         \/\/ BPP = 4$/;"	e	enum:image_bpp
IMAGE_BPP_RGB565	src/img/include/imlib.h	/^    IMAGE_BPP_RGB565,       \/\/ BPP = 2$/;"	e	enum:image_bpp
IMAGE_CLEAR_BINARY_PIXEL	src/img/include/imlib.h	475;"	d
IMAGE_CLEAR_BINARY_PIXEL_FAST	src/img/include/imlib.h	618;"	d
IMAGE_COMPUTE_BINARY_PIXEL_ROW_PTR	src/img/include/imlib.h	587;"	d
IMAGE_COMPUTE_GRAYSCALE_PIXEL_ROW_PTR	src/img/include/imlib.h	632;"	d
IMAGE_COMPUTE_RGB565_PIXEL_ROW_PTR	src/img/include/imlib.h	661;"	d
IMAGE_COMPUTE_SCALED_BINARY_PIXEL_ROW_PTR	src/img/include/imlib.h	690;"	d
IMAGE_COMPUTE_SCALED_GRAYSCALE_PIXEL_ROW_PTR	src/img/include/imlib.h	699;"	d
IMAGE_COMPUTE_SCALED_RGB565_PIXEL_ROW_PTR	src/img/include/imlib.h	708;"	d
IMAGE_COMPUTE_TARGET_RECT_SCALE_FACTOR	src/img/include/imlib.h	550;"	d
IMAGE_COMPUTE_TARGET_SIZE_SCALE_FACTOR	src/img/include/imlib.h	539;"	d
IMAGE_GET_BINARY_PIXEL	src/img/include/imlib.h	456;"	d
IMAGE_GET_BINARY_PIXEL_FAST	src/img/include/imlib.h	601;"	d
IMAGE_GET_GRAYSCALE_PIXEL	src/img/include/imlib.h	491;"	d
IMAGE_GET_GRAYSCALE_PIXEL_FAST	src/img/include/imlib.h	646;"	d
IMAGE_GET_RGB565_PIXEL	src/img/include/imlib.h	508;"	d
IMAGE_GET_RGB565_PIXEL_FAST	src/img/include/imlib.h	675;"	d
IMAGE_GET_SCALED_BINARY_PIXEL	src/img/include/imlib.h	561;"	d
IMAGE_GET_SCALED_BINARY_PIXEL_FAST	src/img/include/imlib.h	697;"	d
IMAGE_GET_SCALED_GRAYSCALE_PIXEL	src/img/include/imlib.h	569;"	d
IMAGE_GET_SCALED_GRAYSCALE_PIXEL_FAST	src/img/include/imlib.h	706;"	d
IMAGE_GET_SCALED_RGB565_PIXEL	src/img/include/imlib.h	577;"	d
IMAGE_GET_SCALED_RGB565_PIXEL_FAST	src/img/include/imlib.h	715;"	d
IMAGE_GRAYSCALE_LINE_LEN	src/img/include/imlib.h	450;"	d
IMAGE_GRAYSCALE_LINE_LEN_BYTES	src/img/include/imlib.h	451;"	d
IMAGE_INC_BINARY_PIXEL_ROW_PTR	src/img/include/imlib.h	594;"	d
IMAGE_INC_GRAYSCALE_PIXEL_ROW_PTR	src/img/include/imlib.h	639;"	d
IMAGE_INC_RGB565_PIXEL_ROW_PTR	src/img/include/imlib.h	668;"	d
IMAGE_IS_MUTABLE	src/img/include/imlib.h	430;"	d
IMAGE_IS_MUTABLE_BAYER	src/img/include/imlib.h	438;"	d
IMAGE_MODE	src/include/ov2640_regs.h	71;"	d
IMAGE_MODE_GET_FMT	src/include/ov2640_regs.h	79;"	d
IMAGE_MODE_HREF_VSYNC	src/include/ov2640_regs.h	77;"	d
IMAGE_MODE_JPEG_EN	src/include/ov2640_regs.h	73;"	d
IMAGE_MODE_LBYTE_FIRST	src/include/ov2640_regs.h	78;"	d
IMAGE_MODE_RAW10	src/include/ov2640_regs.h	75;"	d
IMAGE_MODE_RGB565	src/include/ov2640_regs.h	76;"	d
IMAGE_MODE_Y8_DVP_EN	src/include/ov2640_regs.h	72;"	d
IMAGE_MODE_YUV422	src/include/ov2640_regs.h	74;"	d
IMAGE_PUT_BINARY_PIXEL	src/img/include/imlib.h	464;"	d
IMAGE_PUT_BINARY_PIXEL_FAST	src/img/include/imlib.h	608;"	d
IMAGE_PUT_GRAYSCALE_PIXEL	src/img/include/imlib.h	499;"	d
IMAGE_PUT_GRAYSCALE_PIXEL_FAST	src/img/include/imlib.h	653;"	d
IMAGE_PUT_RGB565_PIXEL	src/img/include/imlib.h	516;"	d
IMAGE_PUT_RGB565_PIXEL_FAST	src/img/include/imlib.h	682;"	d
IMAGE_REV_RGB565_PIXEL	src/img/include/imlib.h	526;"	d
IMAGE_REV_RGB565_PIXEL	src/img/include/imlib.h	532;"	d
IMAGE_RGB565_LINE_LEN	src/img/include/imlib.h	453;"	d
IMAGE_RGB565_LINE_LEN_BYTES	src/img/include/imlib.h	454;"	d
IMAGE_SET_BINARY_PIXEL	src/img/include/imlib.h	483;"	d
IMAGE_SET_BINARY_PIXEL_FAST	src/img/include/imlib.h	625;"	d
IMLIB_ENABLE_APRILTAGS	src/include/imlib_config.h	119;"	d
IMLIB_ENABLE_BARCODES	src/include/imlib_config.h	125;"	d
IMLIB_ENABLE_BILATERAL	src/include/imlib_config.h	59;"	d
IMLIB_ENABLE_BINARY_OPS	src/include/imlib_config.h	29;"	d
IMLIB_ENABLE_CARTOON	src/include/imlib_config.h	62;"	d
IMLIB_ENABLE_CHROMINVAR	src/include/imlib_config.h	74;"	d
IMLIB_ENABLE_CNN	src/include/imlib_config.h	131;"	d
IMLIB_ENABLE_DATAMATRICES	src/include/imlib_config.h	122;"	d
IMLIB_ENABLE_FAST	src/include/imlib_config.h	134;"	d
IMLIB_ENABLE_FIND_CIRCLES	src/include/imlib_config.h	110;"	d
IMLIB_ENABLE_FIND_DISPLACEMENT	src/include/imlib_config.h	86;"	d
IMLIB_ENABLE_FIND_LINES	src/include/imlib_config.h	106;"	d
IMLIB_ENABLE_FIND_LINES	src/include/imlib_config.h	98;"	d
IMLIB_ENABLE_FIND_LINE_SEGMENTS	src/include/imlib_config.h	101;"	d
IMLIB_ENABLE_FIND_RECTS	src/include/imlib_config.h	113;"	d
IMLIB_ENABLE_FLOOD_FILL	src/include/imlib_config.h	35;"	d
IMLIB_ENABLE_GAUSSIAN	src/include/imlib_config.h	53;"	d
IMLIB_ENABLE_GET_SIMILARITY	src/include/imlib_config.h	95;"	d
IMLIB_ENABLE_HOG	src/include/imlib_config.h	137;"	d
IMLIB_ENABLE_ILLUMINVAR	src/include/imlib_config.h	77;"	d
IMLIB_ENABLE_LAPLACIAN	src/include/imlib_config.h	56;"	d
IMLIB_ENABLE_LENET	src/include/imlib_config.h	128;"	d
IMLIB_ENABLE_LINPOLAR	src/include/imlib_config.h	68;"	d
IMLIB_ENABLE_LOGPOLAR	src/include/imlib_config.h	71;"	d
IMLIB_ENABLE_MATH_OPS	src/include/imlib_config.h	32;"	d
IMLIB_ENABLE_MEAN	src/include/imlib_config.h	38;"	d
IMLIB_ENABLE_MEDIAN	src/include/imlib_config.h	41;"	d
IMLIB_ENABLE_MIDPOINT	src/include/imlib_config.h	47;"	d
IMLIB_ENABLE_MODE	src/include/imlib_config.h	44;"	d
IMLIB_ENABLE_MORPH	src/include/imlib_config.h	50;"	d
IMLIB_ENABLE_QRCODES	src/include/imlib_config.h	116;"	d
IMLIB_ENABLE_REMOVE_SHADOWS	src/include/imlib_config.h	65;"	d
IMLIB_ENABLE_ROTATION_CORR	src/include/imlib_config.h	83;"	d
IMLIB_ENABLE_ROTATION_CORR	src/include/imlib_config.h	91;"	d
IMLIB_ENABLE_SELECTIVE_SEARCH	src/include/imlib_config.h	140;"	d
IMLIB_ENABLE_YUV_LAB_FUNC	src/include/imlib_config.h	143;"	d
IMLIB_ENABLE_YUV_LAB_FUNC	src/include/imlib_config.h	18;"	d
IM_A_HIST_OFFSET	src/img/include/imlib.h	810;"	d
IM_A_HIST_SIZE	src/img/include/imlib.h	809;"	d
IM_B528	src/img/include/imlib.h	734;"	d
IM_B565	src/img/include/imlib.h	764;"	d
IM_B825	src/img/include/imlib.h	750;"	d
IM_B_HIST_OFFSET	src/img/include/imlib.h	812;"	d
IM_B_HIST_SIZE	src/img/include/imlib.h	811;"	d
IM_DEG2RAD	src/img/include/imlib.h	84;"	d
IM_DIV	src/img/include/imlib.h	49;"	d
IM_EQUAL	src/img/include/imlib.h	902;"	d
IM_G565	src/img/include/imlib.h	760;"	d
IM_G628	src/img/include/imlib.h	730;"	d
IM_G826	src/img/include/imlib.h	746;"	d
IM_GET_GS_PIXEL	src/img/include/imlib.h	848;"	d
IM_GET_RAW_PIXEL	src/img/include/imlib.h	854;"	d
IM_GET_RAW_PIXEL_CHECK_BOUNDS_X	src/img/include/imlib.h	860;"	d
IM_GET_RAW_PIXEL_CHECK_BOUNDS_XY	src/img/include/imlib.h	874;"	d
IM_GET_RAW_PIXEL_CHECK_BOUNDS_Y	src/img/include/imlib.h	867;"	d
IM_GET_RGB565_PIXEL	src/img/include/imlib.h	882;"	d
IM_G_HIST_OFFSET	src/img/include/imlib.h	804;"	d
IM_G_HIST_SIZE	src/img/include/imlib.h	803;"	d
IM_IS_BAYER	src/img/include/imlib.h	826;"	d
IM_IS_BINARY	src/img/include/imlib.h	814;"	d
IM_IS_GS	src/img/include/imlib.h	818;"	d
IM_IS_JPEG	src/img/include/imlib.h	830;"	d
IM_IS_MUTABLE	src/img/include/imlib.h	834;"	d
IM_IS_RGB565	src/img/include/imlib.h	822;"	d
IM_LOG2	src/img/include/imlib.h	45;"	d
IM_LOG2_16	src/img/include/imlib.h	43;"	d
IM_LOG2_2	src/img/include/imlib.h	40;"	d
IM_LOG2_32	src/img/include/imlib.h	44;"	d
IM_LOG2_4	src/img/include/imlib.h	41;"	d
IM_LOG2_8	src/img/include/imlib.h	42;"	d
IM_L_HIST_OFFSET	src/img/include/imlib.h	808;"	d
IM_L_HIST_SIZE	src/img/include/imlib.h	807;"	d
IM_MAX	src/img/include/imlib.h	47;"	d
IM_MAX_B5	src/img/include/imlib.h	800;"	d
IM_MAX_G6	src/img/include/imlib.h	799;"	d
IM_MAX_GS	src/img/include/imlib.h	795;"	d
IM_MAX_R5	src/img/include/imlib.h	798;"	d
IM_MIN	src/img/include/imlib.h	48;"	d
IM_MOD	src/img/include/imlib.h	50;"	d
IM_R528	src/img/include/imlib.h	726;"	d
IM_R565	src/img/include/imlib.h	756;"	d
IM_R825	src/img/include/imlib.h	742;"	d
IM_RAD2DEG	src/img/include/imlib.h	85;"	d
IM_RGB565	src/img/include/imlib.h	770;"	d
IM_RGB5652A	src/img/include/imlib.h	786;"	d
IM_RGB5652B	src/img/include/imlib.h	790;"	d
IM_RGB5652L	src/img/include/imlib.h	782;"	d
IM_SET_GS_PIXEL	src/img/include/imlib.h	888;"	d
IM_SET_RGB565_PIXEL	src/img/include/imlib.h	895;"	d
IM_SWAP16	src/img/include/imlib.h	719;"	d
IM_SWAP32	src/img/include/imlib.h	720;"	d
IM_TO_GS_PIXEL	src/img/include/imlib.h	909;"	d
IM_TO_GS_PIXEL	src/img/include/imlib.h	914;"	d
IM_X_INSIDE	src/img/include/imlib.h	838;"	d
IM_Y_INSIDE	src/img/include/imlib.h	843;"	d
INCLUDE	test/Makefile	/^INCLUDE =  -I ..\/src\/img\/include -I ..\/src\/include -I .\/$/;"	m
INCLUDE	zbar/makefile	/^INCLUDE = -I .\/$/;"	m
INT16_T_BITS	src/img/include/imlib.h	56;"	d
INT16_T_MASK	src/img/include/imlib.h	57;"	d
INT16_T_SHIFT	src/img/include/imlib.h	58;"	d
INT32_T_BITS	src/img/include/imlib.h	60;"	d
INT32_T_MASK	src/img/include/imlib.h	61;"	d
INT32_T_SHIFT	src/img/include/imlib.h	62;"	d
INT64_T_BITS	src/img/include/imlib.h	64;"	d
INT64_T_MASK	src/img/include/imlib.h	65;"	d
INT64_T_SHIFT	src/img/include/imlib.h	66;"	d
INT8_T_BITS	src/img/include/imlib.h	52;"	d
INT8_T_MASK	src/img/include/imlib.h	53;"	d
INT8_T_SHIFT	src/img/include/imlib.h	54;"	d
ISAAC_MASK	zbar/isaac.c	10;"	d	file:
ISAAC_SEED_SZ_MAX	zbar/isaac.h	14;"	d
ISAAC_SZ	zbar/isaac.h	13;"	d
ISAAC_SZ_LOG	zbar/isaac.h	12;"	d
InitScanGrid	src/img/dmtx.c	/^InitScanGrid(DmtxDecode *dec)$/;"	f	file:
Interpolate	src/img/clahe.c	/^void Interpolate (kz_pixel_t * pImage, int uiXRes, unsigned long * pulMapLU,$/;"	f
JPEG_420_YCBCR_MCU_SIZE	src/img/jpeg.c	39;"	d	file:
JPEG_422_YCBCR_MCU_SIZE	src/img/jpeg.c	38;"	d	file:
JPEG_444_GS_MCU_SIZE	src/img/jpeg.c	36;"	d	file:
JPEG_444_YCBCR_MCU_SIZE	src/img/jpeg.c	37;"	d	file:
JPEG_FB	src/include/framebuffer.h	48;"	d
JPEG_MARKER	src/img/picojpeg.c	/^} JPEG_MARKER;$/;"	t	typeref:enum:__anon37	file:
JPEG_QUALITY_HIGH	src/include/omv_boardconfig.h	85;"	d
JPEG_QUALITY_LOW	src/include/omv_boardconfig.h	84;"	d
JPEG_QUALITY_THRESH	src/include/omv_boardconfig.h	81;"	d
JPEG_SUBSAMPLE_1x1	src/img/include/imlib.h	/^    JPEG_SUBSAMPLE_1x1 = 0x11,  \/\/ 1x1 chroma subsampling (No subsampling)$/;"	e	enum:jpeg_subsample
JPEG_SUBSAMPLE_2x1	src/img/include/imlib.h	/^    JPEG_SUBSAMPLE_2x1 = 0x21,  \/\/ 2x2 chroma subsampling$/;"	e	enum:jpeg_subsample
JPEG_SUBSAMPLE_2x2	src/img/include/imlib.h	/^    JPEG_SUBSAMPLE_2x2 = 0x22,  \/\/ 2x2 chroma subsampling$/;"	e	enum:jpeg_subsample
KDESC_SIZE	src/img/orb.c	24;"	d	file:
L	src/img/include/imlib.h	/^        int8_t L;       \/\/ LAB L$/;"	m	union:simple_color::__anon25
L	test/python_module/test.c	/^        int8_t L;       \/\/ LAB L$/;"	m	union:simple_color::__anon59	file:
LBP_DESC_SIZE	src/img/lbp.c	25;"	d	file:
LBP_HIST_SIZE	src/img/lbp.c	23;"	d	file:
LBP_NUM_REGIONS	src/img/lbp.c	24;"	d	file:
LBinCount	src/img/include/imlib.h	/^    int LBinCount;$/;"	m	struct:histogram
LBins	src/img/include/imlib.h	/^    float *LBins;$/;"	m	struct:histogram
LBins	src/py/py_image.c	/^    mp_obj_t LBins, ABins, BBins;$/;"	m	struct:py_histogram_obj	file:
LENGTH_0_OFFSET	src/img/mjpeg.c	17;"	d	file:
LENGTH_1_OFFSET	src/img/mjpeg.c	19;"	d	file:
LEPTON_ID	src/include/sensor.h	23;"	d
LEPTON_SPI	src/include/omv_boardconfig.h	224;"	d
LEPTON_SPI_AF	src/include/omv_boardconfig.h	225;"	d
LEPTON_SPI_CLK_DISABLE	src/include/omv_boardconfig.h	242;"	d
LEPTON_SPI_CLK_ENABLE	src/include/omv_boardconfig.h	241;"	d
LEPTON_SPI_DMA_IRQHandler	src/include/omv_boardconfig.h	236;"	d
LEPTON_SPI_DMA_IRQn	src/include/omv_boardconfig.h	232;"	d
LEPTON_SPI_DMA_REQUEST	src/include/omv_boardconfig.h	235;"	d
LEPTON_SPI_DMA_STREAM	src/include/omv_boardconfig.h	233;"	d
LEPTON_SPI_IRQHandler	src/include/omv_boardconfig.h	230;"	d
LEPTON_SPI_IRQn	src/include/omv_boardconfig.h	229;"	d
LEPTON_SPI_MISO_PIN	src/include/omv_boardconfig.h	245;"	d
LEPTON_SPI_MISO_PORT	src/include/omv_boardconfig.h	250;"	d
LEPTON_SPI_MOSI_PIN	src/include/omv_boardconfig.h	246;"	d
LEPTON_SPI_MOSI_PORT	src/include/omv_boardconfig.h	251;"	d
LEPTON_SPI_PRESCALER	src/include/omv_boardconfig.h	227;"	d
LEPTON_SPI_RELEASE	src/include/omv_boardconfig.h	239;"	d
LEPTON_SPI_RESET	src/include/omv_boardconfig.h	238;"	d
LEPTON_SPI_SCLK_PIN	src/include/omv_boardconfig.h	244;"	d
LEPTON_SPI_SCLK_PORT	src/include/omv_boardconfig.h	249;"	d
LEPTON_SPI_SSEL_PIN	src/include/omv_boardconfig.h	247;"	d
LEPTON_SPI_SSEL_PORT	src/include/omv_boardconfig.h	252;"	d
LIBS	test/Makefile	/^LIBS = -lm$/;"	m
LIBS	zbar/makefile	/^LIBS = -lm$/;"	m
LLQ	src/img/include/imlib.h	/^    uint8_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ;$/;"	m	struct:statistics
LLQ	src/py/py_image.c	/^    mp_obj_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ,$/;"	m	struct:py_statistics_obj	file:
LMax	src/img/include/imlib.h	/^    uint8_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ;$/;"	m	struct:statistics
LMax	src/img/include/imlib.h	/^    uint8_t LMin, LMax; \/\/ or grayscale$/;"	m	struct:color_thresholds_list_lnk_data
LMax	src/py/py_image.c	/^    mp_obj_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ,$/;"	m	struct:py_statistics_obj	file:
LMean	src/img/include/imlib.h	/^    uint8_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ;$/;"	m	struct:statistics
LMean	src/py/py_image.c	/^    mp_obj_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ,$/;"	m	struct:py_statistics_obj	file:
LMedian	src/img/include/imlib.h	/^    uint8_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ;$/;"	m	struct:statistics
LMedian	src/py/py_image.c	/^    mp_obj_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ,$/;"	m	struct:py_statistics_obj	file:
LMin	src/img/include/imlib.h	/^    uint8_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ;$/;"	m	struct:statistics
LMin	src/img/include/imlib.h	/^    uint8_t LMin, LMax; \/\/ or grayscale$/;"	m	struct:color_thresholds_list_lnk_data
LMin	src/py/py_image.c	/^    mp_obj_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ,$/;"	m	struct:py_statistics_obj	file:
LMode	src/img/include/imlib.h	/^    uint8_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ;$/;"	m	struct:statistics
LMode	src/py/py_image.c	/^    mp_obj_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ,$/;"	m	struct:py_statistics_obj	file:
LSTDev	src/img/include/imlib.h	/^    uint8_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ;$/;"	m	struct:statistics
LSTDev	src/py/py_image.c	/^    mp_obj_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ,$/;"	m	struct:py_statistics_obj	file:
LUQ	src/img/include/imlib.h	/^    uint8_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ;$/;"	m	struct:statistics
LUQ	src/py/py_image.c	/^    mp_obj_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ,$/;"	m	struct:py_statistics_obj	file:
LValue	src/img/include/imlib.h	/^    uint8_t LValue;$/;"	m	struct:percentile
LValue	src/img/include/imlib.h	/^    uint8_t LValue;$/;"	m	struct:threshold
LValue	src/py/py_image.c	/^    mp_obj_t LValue, AValue, BValue;$/;"	m	struct:py_percentile_obj	file:
LValue	src/py/py_image.c	/^    mp_obj_t LValue, AValue, BValue;$/;"	m	struct:py_threshold_obj	file:
LineSegmentDetection	src/img/lsd.c	/^double * LineSegmentDetection( int * n_out,$/;"	f
MAIN_FB	src/include/framebuffer.h	44;"	d
MAIN_FB_PIXELS	src/include/framebuffer.h	53;"	d
MAIN_FB_PIXELS	src/include/framebuffer.h	55;"	d
MATD_ALLOC	src/img/apriltag.c	1238;"	d	file:
MATD_EL	src/img/apriltag.c	1251;"	d	file:
MATD_EPS	src/img/apriltag.c	1245;"	d	file:
MATD_SVD_NO_WARNINGS	src/img/apriltag.c	1563;"	d	file:
MAX	src/include/common.h	33;"	d
MAX_CORNERS	src/img/agast.c	11;"	d	file:
MAX_CORNERS	src/img/fast.c	10;"	d	file:
MAX_DOMAIN_CNT	src/py/py_image.c	6074;"	d	file:
MAX_ERROR_WORD_COUNT	src/img/dmtx.c	4556;"	d	file:
MAX_INT_DIGITS	zbar/symbol.c	154;"	d	file:
MAX_KP_DIST	src/img/orb.c	25;"	d	file:
MAX_POINT_CNT	src/img/affine.c	26;"	d	file:
MAX_POLY	src/img/qrcode.c	1937;"	d	file:
MAX_ROW	src/img/agast.c	10;"	d	file:
MAX_ROW	src/img/fast.c	9;"	d	file:
MAX_SCALE	src/py/py_image.c	5975;"	d	file:
MAX_XFER_SIZE	src/sensor.c	40;"	d	file:
MAYBE_SWAP	src/img/apriltag.c	9465;"	d	file:
MAYBE_SWAP	src/img/apriltag.c	9515;"	d	file:
MCU_H	src/img/jpeg.c	35;"	d	file:
MCU_W	src/img/jpeg.c	34;"	d	file:
MC_AH	src/include/ov2640_regs.h	35;"	d
MC_AL	src/include/ov2640_regs.h	34;"	d
MC_BIST	src/include/ov2640_regs.h	89;"	d
MC_BIST_12KB_MASK	src/include/ov2640_regs.h	93;"	d
MC_BIST_12KB_SEL	src/include/ov2640_regs.h	92;"	d
MC_BIST_512KB_MASK	src/include/ov2640_regs.h	95;"	d
MC_BIST_512KB_SEL	src/include/ov2640_regs.h	94;"	d
MC_BIST_BOOT_ROM_SEL	src/include/ov2640_regs.h	91;"	d
MC_BIST_BUSY_BIT_R	src/include/ov2640_regs.h	96;"	d
MC_BIST_LAUNCH	src/include/ov2640_regs.h	98;"	d
MC_BIST_MC_RES_ONE_SH_W	src/include/ov2640_regs.h	97;"	d
MC_BIST_RESET	src/include/ov2640_regs.h	90;"	d
MC_D	src/include/ov2640_regs.h	36;"	d
MERGE	src/img/apriltag.c	9532;"	d	file:
MERGE	src/img/apriltag.c	9555;"	d	file:
MICROPY_OBJ_BASE_ALIGNMENT	src/py/py_image.c	/^} py_image_obj_t MICROPY_OBJ_BASE_ALIGNMENT;$/;"	t	typeref:struct:_py_image_obj_t	file:
MICROS_OFFSET	src/img/mjpeg.c	14;"	d	file:
MIDH	src/include/ov2640_regs.h	122;"	d
MIDL	src/include/ov2640_regs.h	123;"	d
MIN	src/include/common.h	30;"	d
MIN_MEM	src/img/agast.c	163;"	d	file:
MIN_MEM	src/img/agast.c	175;"	d	file:
MIN_MEM	src/img/fast.c	154;"	d	file:
MIN_MEM	src/img/fast.c	166;"	d	file:
MOD	src/img/zbar.c	2923;"	d	file:
MOD_MAX	zbar/error.c	40;"	d	file:
MOVI_OFFSET	src/img/mjpeg.c	20;"	d	file:
MSGERR	src/img/include/imlib.h	32;"	d
MSGERR	src/umm_malloc.c	11;"	d	file:
MSGLOG	src/img/include/imlib.h	31;"	d
MSGLOG	src/umm_malloc.c	10;"	d	file:
MS_SP	src/include/ov2640_regs.h	31;"	d
MT9D111_AUTO_EXPOSURE_CONTINUOUS	src/include/mt9d111.h	102;"	d
MT9D111_AUTO_EXPOSURE_FAST_SETTLING	src/include/mt9d111.h	100;"	d
MT9D111_AUTO_EXPOSURE_FAST_SETTLING_PLUS_METERING	src/include/mt9d111.h	103;"	d
MT9D111_AUTO_EXPOSURE_MANUAL	src/include/mt9d111.h	101;"	d
MT9D111_AUTO_EXPOSURE_OFF	src/include/mt9d111.h	99;"	d
MT9D111_CONFIG_I2C_ADR_HIGH	src/include/mt9d111.h	45;"	d
MT9D111_CONFIG_I2C_ADR_LOW	src/include/mt9d111.h	44;"	d
MT9D111_CONFIG_I2C_ID	src/include/mt9d111.h	47;"	d
MT9D111_H_	src/include/mt9d111.h	37;"	d
MT9D111_ID_CODE	src/include/mt9d111.h	50;"	d
MT9D111_MODE_CAPTURE	src/include/mt9d111.h	62;"	d
MT9D111_MODE_PREVIEW	src/include/mt9d111.h	61;"	d
MT9D111_OUTPUT_FORMAT_JPEG	src/include/mt9d111.h	70;"	d
MT9D111_OUTPUT_FORMAT_RAW_10	src/include/mt9d111.h	72;"	d
MT9D111_OUTPUT_FORMAT_RAW_8	src/include/mt9d111.h	71;"	d
MT9D111_OUTPUT_FORMAT_RGB444x	src/include/mt9d111.h	68;"	d
MT9D111_OUTPUT_FORMAT_RGB555	src/include/mt9d111.h	67;"	d
MT9D111_OUTPUT_FORMAT_RGB565	src/include/mt9d111.h	66;"	d
MT9D111_OUTPUT_FORMAT_RGBx444	src/include/mt9d111.h	69;"	d
MT9D111_OUTPUT_FORMAT_YCbCr	src/include/mt9d111.h	65;"	d
MT9D111_OUTPUT_MAX_HEIGHT	src/include/mt9d111.h	76;"	d
MT9D111_OUTPUT_MAX_WIDTH	src/include/mt9d111.h	75;"	d
MT9D111_REG_1D_APERTURE_CORRECTION_PARAMETERS	src/include/mt9d111.h	1022;"	d
MT9D111_REG_2D_APERTURE_CORRECTION_PARAMETERS	src/include/mt9d111.h	1035;"	d
MT9D111_REG_AE_AF_MEASUREMENT_ENABLE	src/include/mt9d111.h	2140;"	d
MT9D111_REG_AE_MEASUREMENT_WINDOW_SIZE_LSW	src/include/mt9d111.h	2139;"	d
MT9D111_REG_AF_FILTER_1_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W12_AND_W11	src/include/mt9d111.h	1888;"	d
MT9D111_REG_AF_FILTER_1_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W14_AND_W13	src/include/mt9d111.h	1895;"	d
MT9D111_REG_AF_FILTER_1_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W22_AND_W21	src/include/mt9d111.h	1902;"	d
MT9D111_REG_AF_FILTER_1_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W24_AND_W23	src/include/mt9d111.h	1909;"	d
MT9D111_REG_AF_FILTER_1_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W32_AND_W31	src/include/mt9d111.h	1916;"	d
MT9D111_REG_AF_FILTER_1_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W34_AND_W33	src/include/mt9d111.h	1923;"	d
MT9D111_REG_AF_FILTER_1_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W42_AND_W41	src/include/mt9d111.h	1930;"	d
MT9D111_REG_AF_FILTER_1_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W44_AND_W43	src/include/mt9d111.h	1937;"	d
MT9D111_REG_AF_FILTER_1_COEFFICIENTS	src/include/mt9d111.h	1864;"	d
MT9D111_REG_AF_FILTER_1_CONFIG	src/include/mt9d111.h	1881;"	d
MT9D111_REG_AF_FILTER_2_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W12_AND_W11	src/include/mt9d111.h	1972;"	d
MT9D111_REG_AF_FILTER_2_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W14_AND_W13	src/include/mt9d111.h	1979;"	d
MT9D111_REG_AF_FILTER_2_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W22_AND_W21	src/include/mt9d111.h	1986;"	d
MT9D111_REG_AF_FILTER_2_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W24_AND_W23	src/include/mt9d111.h	1993;"	d
MT9D111_REG_AF_FILTER_2_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W32_AND_W31	src/include/mt9d111.h	2000;"	d
MT9D111_REG_AF_FILTER_2_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W34_AND_W33	src/include/mt9d111.h	2007;"	d
MT9D111_REG_AF_FILTER_2_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W42_AND_W41	src/include/mt9d111.h	2014;"	d
MT9D111_REG_AF_FILTER_2_AVERAGE_SHARPNESS_MEASURE_FOR_AF_WINDOWS_W44_AND_W43	src/include/mt9d111.h	2021;"	d
MT9D111_REG_AF_FILTER_2_COEFFICIENTS	src/include/mt9d111.h	1950;"	d
MT9D111_REG_AF_FILTER_2_CONFIG	src/include/mt9d111.h	1965;"	d
MT9D111_REG_AF_MEASUREMENT_WINDOW_SIZE	src/include/mt9d111.h	1791;"	d
MT9D111_REG_ASSERT_FLASH	src/include/mt9d111.h	740;"	d
MT9D111_REG_ASSERT_STROBE_T3	src/include/mt9d111.h	728;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AE_WINDOWS_W12_AND_W11	src/include/mt9d111.h	2141;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AE_WINDOWS_W14_AND_W13	src/include/mt9d111.h	2142;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AE_WINDOWS_W22_AND_W21	src/include/mt9d111.h	2143;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AE_WINDOWS_W24_AND_W23	src/include/mt9d111.h	2144;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AE_WINDOWS_W32_AND_W31	src/include/mt9d111.h	2145;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AE_WINDOWS_W34_AND_W33	src/include/mt9d111.h	2146;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AE_WINDOWS_W42_AND_W41	src/include/mt9d111.h	2147;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AE_WINDOWS_W44_AND_W43	src/include/mt9d111.h	2148;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AF_WINDOWS_W12_AND_W11	src/include/mt9d111.h	1798;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AF_WINDOWS_W14_AND_W13	src/include/mt9d111.h	1805;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AF_WINDOWS_W22_AND_W21	src/include/mt9d111.h	1812;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AF_WINDOWS_W24_AND_W23	src/include/mt9d111.h	1819;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AF_WINDOWS_W32_AND_W31	src/include/mt9d111.h	1826;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AF_WINDOWS_W34_AND_W33	src/include/mt9d111.h	1833;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AF_WINDOWS_W42_AND_W41	src/include/mt9d111.h	1840;"	d
MT9D111_REG_AVERAGE_LUMINANCE_IN_AF_WINDOWS_W44_AND_W43	src/include/mt9d111.h	1847;"	d
MT9D111_REG_BLACK_ROWS	src/include/mt9d111.h	560;"	d
MT9D111_REG_BLANK_FRAMES	src/include/mt9d111.h	1260;"	d
MT9D111_REG_BLUE_CHROMIANCE_MEASURE_CALCULATED_BY_AWB	src/include/mt9d111.h	1013;"	d
MT9D111_REG_BLUE_GAIN	src/include/mt9d111.h	502;"	d
MT9D111_REG_BOTTOM_DARK_ROWS	src/include/mt9d111.h	484;"	d
MT9D111_REG_BOTTOM_TOP_COORDINATES_OF_AWB_MEASUREMENT_WINDOW	src/include/mt9d111.h	992;"	d
MT9D111_REG_BOUNDARIES_OF_FIRST_AE_MEASUREMENT_WINDOW_HEIGHT_WIDTH	src/include/mt9d111.h	2138;"	d
MT9D111_REG_BOUNDARIES_OF_FIRST_AE_MEASUREMENT_WINDOW_TOP_LEFT	src/include/mt9d111.h	2137;"	d
MT9D111_REG_BOUNDARIES_OF_FIRST_AF_MEASUREMENT_WINDOW_HEIGHT_WIDTH	src/include/mt9d111.h	1786;"	d
MT9D111_REG_BOUNDARIES_OF_FIRST_AF_MEASUREMENT_WINDOW_TOP_LEFT	src/include/mt9d111.h	1776;"	d
MT9D111_REG_BOUNDARIES_OF_FLICKER_MEASUREMENT_WINDOW_LEFT_WIDTH	src/include/mt9d111.h	1235;"	d
MT9D111_REG_BOUNDARIES_OF_FLICKER_MEASUREMENT_WINDOW_TOP_HEIGHT	src/include/mt9d111.h	1244;"	d
MT9D111_REG_BYTEWISE_ADDRESS	src/include/mt9d111.h	784;"	d
MT9D111_REG_CALIB_BLUE	src/include/mt9d111.h	645;"	d
MT9D111_REG_CALIB_CONTROL	src/include/mt9d111.h	628;"	d
MT9D111_REG_CALIB_GREEN_1	src/include/mt9d111.h	637;"	d
MT9D111_REG_CALIB_GREEN_2	src/include/mt9d111.h	662;"	d
MT9D111_REG_CALIB_RED	src/include/mt9d111.h	653;"	d
MT9D111_REG_CALIB_THRESHOLD	src/include/mt9d111.h	587;"	d
MT9D111_REG_CENTER_OFFSET	src/include/mt9d111.h	2097;"	d
MT9D111_REG_CLOCK_CONTROL	src/include/mt9d111.h	681;"	d
MT9D111_REG_COLOR_CORRECTION_MATRIX_ELEMENTS_1_AND_2_MANTISSAS	src/include/mt9d111.h	1163;"	d
MT9D111_REG_COLOR_CORRECTION_MATRIX_ELEMENTS_3_AND_4_MANTISSAS	src/include/mt9d111.h	1170;"	d
MT9D111_REG_COLOR_CORRECTION_MATRIX_ELEMENTS_5_AND_6_MANTISSAS	src/include/mt9d111.h	1177;"	d
MT9D111_REG_COLOR_CORRECTION_MATRIX_ELEMENTS_7_AND_8_MANTISSAS	src/include/mt9d111.h	1184;"	d
MT9D111_REG_COLOR_CORRECTION_MATRIX_ELEMENT_9_MANTISSA_AND_SIGNS	src/include/mt9d111.h	1200;"	d
MT9D111_REG_COLOR_CORRECTION_MATRIX_EXPONENTS_FOR_C11_C22	src/include/mt9d111.h	1142;"	d
MT9D111_REG_COLOR_CORRECTION_MATRIX_EXPONENTS_FOR_C22_C33	src/include/mt9d111.h	1156;"	d
MT9D111_REG_COLOR_PIPELINE_CONTROL	src/include/mt9d111.h	847;"	d
MT9D111_REG_COLUMN_START	src/include/mt9d111.h	155;"	d
MT9D111_REG_COL_WIDTH	src/include/mt9d111.h	167;"	d
MT9D111_REG_CONTEXT_CONTROL	src/include/mt9d111.h	804;"	d
MT9D111_REG_DARK_B_AVERAGE	src/include/mt9d111.h	570;"	d
MT9D111_REG_DARK_COL_ROWS	src/include/mt9d111.h	425;"	d
MT9D111_REG_DARK_G1_AVERAGE	src/include/mt9d111.h	565;"	d
MT9D111_REG_DARK_G2_AVERAGE	src/include/mt9d111.h	580;"	d
MT9D111_REG_DARK_R_AVERAGE	src/include/mt9d111.h	575;"	d
MT9D111_REG_DEASSERT_FLASH	src/include/mt9d111.h	746;"	d
MT9D111_REG_DEASSERT_STROBE_T4	src/include/mt9d111.h	734;"	d
MT9D111_REG_DECIMATOR_CONTROL	src/include/mt9d111.h	948;"	d
MT9D111_REG_DF_DX_FOR_BLUE_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2106;"	d
MT9D111_REG_DF_DX_FOR_GREEN_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2105;"	d
MT9D111_REG_DF_DX_FOR_RED_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2104;"	d
MT9D111_REG_DF_DY_FOR_BLUE_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2109;"	d
MT9D111_REG_DF_DY_FOR_GREEN_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2108;"	d
MT9D111_REG_DF_DY_FOR_RED_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2107;"	d
MT9D111_REG_DIGITAL_GAIN_1_FOR_ALL_COLORS	src/include/mt9d111.h	1225;"	d
MT9D111_REG_DIGITAL_GAIN_1_FOR_BLUE_PIXELS	src/include/mt9d111.h	1220;"	d
MT9D111_REG_DIGITAL_GAIN_1_FOR_GREEN_1_PIXELS	src/include/mt9d111.h	1210;"	d
MT9D111_REG_DIGITAL_GAIN_1_FOR_GREEN_2_PIXELS	src/include/mt9d111.h	1215;"	d
MT9D111_REG_DIGITAL_GAIN_1_FOR_RED_PIXELS	src/include/mt9d111.h	1205;"	d
MT9D111_REG_DIGITAL_GAIN_2	src/include/mt9d111.h	1129;"	d
MT9D111_REG_EDGE_THRESHOLD_FOR_INTERPOLATION	src/include/mt9d111.h	1096;"	d
MT9D111_REG_ENABLE_SUPPORT_FOR_PREVIEW_MODES	src/include/mt9d111.h	1076;"	d
MT9D111_REG_EXTERNAL_SAMPLE_1	src/include/mt9d111.h	752;"	d
MT9D111_REG_EXTERNAL_SAMPLE_2	src/include/mt9d111.h	757;"	d
MT9D111_REG_EXTERNAL_SAMPLE_3	src/include/mt9d111.h	762;"	d
MT9D111_REG_EXTERNAL_SAMPLING_CONTROL	src/include/mt9d111.h	772;"	d
MT9D111_REG_EXTRA_DELAY	src/include/mt9d111.h	226;"	d
MT9D111_REG_EXTRA_RESET	src/include/mt9d111.h	463;"	d
MT9D111_REG_FACTORY_BYPASS	src/include/mt9d111.h	864;"	d
MT9D111_REG_FILTERS	src/include/mt9d111.h	1056;"	d
MT9D111_REG_FIRST_BLACK_LEVEL	src/include/mt9d111.h	1070;"	d
MT9D111_REG_FIRST_SET_OF_BIN_DEFINITIONS	src/include/mt9d111.h	2152;"	d
MT9D111_REG_FLASH	src/include/mt9d111.h	451;"	d
MT9D111_REG_FLICKER_MEASUREMENT_WINDOW_SIZE	src/include/mt9d111.h	1249;"	d
MT9D111_REG_FRAME_COUNT	src/include/mt9d111.h	1314;"	d
MT9D111_REG_FRAME_VALID_CONTROL	src/include/mt9d111.h	297;"	d
MT9D111_REG_FX_FOR_BLUE_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2100;"	d
MT9D111_REG_FX_FOR_GREEN_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2099;"	d
MT9D111_REG_FX_FOR_RED_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2098;"	d
MT9D111_REG_FY_FOR_BLUE_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2103;"	d
MT9D111_REG_FY_FOR_GREEN_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2102;"	d
MT9D111_REG_FY_FOR_RED_COLOR_AT_THE_FIRST_PIXEL_OF_THE_ARRAY	src/include/mt9d111.h	2101;"	d
MT9D111_REG_GAMMA_CURVE_KNEES_0_AND_1	src/include/mt9d111.h	1355;"	d
MT9D111_REG_GAMMA_CURVE_KNEES_10_AND_11	src/include/mt9d111.h	1390;"	d
MT9D111_REG_GAMMA_CURVE_KNEES_12_AND_13	src/include/mt9d111.h	1397;"	d
MT9D111_REG_GAMMA_CURVE_KNEES_14_AND_15	src/include/mt9d111.h	1404;"	d
MT9D111_REG_GAMMA_CURVE_KNEES_16_AND_17	src/include/mt9d111.h	1411;"	d
MT9D111_REG_GAMMA_CURVE_KNEES_2_AND_3	src/include/mt9d111.h	1362;"	d
MT9D111_REG_GAMMA_CURVE_KNEES_4_AND_5	src/include/mt9d111.h	1369;"	d
MT9D111_REG_GAMMA_CURVE_KNEES_6_AND_7	src/include/mt9d111.h	1376;"	d
MT9D111_REG_GAMMA_CURVE_KNEES_8_AND_9	src/include/mt9d111.h	1383;"	d
MT9D111_REG_GAMMA_CURVE_KNEE_18	src/include/mt9d111.h	1416;"	d
MT9D111_REG_GLOBAL_GAIN	src/include/mt9d111.h	525;"	d
MT9D111_REG_GLOBAL_OFFSET_OF_FXY_FUNCTION	src/include/mt9d111.h	2135;"	d
MT9D111_REG_GLOBAL_SHUTTER_CONTROL	src/include/mt9d111.h	709;"	d
MT9D111_REG_GREEN_1_GAIN	src/include/mt9d111.h	493;"	d
MT9D111_REG_GREEN_2_GAIN	src/include/mt9d111.h	520;"	d
MT9D111_REG_HISTOGRAM_WINDOW_LOWER_BOUNDARIES	src/include/mt9d111.h	2150;"	d
MT9D111_REG_HISTOGRAM_WINDOW_SIZE	src/include/mt9d111.h	2154;"	d
MT9D111_REG_HISTOGRAM_WINDOW_UPPER_BOUNDARIES	src/include/mt9d111.h	2151;"	d
MT9D111_REG_HORIZONTAL_BLANKING_A	src/include/mt9d111.h	188;"	d
MT9D111_REG_HORIZONTAL_BLANKING_B	src/include/mt9d111.h	174;"	d
MT9D111_REG_INTERNAL_CLOCK_CONTROL	src/include/mt9d111.h	908;"	d
MT9D111_REG_JPEG_CONTROL	src/include/mt9d111.h	1526;"	d
MT9D111_REG_JPEG_CORE_CONFIG	src/include/mt9d111.h	1595;"	d
MT9D111_REG_JPEG_ENCODER_BYPASS	src/include/mt9d111.h	1602;"	d
MT9D111_REG_JPEG_FRONT_END_CONFIG	src/include/mt9d111.h	1587;"	d
MT9D111_REG_JPEG_INDIRECT_ACCESS_CONTROL	src/include/mt9d111.h	1758;"	d
MT9D111_REG_JPEG_INDIRECT_ACCESS_DATA	src/include/mt9d111.h	1766;"	d
MT9D111_REG_JPEG_RAM_TEST_CONTROL_REGISTER	src/include/mt9d111.h	1738;"	d
MT9D111_REG_JPEG_STATUS_0	src/include/mt9d111.h	1560;"	d
MT9D111_REG_JPEG_STATUS_1	src/include/mt9d111.h	1567;"	d
MT9D111_REG_JPEG_STATUS_2	src/include/mt9d111.h	1577;"	d
MT9D111_REG_K_FACTOR_IN_K_FX_FY	src/include/mt9d111.h	2136;"	d
MT9D111_REG_LENS_CORRECTION_CONTROL	src/include/mt9d111.h	2042;"	d
MT9D111_REG_LINE_COUNT	src/include/mt9d111.h	1309;"	d
MT9D111_REG_LINE_VALID_CONTROL	src/include/mt9d111.h	472;"	d
MT9D111_REG_LUMINANCE_MEASURE_CALCULATED_BY_AWB	src/include/mt9d111.h	1006;"	d
MT9D111_REG_LUMINANCE_RANGE_OF_PIX_CONSIDERED_IN_WB_STATS	src/include/mt9d111.h	972;"	d
MT9D111_REG_MEASURE_OF_AVERAGE_LUMINANCE_IN_FLICKER_MEASUREMENT_WINDOW	src/include/mt9d111.h	1254;"	d
MT9D111_REG_MICROCONTROLLER_BOOT_MODE	src/include/mt9d111.h	1465;"	d
MT9D111_REG_MICROCONTROLLER_VARIABLE_ADDRESS	src/include/mt9d111.h	1490;"	d
MT9D111_REG_MICROCONTROLLER_VARIABLE_DATA	src/include/mt9d111.h	1499;"	d
MT9D111_REG_MICROCONTROLLER_VARIABLE_DATA_USING_BURST_TWO_WIRE_SERIAL_INTERFACE_ACCESS	src/include/mt9d111.h	1505;"	d
MT9D111_REG_MIRRORS_SENSOR_REGISTER_0x20	src/include/mt9d111.h	1081;"	d
MT9D111_REG_MIRRORS_SENSOR_REGISTER_0x21	src/include/mt9d111.h	1091;"	d
MT9D111_REG_MIRRORS_SENSOR_REGISTER_0xF2	src/include/mt9d111.h	1086;"	d
MT9D111_REG_OUTPUT_CONFIG	src/include/mt9d111.h	1663;"	d
MT9D111_REG_OUTPUT_FORMAT_CONFIGURATION	src/include/mt9d111.h	1285;"	d
MT9D111_REG_OUTPUT_FORMAT_TEST	src/include/mt9d111.h	1304;"	d
MT9D111_REG_OUTPUT_PCLK1_AND_PCLK2_CONFIG	src/include/mt9d111.h	1682;"	d
MT9D111_REG_OUTPUT_PCLK3_CONFIG	src/include/mt9d111.h	1694;"	d
MT9D111_REG_PAD_SLEW	src/include/mt9d111.h	887;"	d
MT9D111_REG_PAGE_0	src/include/mt9d111.h	126;"	d
MT9D111_REG_PAGE_1	src/include/mt9d111.h	127;"	d
MT9D111_REG_PAGE_2	src/include/mt9d111.h	128;"	d
MT9D111_REG_PAGE_REGISTER	src/include/mt9d111.h	778;"	d
MT9D111_REG_PIXEL_COUNTS_FOR_BIN0_AND_BIN1	src/include/mt9d111.h	2155;"	d
MT9D111_REG_PIXEL_COUNTS_FOR_BIN2_AND_BIN3	src/include/mt9d111.h	2156;"	d
MT9D111_REG_PLL_CONTROL_1	src/include/mt9d111.h	688;"	d
MT9D111_REG_PLL_CONTROL_2	src/include/mt9d111.h	695;"	d
MT9D111_REG_READ_MODE_A	src/include/mt9d111.h	400;"	d
MT9D111_REG_READ_MODE_B	src/include/mt9d111.h	365;"	d
MT9D111_REG_RED_CHROMIANCE_MEASURE_CALCULATED_BY_AWB	src/include/mt9d111.h	999;"	d
MT9D111_REG_RED_GAIN	src/include/mt9d111.h	511;"	d
MT9D111_REG_RESERVED	src/include/mt9d111.h	141;"	d
MT9D111_REG_RESERVED_2	src/include/mt9d111.h	809;"	d
MT9D111_REG_RESET	src/include/mt9d111.h	280;"	d
MT9D111_REG_RIGHT_LEFT_COORDINATES_OF_AWB_MEASUREMENT_WINDOW	src/include/mt9d111.h	982;"	d
MT9D111_REG_ROW_NOISE	src/include/mt9d111.h	554;"	d
MT9D111_REG_ROW_SPEED	src/include/mt9d111.h	219;"	d
MT9D111_REG_ROW_START	src/include/mt9d111.h	148;"	d
MT9D111_REG_ROW_WIDTH	src/include/mt9d111.h	161;"	d
MT9D111_REG_SATURATION_AND_COLOR_KILL	src/include/mt9d111.h	2149;"	d
MT9D111_REG_SECONDS_SET_OF_BIN_DEFINITIONS	src/include/mt9d111.h	2153;"	d
MT9D111_REG_SECOND_BLACK_LEVEL	src/include/mt9d111.h	1062;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_0_BLUE_COLOR	src/include/mt9d111.h	2112;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_0_GREEN_COLOR	src/include/mt9d111.h	2111;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_0_RED_COLOR	src/include/mt9d111.h	2110;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_1_BLUE_COLOR	src/include/mt9d111.h	2115;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_1_GREEN_COLOR	src/include/mt9d111.h	2114;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_1_RED_COLOR	src/include/mt9d111.h	2113;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_2_BLUE_COLOR	src/include/mt9d111.h	2118;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_2_GREEN_COLOR	src/include/mt9d111.h	2117;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_2_RED_COLOR	src/include/mt9d111.h	2116;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_3_BLUE_COLOR	src/include/mt9d111.h	2121;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_3_GREEN_COLOR	src/include/mt9d111.h	2120;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_3_RED_COLOR	src/include/mt9d111.h	2119;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_4_BLUE_COLOR	src/include/mt9d111.h	2124;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_4_GREEN_COLOR	src/include/mt9d111.h	2123;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_4_RED_COLOR	src/include/mt9d111.h	2122;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_5_BLUE_COLOR	src/include/mt9d111.h	2127;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_5_GREEN_COLOR	src/include/mt9d111.h	2126;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_5_RED_COLOR	src/include/mt9d111.h	2125;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_6_BLUE_COLOR	src/include/mt9d111.h	2130;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_6_GREEN_COLOR	src/include/mt9d111.h	2129;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_6_RED_COLOR	src/include/mt9d111.h	2128;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_7_BLUE_COLOR	src/include/mt9d111.h	2133;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_7_GREEN_COLOR	src/include/mt9d111.h	2132;"	d
MT9D111_REG_SECOND_DERIVATIVE_FOR_ZONE_7_RED_COLOR	src/include/mt9d111.h	2131;"	d
MT9D111_REG_SEPIA_CONSTANTS	src/include/mt9d111.h	1338;"	d
MT9D111_REG_SHUTTER_DELAY	src/include/mt9d111.h	234;"	d
MT9D111_REG_SHUTTER_WIDTH	src/include/mt9d111.h	201;"	d
MT9D111_REG_SPECIAL_EFFECTS	src/include/mt9d111.h	1331;"	d
MT9D111_REG_SPOOF_FRAME_HEIGHT	src/include/mt9d111.h	1707;"	d
MT9D111_REG_SPOOF_FRAME_LINE_TIMING	src/include/mt9d111.h	1716;"	d
MT9D111_REG_SPOOF_FRAME_WIDTH	src/include/mt9d111.h	1700;"	d
MT9D111_REG_START_INTEGRATION_T1	src/include/mt9d111.h	716;"	d
MT9D111_REG_START_READOUT_T2	src/include/mt9d111.h	722;"	d
MT9D111_REG_TEST_PATTERN	src/include/mt9d111.h	1109;"	d
MT9D111_REG_TEST_PATTERN_B_VALUE	src/include/mt9d111.h	1124;"	d
MT9D111_REG_TEST_PATTERN_G_MONOCHROME_VALUE	src/include/mt9d111.h	1119;"	d
MT9D111_REG_TEST_PATTERN_R_MONOCHROME_VALUE	src/include/mt9d111.h	1114;"	d
MT9D111_REG_VERTICAL_BLANKING_A	src/include/mt9d111.h	195;"	d
MT9D111_REG_VERTICAL_BLANKING_B	src/include/mt9d111.h	181;"	d
MT9D111_REG_WEIGHT_FOR_HORIZONTAL_DECIMATION	src/include/mt9d111.h	954;"	d
MT9D111_REG_WEIGHT_FOR_VERTICAL_DECIMATION	src/include/mt9d111.h	962;"	d
MT9D111_REG_X0_COORDINATE_FOR_CROP_WINDOW	src/include/mt9d111.h	916;"	d
MT9D111_REG_X1_COORDINATE_FOR_CROP_WINDOW_1	src/include/mt9d111.h	921;"	d
MT9D111_REG_X2_FACTORS	src/include/mt9d111.h	2134;"	d
MT9D111_REG_Y0_COORDINATE_FOR_CROP_WINDOW	src/include/mt9d111.h	926;"	d
MT9D111_REG_Y1_COORDINATE_FOR_CROP_WINDOW_1	src/include/mt9d111.h	931;"	d
MT9D111_REG_YUV_YCbCr_CONTROL	src/include/mt9d111.h	1429;"	d
MT9D111_REG_Y_RGB_OFFSET	src/include/mt9d111.h	1436;"	d
MT9D111_REG_ZONE_BOUNDARIES_X0_AND_X3	src/include/mt9d111.h	2060;"	d
MT9D111_REG_ZONE_BOUNDARIES_X1_AND_X2	src/include/mt9d111.h	2051;"	d
MT9D111_REG_ZONE_BOUNDARIES_X4_AND_X5	src/include/mt9d111.h	2069;"	d
MT9D111_REG_ZONE_BOUNDARIES_Y0_AND_Y3	src/include/mt9d111.h	2087;"	d
MT9D111_REG_ZONE_BOUNDARIES_Y1_AND_Y2	src/include/mt9d111.h	2078;"	d
MT9D111_REG_ZONE_BOUNDARIES_Y4_AND_Y5	src/include/mt9d111.h	2096;"	d
MT9D111_RESET_HARD	src/include/mt9d111.h	53;"	d
MT9D111_RESET_SOFT	src/include/mt9d111.h	54;"	d
MT9D111_SKIP_16X	src/include/mt9d111.h	109;"	d
MT9D111_SKIP_2X	src/include/mt9d111.h	106;"	d
MT9D111_SKIP_4X	src/include/mt9d111.h	107;"	d
MT9D111_SKIP_8X	src/include/mt9d111.h	108;"	d
MT9D111_SPECIAL_EFFECTS_DISABLED	src/include/mt9d111.h	79;"	d
MT9D111_SPECIAL_EFFECTS_MONOCHROME	src/include/mt9d111.h	80;"	d
MT9D111_SPECIAL_EFFECTS_NEGATIVE	src/include/mt9d111.h	82;"	d
MT9D111_SPECIAL_EFFECTS_SEPIA	src/include/mt9d111.h	81;"	d
MT9D111_SPECIAL_EFFECTS_SOLARIZATION_WITH_UNMODIFIED_UV	src/include/mt9d111.h	83;"	d
MT9D111_SPECIAL_EFFECTS_SOLARIZATION_WITH_UV	src/include/mt9d111.h	84;"	d
MT9D111_STANDBY_HARD	src/include/mt9d111.h	57;"	d
MT9D111_STANDBY_SOFT	src/include/mt9d111.h	58;"	d
MT9D111_STATE_CAPTURE	src/include/mt9d111.h	94;"	d
MT9D111_STATE_CAPTURE_ENTER	src/include/mt9d111.h	93;"	d
MT9D111_STATE_CAPTURE_LEAVE	src/include/mt9d111.h	95;"	d
MT9D111_STATE_CHANGE_TO_CAPTURE	src/include/mt9d111.h	92;"	d
MT9D111_STATE_CHANGE_TO_PREVIEW	src/include/mt9d111.h	88;"	d
MT9D111_STATE_INITIALIZE	src/include/mt9d111.h	87;"	d
MT9D111_STATE_PREVIEW	src/include/mt9d111.h	90;"	d
MT9D111_STATE_PREVIEW_ENTER	src/include/mt9d111.h	89;"	d
MT9D111_STATE_PREVIEW_LEAVE	src/include/mt9d111.h	91;"	d
MT9D111_STATE_STANDBY	src/include/mt9d111.h	96;"	d
MT9V034_ID	src/include/sensor.h	22;"	d
MULTIPLY	src/img/jpeg.c	236;"	d	file:
MUTEX_TID_IDE	src/include/mutex.h	18;"	d
MUTEX_TID_OMV	src/include/mutex.h	19;"	d
M_2__PI	src/img/lsd.c	457;"	d	file:
M_3_2_PI	src/img/lsd.c	454;"	d	file:
M_APP0	src/img/picojpeg.c	/^   M_APP0  = 0xE0,$/;"	e	enum:__anon37	file:
M_APP15	src/img/picojpeg.c	/^   M_APP15 = 0xEF,$/;"	e	enum:__anon37	file:
M_COM	src/img/picojpeg.c	/^   M_COM   = 0xFE,$/;"	e	enum:__anon37	file:
M_DAC	src/img/picojpeg.c	/^   M_DAC   = 0xCC,$/;"	e	enum:__anon37	file:
M_DHP	src/img/picojpeg.c	/^   M_DHP   = 0xDE,$/;"	e	enum:__anon37	file:
M_DHT	src/img/picojpeg.c	/^   M_DHT   = 0xC4,$/;"	e	enum:__anon37	file:
M_DNL	src/img/picojpeg.c	/^   M_DNL   = 0xDC,$/;"	e	enum:__anon37	file:
M_DQT	src/img/picojpeg.c	/^   M_DQT   = 0xDB,$/;"	e	enum:__anon37	file:
M_DRI	src/img/picojpeg.c	/^   M_DRI   = 0xDD,$/;"	e	enum:__anon37	file:
M_EOI	src/img/picojpeg.c	/^   M_EOI   = 0xD9,$/;"	e	enum:__anon37	file:
M_ERROR	src/img/picojpeg.c	/^   M_ERROR = 0x100,$/;"	e	enum:__anon37	file:
M_EXP	src/img/picojpeg.c	/^   M_EXP   = 0xDF,$/;"	e	enum:__anon37	file:
M_JPG	src/img/picojpeg.c	/^   M_JPG   = 0xC8,$/;"	e	enum:__anon37	file:
M_JPG0	src/img/picojpeg.c	/^   M_JPG0  = 0xF0,$/;"	e	enum:__anon37	file:
M_JPG13	src/img/picojpeg.c	/^   M_JPG13 = 0xFD,$/;"	e	enum:__anon37	file:
M_LN10	src/img/lsd.c	434;"	d	file:
M_PI	src/img/apriltag.c	10773;"	d	file:
M_PI	src/img/apriltag.c	812;"	d	file:
M_PI	src/img/apriltag.c	9428;"	d	file:
M_PI	src/img/dmtx.c	76;"	d	file:
M_PI	src/img/lsd.c	439;"	d	file:
M_PI_2	src/img/dmtx.c	80;"	d	file:
M_RST0	src/img/picojpeg.c	/^   M_RST0  = 0xD0,$/;"	e	enum:__anon37	file:
M_RST1	src/img/picojpeg.c	/^   M_RST1  = 0xD1,$/;"	e	enum:__anon37	file:
M_RST2	src/img/picojpeg.c	/^   M_RST2  = 0xD2,$/;"	e	enum:__anon37	file:
M_RST3	src/img/picojpeg.c	/^   M_RST3  = 0xD3,$/;"	e	enum:__anon37	file:
M_RST4	src/img/picojpeg.c	/^   M_RST4  = 0xD4,$/;"	e	enum:__anon37	file:
M_RST5	src/img/picojpeg.c	/^   M_RST5  = 0xD5,$/;"	e	enum:__anon37	file:
M_RST6	src/img/picojpeg.c	/^   M_RST6  = 0xD6,$/;"	e	enum:__anon37	file:
M_RST7	src/img/picojpeg.c	/^   M_RST7  = 0xD7,$/;"	e	enum:__anon37	file:
M_SOF0	src/img/picojpeg.c	/^   M_SOF0  = 0xC0,$/;"	e	enum:__anon37	file:
M_SOF1	src/img/picojpeg.c	/^   M_SOF1  = 0xC1,$/;"	e	enum:__anon37	file:
M_SOF10	src/img/picojpeg.c	/^   M_SOF10 = 0xCA,$/;"	e	enum:__anon37	file:
M_SOF11	src/img/picojpeg.c	/^   M_SOF11 = 0xCB,$/;"	e	enum:__anon37	file:
M_SOF13	src/img/picojpeg.c	/^   M_SOF13 = 0xCD,$/;"	e	enum:__anon37	file:
M_SOF14	src/img/picojpeg.c	/^   M_SOF14 = 0xCE,$/;"	e	enum:__anon37	file:
M_SOF15	src/img/picojpeg.c	/^   M_SOF15 = 0xCF,$/;"	e	enum:__anon37	file:
M_SOF2	src/img/picojpeg.c	/^   M_SOF2  = 0xC2,$/;"	e	enum:__anon37	file:
M_SOF3	src/img/picojpeg.c	/^   M_SOF3  = 0xC3,$/;"	e	enum:__anon37	file:
M_SOF5	src/img/picojpeg.c	/^   M_SOF5  = 0xC5,$/;"	e	enum:__anon37	file:
M_SOF6	src/img/picojpeg.c	/^   M_SOF6  = 0xC6,$/;"	e	enum:__anon37	file:
M_SOF7	src/img/picojpeg.c	/^   M_SOF7  = 0xC7,$/;"	e	enum:__anon37	file:
M_SOF9	src/img/picojpeg.c	/^   M_SOF9  = 0xC9,$/;"	e	enum:__anon37	file:
M_SOI	src/img/picojpeg.c	/^   M_SOI   = 0xD8,$/;"	e	enum:__anon37	file:
M_SOS	src/img/picojpeg.c	/^   M_SOS   = 0xDA,$/;"	e	enum:__anon37	file:
M_TEM	src/img/picojpeg.c	/^   M_TEM   = 0x01,$/;"	e	enum:__anon37	file:
M_TWOPI	src/img/apriltag.c	808;"	d	file:
MakeHistogram	src/img/clahe.c	/^void MakeHistogram (kz_pixel_t* pImage, unsigned int uiXRes,$/;"	f
MakeLut	src/img/clahe.c	/^void MakeLut (kz_pixel_t * pLUT, kz_pixel_t Min, kz_pixel_t Max, unsigned int uiNrBins)$/;"	f
MapHistogram	src/img/clahe.c	/^void MapHistogram (unsigned long* pulHistogram, kz_pixel_t Min, kz_pixel_t Max,$/;"	f
Mathematics	pybind_test/whjy.h	/^    int Mathematics;  $/;"	m	struct:student
MatrixRegionAlignCalibEdge	src/img/dmtx.c	/^MatrixRegionAlignCalibEdge(DmtxDecode *dec, DmtxRegion *reg, int edgeLoc)$/;"	f	file:
MatrixRegionFindSize	src/img/dmtx.c	/^MatrixRegionFindSize(DmtxDecode *dec, DmtxRegion *reg)$/;"	f	file:
MatrixRegionOrientation	src/img/dmtx.c	/^MatrixRegionOrientation(DmtxDecode *dec, DmtxRegion *reg, DmtxPointFlow begin)$/;"	f	file:
MatrixRegionSeekEdge	src/img/dmtx.c	/^MatrixRegionSeekEdge(DmtxDecode *dec, DmtxPixelLoc loc)$/;"	f	file:
ModulePlacementEcc200	src/img/dmtx.c	/^ModulePlacementEcc200(unsigned char *modules, unsigned char *codewords, int sizeIdx, int moduleOnColor)$/;"	f	file:
Mx	src/img/apriltag.c	/^    double Mx, My;$/;"	m	struct:line_fit_pt	file:
Mxx	src/img/apriltag.c	/^    double Mxx, Myy, Mxy;$/;"	m	struct:line_fit_pt	file:
Mxy	src/img/apriltag.c	/^    double Mxx, Myy, Mxy;$/;"	m	struct:line_fit_pt	file:
My	src/img/apriltag.c	/^    double Mx, My;$/;"	m	struct:line_fit_pt	file:
Myy	src/img/apriltag.c	/^    double Mxx, Myy, Mxy;$/;"	m	struct:line_fit_pt	file:
NIBUF	src/img/zbar.c	4170;"	d	file:
NN	src/img/dmtx.c	4555;"	d	file:
NORETURN	src/fb_alloc.c	20;"	d	file:
NORETURN	src/xalloc.c	15;"	d	file:
NOTDEF	src/img/lsd.c	451;"	d	file:
NOTUSED	src/img/lsd.c	460;"	d	file:
NO_STATS	src/img/zbar.c	35;"	d	file:
NUM_BRIGHTNESS_LEVELS	src/ov2640.c	553;"	d	file:
NUM_BRIGHTNESS_LEVELS	src/ov7740.c	87;"	d	file:
NUM_CFGS	src/img/zbar.c	2391;"	d	file:
NUM_CFGS	zbar/decoder.h	31;"	d
NUM_CHARS	src/img/zbar.c	5877;"	d	file:
NUM_CHARS	src/img/zbar.c	6188;"	d	file:
NUM_CHARS	src/img/zbar.c	6613;"	d	file:
NUM_CHARS	src/img/zbar.c	7145;"	d	file:
NUM_CONTRAST_LEVELS	src/gc0328.c	889;"	d	file:
NUM_CONTRAST_LEVELS	src/gc2145.c	111;"	d	file:
NUM_CONTRAST_LEVELS	src/ov2640.c	563;"	d	file:
NUM_CONTRAST_LEVELS	src/ov7740.c	100;"	d	file:
NUM_SATURATION_LEVELS	src/gc0328.c	918;"	d	file:
NUM_SATURATION_LEVELS	src/gc2145.c	141;"	d	file:
NUM_SATURATION_LEVELS	src/ov2640.c	573;"	d	file:
NUM_SATURATION_LEVELS	src/ov7740.c	113;"	d	file:
NUM_SCN_CFGS	src/img/zbar.c	1549;"	d	file:
NUM_SCN_CFGS	zbar/img_scanner.c	73;"	d	file:
NUM_SYMS	src/img/zbar.c	1138;"	d	file:
N_BINS	src/img/hog.c	17;"	d	file:
OMV_ARCH_STR	src/include/omv_boardconfig.h	45;"	d
OMV_AXI_SRAM_LENGTH	src/include/omv_boardconfig.h	116;"	d
OMV_AXI_SRAM_ORIGIN	src/include/omv_boardconfig.h	115;"	d
OMV_BOARD_TYPE	src/include/omv_boardconfig.h	46;"	d
OMV_BOOTLDR_LED_PIN	src/include/omv_boardconfig.h	66;"	d
OMV_BOOTLDR_LED_PORT	src/include/omv_boardconfig.h	67;"	d
OMV_BOOT_LENGTH	src/include/omv_boardconfig.h	104;"	d
OMV_BOOT_ORIGIN	src/include/omv_boardconfig.h	103;"	d
OMV_CCM_LENGTH	src/include/omv_boardconfig.h	108;"	d
OMV_CCM_ORIGIN	src/include/omv_boardconfig.h	107;"	d
OMV_DMA_MEMORY	src/include/omv_boardconfig.h	92;"	d
OMV_DMA_REGION_BASE	src/include/omv_boardconfig.h	119;"	d
OMV_DMA_REGION_SIZE	src/include/omv_boardconfig.h	120;"	d
OMV_ENABLE_LEPTON	src/include/omv_boardconfig.h	77;"	d
OMV_ENABLE_MT9V034	src/include/omv_boardconfig.h	76;"	d
OMV_FB_ALLOC_SIZE	src/fb_alloc.c	22;"	d	file:
OMV_FB_ALLOC_SIZE	src/fb_alloc.c	27;"	d	file:
OMV_FB_ALLOC_SIZE	src/include/omv_boardconfig.h	27;"	d
OMV_FB_ALLOC_SIZE	src/include/omv_boardconfig.h	32;"	d
OMV_FB_MEMORY	src/include/omv_boardconfig.h	93;"	d
OMV_FFS_MEMORY	src/include/omv_boardconfig.h	90;"	d
OMV_FLASH_LAYOUT	src/include/omv_boardconfig.h	50;"	d
OMV_HARDWARE_JPEG	src/include/omv_boardconfig.h	73;"	d
OMV_HEAP_SIZE	src/include/omv_boardconfig.h	98;"	d
OMV_INIT_BPP	src/include/omv_boardconfig.h	16;"	d
OMV_JPEG_BUF_SIZE	src/include/omv_boardconfig.h	23;"	d
OMV_JPEG_MEMORY	src/include/omv_boardconfig.h	94;"	d
OMV_MAIN_MEMORY	src/include/omv_boardconfig.h	91;"	d
OMV_MINIMUM	src/include/imlib_config.h	21;"	d
OMV_MSC_BUF_SIZE	src/include/omv_boardconfig.h	100;"	d
OMV_OV7725_BANDING	src/include/omv_boardconfig.h	63;"	d
OMV_OV7725_PLL_CONFIG	src/include/omv_boardconfig.h	62;"	d
OMV_RAW_BUF_SIZE	src/include/omv_boardconfig.h	70;"	d
OMV_SRAM1_LENGTH	src/include/omv_boardconfig.h	110;"	d
OMV_SRAM1_ORIGIN	src/include/omv_boardconfig.h	109;"	d
OMV_SRAM3_LENGTH	src/include/omv_boardconfig.h	112;"	d
OMV_SRAM3_ORIGIN	src/include/omv_boardconfig.h	111;"	d
OMV_SRAM4_LENGTH	src/include/omv_boardconfig.h	114;"	d
OMV_SRAM4_ORIGIN	src/include/omv_boardconfig.h	113;"	d
OMV_STACK_SIZE	src/include/omv_boardconfig.h	97;"	d
OMV_TEXT_LENGTH	src/include/omv_boardconfig.h	106;"	d
OMV_TEXT_ORIGIN	src/include/omv_boardconfig.h	105;"	d
OMV_VFS_BUF_SIZE	src/include/omv_boardconfig.h	101;"	d
OMV_VOSPI_MEMORY	src/include/omv_boardconfig.h	95;"	d
OMV_XCLK_FREQUENCY	src/include/omv_boardconfig.h	60;"	d
OMV_XCLK_MCO	src/include/omv_boardconfig.h	52;"	d
OMV_XCLK_SOURCE	src/include/omv_boardconfig.h	56;"	d
OMV_XCLK_TIM	src/include/omv_boardconfig.h	53;"	d
ON_CHIP_ID	src/sensor.c	37;"	d	file:
OV2640_ID	src/include/sensor.h	16;"	d
OV3660_ID	src/include/sensor.h	21;"	d
OV5640_AF_REG	src/include/ov5640_regs.h	/^const uint16_t OV5640_AF_REG[][2] = {$/;"	v
OV5640_ID	src/include/sensor.h	17;"	d
OV5642_ID	src/include/sensor.h	18;"	d
OV5642_ovga_30fps_regs	src/include/ov5642_regs.h	/^const uint16_t OV5642_ovga_30fps_regs[][2] = {$/;"	v
OV7725_ID	src/include/sensor.h	19;"	d
OV7740_ID	src/include/sensor.h	20;"	d
OV7740_SET_FLIP	src/include/ov7740.h	7;"	d
OV7740_SET_MIRROR	src/include/ov7740.h	6;"	d
OV7740_SET_SP	src/include/ov7740.h	8;"	d
OV9650_ID	src/include/sensor.h	15;"	d
OV_CHIP_ID	src/sensor.c	35;"	d	file:
OV_CHIP_ID2	src/sensor.c	36;"	d	file:
OV_CHIP_ID2_16BIT	src/sensor.c	39;"	d	file:
OV_CHIP_ID_16BIT	src/sensor.c	38;"	d	file:
PATCH_SIZE	src/img/orb.c	23;"	d	file:
PDF417_HASH_MASK	src/img/zbar.c	7176;"	d	file:
PDF417_STOP	src/img/zbar.c	7720;"	d	file:
PI	src/img/include/imlib.h	87;"	d
PICOJPEG_H	src/img/include/picojpeg.h	5;"	d
PIXEL_AT	src/img/integral.c	104;"	d	file:
PIXEL_AT	src/img/integral.c	115;"	d	file:
PIXEL_AT	src/img/integral_mw.c	306;"	d	file:
PIXEL_AT	src/img/integral_mw.c	309;"	d	file:
PIXFORMAT_BAYER	src/include/sensor.h	/^    PIXFORMAT_BAYER,     \/\/ 1BPP\/RAW$/;"	e	enum:__anon48
PIXFORMAT_GRAYSCALE	src/include/sensor.h	/^    PIXFORMAT_GRAYSCALE, \/\/ 1BPP\/GRAYSCALE$/;"	e	enum:__anon48
PIXFORMAT_INVLAID	src/include/sensor.h	/^    PIXFORMAT_INVLAID = 0,$/;"	e	enum:__anon48
PIXFORMAT_JPEG	src/include/sensor.h	/^    PIXFORMAT_JPEG,      \/\/ JPEG\/COMPRESSED$/;"	e	enum:__anon48
PIXFORMAT_RGB565	src/include/sensor.h	/^    PIXFORMAT_RGB565,    \/\/ 2BPP\/RGB565$/;"	e	enum:__anon48
PIXFORMAT_YUV422	src/include/sensor.h	/^    PIXFORMAT_YUV422,    \/\/ 2BPP\/YUV422$/;"	e	enum:__anon48
PJPG_ARITH_SHIFT_RIGHT_8_L	src/img/picojpeg.c	61;"	d	file:
PJPG_ARITH_SHIFT_RIGHT_8_L	src/img/picojpeg.c	64;"	d	file:
PJPG_ARITH_SHIFT_RIGHT_N_16	src/img/picojpeg.c	60;"	d	file:
PJPG_ARITH_SHIFT_RIGHT_N_16	src/img/picojpeg.c	63;"	d	file:
PJPG_ASSERTION_ERROR	src/img/include/picojpeg.h	/^   PJPG_ASSERTION_ERROR,$/;"	e	enum:__anon30
PJPG_BAD_DHT_COUNTS	src/img/include/picojpeg.h	/^   PJPG_BAD_DHT_COUNTS,$/;"	e	enum:__anon30
PJPG_BAD_DHT_INDEX	src/img/include/picojpeg.h	/^   PJPG_BAD_DHT_INDEX,$/;"	e	enum:__anon30
PJPG_BAD_DHT_MARKER	src/img/include/picojpeg.h	/^   PJPG_BAD_DHT_MARKER,$/;"	e	enum:__anon30
PJPG_BAD_DQT_LENGTH	src/img/include/picojpeg.h	/^   PJPG_BAD_DQT_LENGTH,$/;"	e	enum:__anon30
PJPG_BAD_DQT_MARKER	src/img/include/picojpeg.h	/^   PJPG_BAD_DQT_MARKER,$/;"	e	enum:__anon30
PJPG_BAD_DQT_TABLE	src/img/include/picojpeg.h	/^   PJPG_BAD_DQT_TABLE,$/;"	e	enum:__anon30
PJPG_BAD_DRI_LENGTH	src/img/include/picojpeg.h	/^   PJPG_BAD_DRI_LENGTH,$/;"	e	enum:__anon30
PJPG_BAD_HEIGHT	src/img/include/picojpeg.h	/^   PJPG_BAD_HEIGHT,$/;"	e	enum:__anon30
PJPG_BAD_PRECISION	src/img/include/picojpeg.h	/^   PJPG_BAD_PRECISION,$/;"	e	enum:__anon30
PJPG_BAD_RESTART_MARKER	src/img/include/picojpeg.h	/^   PJPG_BAD_RESTART_MARKER,$/;"	e	enum:__anon30
PJPG_BAD_SOF_LENGTH	src/img/include/picojpeg.h	/^   PJPG_BAD_SOF_LENGTH,$/;"	e	enum:__anon30
PJPG_BAD_SOS_COMP_ID	src/img/include/picojpeg.h	/^   PJPG_BAD_SOS_COMP_ID,$/;"	e	enum:__anon30
PJPG_BAD_SOS_LENGTH	src/img/include/picojpeg.h	/^   PJPG_BAD_SOS_LENGTH,$/;"	e	enum:__anon30
PJPG_BAD_SOS_SPECTRAL	src/img/include/picojpeg.h	/^   PJPG_BAD_SOS_SPECTRAL,$/;"	e	enum:__anon30
PJPG_BAD_SOS_SUCCESSIVE	src/img/include/picojpeg.h	/^   PJPG_BAD_SOS_SUCCESSIVE,$/;"	e	enum:__anon30
PJPG_BAD_VARIABLE_MARKER	src/img/include/picojpeg.h	/^   PJPG_BAD_VARIABLE_MARKER,$/;"	e	enum:__anon30
PJPG_BAD_WIDTH	src/img/include/picojpeg.h	/^   PJPG_BAD_WIDTH,$/;"	e	enum:__anon30
PJPG_DCT_SCALE	src/img/picojpeg.c	1208;"	d	file:
PJPG_DCT_SCALE_BITS	src/img/picojpeg.c	1206;"	d	file:
PJPG_DECODE_ERROR	src/img/include/picojpeg.h	/^   PJPG_DECODE_ERROR,$/;"	e	enum:__anon30
PJPG_DESCALE	src/img/picojpeg.c	1210;"	d	file:
PJPG_GRAYSCALE	src/img/include/picojpeg.h	/^   PJPG_GRAYSCALE,$/;"	e	enum:__anon31
PJPG_INLINE	src/img/picojpeg.c	15;"	d	file:
PJPG_MAXCOMPSINSCAN	src/img/picojpeg.c	71;"	d	file:
PJPG_MAX_HEIGHT	src/img/picojpeg.c	70;"	d	file:
PJPG_MAX_IN_BUF_SIZE	src/img/picojpeg.c	182;"	d	file:
PJPG_MAX_WIDTH	src/img/picojpeg.c	69;"	d	file:
PJPG_NOTENOUGHMEM	src/img/include/picojpeg.h	/^   PJPG_NOTENOUGHMEM,$/;"	e	enum:__anon30
PJPG_NOT_JPEG	src/img/include/picojpeg.h	/^   PJPG_NOT_JPEG,$/;"	e	enum:__anon30
PJPG_NOT_SINGLE_SCAN	src/img/include/picojpeg.h	/^   PJPG_NOT_SINGLE_SCAN,$/;"	e	enum:__anon30
PJPG_NO_ARITHMITIC_SUPPORT	src/img/include/picojpeg.h	/^   PJPG_NO_ARITHMITIC_SUPPORT,$/;"	e	enum:__anon30
PJPG_NO_MORE_BLOCKS	src/img/include/picojpeg.h	/^   PJPG_NO_MORE_BLOCKS = 1,$/;"	e	enum:__anon30
PJPG_RIGHT_SHIFT_IS_ALWAYS_UNSIGNED	src/img/picojpeg.c	12;"	d	file:
PJPG_STREAM_READ_ERROR	src/img/include/picojpeg.h	/^   PJPG_STREAM_READ_ERROR,$/;"	e	enum:__anon30
PJPG_TOO_MANY_BLOCKS	src/img/include/picojpeg.h	/^   PJPG_TOO_MANY_BLOCKS,$/;"	e	enum:__anon30
PJPG_TOO_MANY_COMPONENTS	src/img/include/picojpeg.h	/^   PJPG_TOO_MANY_COMPONENTS,$/;"	e	enum:__anon30
PJPG_UNDEFINED_HUFF_TABLE	src/img/include/picojpeg.h	/^   PJPG_UNDEFINED_HUFF_TABLE,$/;"	e	enum:__anon30
PJPG_UNDEFINED_QUANT_TABLE	src/img/include/picojpeg.h	/^   PJPG_UNDEFINED_QUANT_TABLE,$/;"	e	enum:__anon30
PJPG_UNEXPECTED_MARKER	src/img/include/picojpeg.h	/^   PJPG_UNEXPECTED_MARKER,$/;"	e	enum:__anon30
PJPG_UNSUPPORTED_COLORSPACE	src/img/include/picojpeg.h	/^   PJPG_UNSUPPORTED_COLORSPACE,$/;"	e	enum:__anon30
PJPG_UNSUPPORTED_COMP_IDENT	src/img/include/picojpeg.h	/^   PJPG_UNSUPPORTED_COMP_IDENT,$/;"	e	enum:__anon30
PJPG_UNSUPPORTED_MARKER	src/img/include/picojpeg.h	/^   PJPG_UNSUPPORTED_MARKER,$/;"	e	enum:__anon30
PJPG_UNSUPPORTED_MODE	src/img/include/picojpeg.h	/^   PJPG_UNSUPPORTED_MODE,        \/\/ picojpeg doesn't support progressive JPEG's$/;"	e	enum:__anon30
PJPG_UNSUPPORTED_QUANT_TABLE	src/img/include/picojpeg.h	/^   PJPG_UNSUPPORTED_QUANT_TABLE,$/;"	e	enum:__anon30
PJPG_UNSUPPORTED_SAMP_FACTORS	src/img/include/picojpeg.h	/^   PJPG_UNSUPPORTED_SAMP_FACTORS,$/;"	e	enum:__anon30
PJPG_WFIX	src/img/picojpeg.c	1212;"	d	file:
PJPG_WINOGRAD_QUANT_SCALE_BITS	src/img/picojpeg.c	1214;"	d	file:
PJPG_W_EXTRA_BYTES_BEFORE_MARKER	src/img/include/picojpeg.h	/^   PJPG_W_EXTRA_BYTES_BEFORE_MARKER,$/;"	e	enum:__anon30
PJPG_YH1V1	src/img/include/picojpeg.h	/^   PJPG_YH1V1,$/;"	e	enum:__anon31
PJPG_YH1V2	src/img/include/picojpeg.h	/^   PJPG_YH1V2,$/;"	e	enum:__anon31
PJPG_YH2V1	src/img/include/picojpeg.h	/^   PJPG_YH2V1,$/;"	e	enum:__anon31
PJPG_YH2V2	src/img/include/picojpeg.h	/^   PJPG_YH2V2$/;"	e	enum:__anon31
PRINT_FIXED	src/img/zbar.c	1844;"	d	file:
PRINT_FIXED	zbar/img_scanner.c	357;"	d	file:
PRIx32	zbar/config.h	33;"	d
PUSH_CHAR	src/img/zbar.c	4700;"	d	file:
PUSH_CHAR4	src/img/zbar.c	4703;"	d	file:
PYBIND11_MODULE	pybind_test/image.cpp	/^PYBIND11_MODULE(example, m) {$/;"	f
PY_ASSERT_FALSE_MSG	src/py/include/py_assert.h	29;"	d
PY_ASSERT_STR	src/py/include/py_assert.h	50;"	d
PY_ASSERT_TRUE	src/py/include/py_assert.h	12;"	d
PY_ASSERT_TRUE_MSG	src/py/include/py_assert.h	21;"	d
PY_ASSERT_TYPE	src/py/include/py_assert.h	37;"	d
PY_LCD_CHECK_CONFIG	src/py/py_lcd.c	107;"	d	file:
PY_SSIZE_T_CLEAN	test/python_module/image.c	1;"	d	file:
PY_SSIZE_T_CLEAN	test/python_module/image_new.c	1;"	d	file:
PY_SSIZE_T_CLEAN	test/python_module/test.c	2;"	d	file:
PY_SSIZE_T_CLEAN	test/python_module/test/keywdarg.c	1;"	d	file:
P_CMD	src/include/ov2640_regs.h	37;"	d
P_STATUS	src/include/ov2640_regs.h	38;"	d
PatternShapeSpecial1	src/img/dmtx.c	/^PatternShapeSpecial1(unsigned char *modules, int mappingRows, int mappingCols, unsigned char *codeword, int moduleOnColor)$/;"	f	file:
PatternShapeSpecial2	src/img/dmtx.c	/^PatternShapeSpecial2(unsigned char *modules, int mappingRows, int mappingCols, unsigned char *codeword, int moduleOnColor)$/;"	f	file:
PatternShapeSpecial3	src/img/dmtx.c	/^PatternShapeSpecial3(unsigned char *modules, int mappingRows, int mappingCols, unsigned char *codeword, int moduleOnColor)$/;"	f	file:
PatternShapeSpecial4	src/img/dmtx.c	/^PatternShapeSpecial4(unsigned char *modules, int mappingRows, int mappingCols, unsigned char *codeword, int moduleOnColor)$/;"	f	file:
PatternShapeStandard	src/img/dmtx.c	/^PatternShapeStandard(unsigned char *modules, int mappingRows, int mappingCols, int row, int col, unsigned char *codeword, int moduleOnColor)$/;"	f	file:
PlaceModule	src/img/dmtx.c	/^PlaceModule(unsigned char *modules, int mappingRows, int mappingCols, int row, int col, unsigned char *codeword, int mask, int moduleOnColor)$/;"	f	file:
PopGridLocation	src/img/dmtx.c	/^PopGridLocation(DmtxScanGrid *grid, DmtxPixelLoc *locPtr)$/;"	f	file:
PopulateArrayFromMatrix	src/img/dmtx.c	/^PopulateArrayFromMatrix(DmtxDecode *dec, DmtxRegion *reg, DmtxMessage *msg)$/;"	f	file:
PushOutputC40TextWord	src/img/dmtx.c	/^PushOutputC40TextWord(DmtxMessage *msg, C40TextState *state, int value)$/;"	f	file:
PushOutputMacroHeader	src/img/dmtx.c	/^PushOutputMacroHeader(DmtxMessage *msg, int macroType)$/;"	f	file:
PushOutputMacroTrailer	src/img/dmtx.c	/^PushOutputMacroTrailer(DmtxMessage *msg)$/;"	f	file:
PushOutputWord	src/img/dmtx.c	/^PushOutputWord(DmtxMessage *msg, int value)$/;"	f	file:
PyInit_image	test/python_module/image.c	/^PyInit_image(void)$/;"	f
PyInit_image_new	test/python_module/image_new.c	/^PyInit_image_new(void)$/;"	f
PyInit_keywdarg	test/python_module/test/keywdarg.c	/^PyInit_keywdarg(void)$/;"	f
PyInit_test	test/python_module/test.c	/^PyMODINIT_FUNC PyInit_test(void) {$/;"	f
QR_ALIGNMENT_SPACING	zbar/qrdec.c	/^static const unsigned char QR_ALIGNMENT_SPACING[34]={$/;"	v	file:
QR_ALIGN_SUBPREC	zbar/qrdec.c	58;"	d	file:
QR_ALNUM_TABLE	zbar/qrdec.c	/^static const unsigned char QR_ALNUM_TABLE[45]={$/;"	v	file:
QR_CLAMP255	zbar/util.h	20;"	d
QR_CLAMPI	zbar/util.h	19;"	d
QR_CLZ	zbar/util.c	93;"	d	file:
QR_CLZ	zbar/util.c	96;"	d	file:
QR_CLZ0	zbar/util.c	92;"	d	file:
QR_CLZ0	zbar/util.c	95;"	d	file:
QR_COPYSIGNI	zbar/util.h	16;"	d
QR_DIVROUND	zbar/util.h	18;"	d
QR_ECI_CP437	zbar/qrdec.h	/^  QR_ECI_CP437,$/;"	e	enum:qr_eci_encoding
QR_ECI_GLI0	zbar/qrdec.h	/^  QR_ECI_GLI0,$/;"	e	enum:qr_eci_encoding
QR_ECI_GLI1	zbar/qrdec.h	/^  QR_ECI_GLI1,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_1	zbar/qrdec.h	/^  QR_ECI_ISO8859_1,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_10	zbar/qrdec.h	/^  QR_ECI_ISO8859_10,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_11	zbar/qrdec.h	/^  QR_ECI_ISO8859_11,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_13	zbar/qrdec.h	/^  QR_ECI_ISO8859_13=QR_ECI_ISO8859_11+2,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_14	zbar/qrdec.h	/^  QR_ECI_ISO8859_14,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_15	zbar/qrdec.h	/^  QR_ECI_ISO8859_15,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_16	zbar/qrdec.h	/^  QR_ECI_ISO8859_16,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_2	zbar/qrdec.h	/^  QR_ECI_ISO8859_2,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_3	zbar/qrdec.h	/^  QR_ECI_ISO8859_3,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_4	zbar/qrdec.h	/^  QR_ECI_ISO8859_4,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_5	zbar/qrdec.h	/^  QR_ECI_ISO8859_5,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_6	zbar/qrdec.h	/^  QR_ECI_ISO8859_6,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_7	zbar/qrdec.h	/^  QR_ECI_ISO8859_7,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_8	zbar/qrdec.h	/^  QR_ECI_ISO8859_8,$/;"	e	enum:qr_eci_encoding
QR_ECI_ISO8859_9	zbar/qrdec.h	/^  QR_ECI_ISO8859_9,$/;"	e	enum:qr_eci_encoding
QR_ECI_SJIS	zbar/qrdec.h	/^  QR_ECI_SJIS=20$/;"	e	enum:qr_eci_encoding
QR_EXTMUL	zbar/util.h	43;"	d
QR_FINDER_SUBPREC	zbar/qrcode.h	20;"	d
QR_FIXED	src/img/zbar.c	1843;"	d	file:
QR_FIXED	zbar/img_scanner.c	356;"	d	file:
QR_FIXMUL	zbar/util.h	40;"	d
QR_FLIPSIGNI	zbar/util.h	15;"	d
QR_HOM_BITS	zbar/qrdec.c	49;"	d	file:
QR_ILOG	zbar/util.h	36;"	d
QR_ILOG0	zbar/util.h	30;"	d
QR_ILOG1	zbar/util.h	31;"	d
QR_ILOG2	zbar/util.h	32;"	d
QR_ILOG3	zbar/util.h	33;"	d
QR_ILOG4	zbar/util.h	34;"	d
QR_INT_BITS	zbar/qrdec.c	44;"	d	file:
QR_INT_LOGBITS	zbar/qrdec.c	45;"	d	file:
QR_LARGE_VERSION_SLACK	zbar/qrdec.c	940;"	d	file:
QR_M0	zbar/rs.h	28;"	d
QR_MAXI	zbar/util.h	10;"	d
QR_MINI	zbar/util.h	11;"	d
QR_MODE_ALNUM	zbar/qrdec.h	/^  QR_MODE_ALNUM,$/;"	e	enum:qr_mode
QR_MODE_BYTE	zbar/qrdec.h	/^  QR_MODE_BYTE,$/;"	e	enum:qr_mode
QR_MODE_ECI	zbar/qrdec.h	/^  QR_MODE_ECI=7,$/;"	e	enum:qr_mode
QR_MODE_FNC1_1ST	zbar/qrdec.h	/^  QR_MODE_FNC1_1ST,$/;"	e	enum:qr_mode
QR_MODE_FNC1_2ND	zbar/qrdec.h	/^  QR_MODE_FNC1_2ND$/;"	e	enum:qr_mode
QR_MODE_HAS_DATA	zbar/qrdec.h	42;"	d
QR_MODE_KANJI	zbar/qrdec.h	/^  QR_MODE_KANJI,$/;"	e	enum:qr_mode
QR_MODE_NUM	zbar/qrdec.h	/^  QR_MODE_NUM=1,$/;"	e	enum:qr_mode
QR_MODE_STRUCT	zbar/qrdec.h	/^  QR_MODE_STRUCT,$/;"	e	enum:qr_mode
QR_PPOLY	zbar/rs.h	25;"	d
QR_RS_NBLOCKS	zbar/qrdec.c	/^static const unsigned char QR_RS_NBLOCKS[40][4]={$/;"	v	file:
QR_RS_NPAR_OFFS	zbar/qrdec.c	/^static const unsigned char QR_RS_NPAR_OFFS[40]={$/;"	v	file:
QR_RS_NPAR_VALS	zbar/qrdec.c	/^static const unsigned char QR_RS_NPAR_VALS[71]={$/;"	v	file:
QR_SIGNI	zbar/util.h	12;"	d
QR_SIGNMASK	zbar/util.h	13;"	d
QR_SMALL_VERSION_SLACK	zbar/qrdec.c	937;"	d	file:
QR_SORT2I	zbar/util.h	22;"	d
QS	src/include/ov2640_regs.h	14;"	d
QUIRC_DATA_TYPE_ALPHA	src/img/qrcode.c	95;"	d	file:
QUIRC_DATA_TYPE_BYTE	src/img/qrcode.c	96;"	d	file:
QUIRC_DATA_TYPE_KANJI	src/img/qrcode.c	97;"	d	file:
QUIRC_DATA_TYPE_NUMERIC	src/img/qrcode.c	94;"	d	file:
QUIRC_ECC_LEVEL_H	src/img/qrcode.c	90;"	d	file:
QUIRC_ECC_LEVEL_L	src/img/qrcode.c	89;"	d	file:
QUIRC_ECC_LEVEL_M	src/img/qrcode.c	88;"	d	file:
QUIRC_ECC_LEVEL_Q	src/img/qrcode.c	91;"	d	file:
QUIRC_ECI_IBM437	src/img/qrcode.c	101;"	d	file:
QUIRC_ECI_ISO_8859_1	src/img/qrcode.c	100;"	d	file:
QUIRC_ECI_ISO_8859_13	src/img/qrcode.c	111;"	d	file:
QUIRC_ECI_ISO_8859_15	src/img/qrcode.c	112;"	d	file:
QUIRC_ECI_ISO_8859_2	src/img/qrcode.c	102;"	d	file:
QUIRC_ECI_ISO_8859_3	src/img/qrcode.c	103;"	d	file:
QUIRC_ECI_ISO_8859_4	src/img/qrcode.c	104;"	d	file:
QUIRC_ECI_ISO_8859_5	src/img/qrcode.c	105;"	d	file:
QUIRC_ECI_ISO_8859_6	src/img/qrcode.c	106;"	d	file:
QUIRC_ECI_ISO_8859_7	src/img/qrcode.c	107;"	d	file:
QUIRC_ECI_ISO_8859_8	src/img/qrcode.c	108;"	d	file:
QUIRC_ECI_ISO_8859_9	src/img/qrcode.c	109;"	d	file:
QUIRC_ECI_SHIFT_JIS	src/img/qrcode.c	113;"	d	file:
QUIRC_ECI_UTF_8	src/img/qrcode.c	114;"	d	file:
QUIRC_ECI_WINDOWS_874	src/img/qrcode.c	110;"	d	file:
QUIRC_ERROR_DATA_ECC	src/img/qrcode.c	/^    QUIRC_ERROR_DATA_ECC,$/;"	e	enum:__anon39	file:
QUIRC_ERROR_DATA_OVERFLOW	src/img/qrcode.c	/^    QUIRC_ERROR_DATA_OVERFLOW,$/;"	e	enum:__anon39	file:
QUIRC_ERROR_DATA_UNDERFLOW	src/img/qrcode.c	/^    QUIRC_ERROR_DATA_UNDERFLOW$/;"	e	enum:__anon39	file:
QUIRC_ERROR_FORMAT_ECC	src/img/qrcode.c	/^    QUIRC_ERROR_FORMAT_ECC,$/;"	e	enum:__anon39	file:
QUIRC_ERROR_INVALID_GRID_SIZE	src/img/qrcode.c	/^    QUIRC_ERROR_INVALID_GRID_SIZE,$/;"	e	enum:__anon39	file:
QUIRC_ERROR_INVALID_VERSION	src/img/qrcode.c	/^    QUIRC_ERROR_INVALID_VERSION,$/;"	e	enum:__anon39	file:
QUIRC_ERROR_UNKNOWN_DATA_TYPE	src/img/qrcode.c	/^    QUIRC_ERROR_UNKNOWN_DATA_TYPE,$/;"	e	enum:__anon39	file:
QUIRC_MAX_ALIGNMENT	src/img/qrcode.c	269;"	d	file:
QUIRC_MAX_BITMAP	src/img/qrcode.c	84;"	d	file:
QUIRC_MAX_BITMAP	test/mf_qr.c	11;"	d	file:
QUIRC_MAX_CAPSTONES	src/img/qrcode.c	200;"	d	file:
QUIRC_MAX_GRIDS	src/img/qrcode.c	201;"	d	file:
QUIRC_MAX_PAYLOAD	src/img/qrcode.c	85;"	d	file:
QUIRC_MAX_PAYLOAD	test/mf_qr.c	12;"	d	file:
QUIRC_MAX_REGIONS	src/img/qrcode.c	197;"	d	file:
QUIRC_MAX_VERSION	src/img/qrcode.c	268;"	d	file:
QUIRC_PERSPECTIVE_PARAMS	src/img/qrcode.c	203;"	d	file:
QUIRC_PIXEL_BLACK	src/img/qrcode.c	193;"	d	file:
QUIRC_PIXEL_REGION	src/img/qrcode.c	194;"	d	file:
QUIRC_PIXEL_WHITE	src/img/qrcode.c	192;"	d	file:
QUIRC_SUCCESS	src/img/qrcode.c	/^    QUIRC_SUCCESS = 0,$/;"	e	enum:__anon39	file:
RATE_0_OFFSET	src/img/mjpeg.c	16;"	d	file:
RATE_1_OFFSET	src/img/mjpeg.c	18;"	d	file:
RECYCLE_BUCKETS	src/img/zbar.c	1561;"	d	file:
RECYCLE_BUCKETS	zbar/img_scanner.c	85;"	d	file:
REG04	src/include/ov2640_regs.h	150;"	d
REG04_DEFAULT	src/include/ov2640_regs.h	151;"	d
REG04_HFLIP_IMG	src/include/ov2640_regs.h	152;"	d
REG04_HREF_EN	src/include/ov2640_regs.h	155;"	d
REG04_SET	src/include/ov2640_regs.h	156;"	d
REG04_VFLIP_IMG	src/include/ov2640_regs.h	153;"	d
REG04_VREF_EN	src/include/ov2640_regs.h	154;"	d
REG08	src/include/ov2640_regs.h	158;"	d
REG2A	src/include/ov2640_regs.h	126;"	d
REG32	src/include/ov2640_regs.h	206;"	d
REG32_CIF	src/include/ov2640_regs.h	209;"	d
REG32_SVGA	src/include/ov2640_regs.h	208;"	d
REG32_UXGA	src/include/ov2640_regs.h	207;"	d
REG45	src/include/ov2640_regs.h	134;"	d
REG5D	src/include/ov2640_regs.h	143;"	d
REG5E	src/include/ov2640_regs.h	144;"	d
REG5F	src/include/ov2640_regs.h	145;"	d
REG60	src/include/ov2640_regs.h	146;"	d
REG_DLY	src/ov3660.c	28;"	d	file:
REG_PID	src/include/ov2640_regs.h	108;"	d
REG_VER	src/include/ov2640_regs.h	109;"	d
RELATIVE_ERROR_FACTOR	src/img/lsd.c	496;"	d	file:
RESET	src/include/ov2640_regs.h	81;"	d
RESET_CIF	src/include/ov2640_regs.h	87;"	d
RESET_DVP	src/include/ov2640_regs.h	85;"	d
RESET_IPU	src/include/ov2640_regs.h	86;"	d
RESET_JPEG	src/include/ov2640_regs.h	84;"	d
RESET_MICROC	src/include/ov2640_regs.h	82;"	d
RESET_SCCB	src/include/ov2640_regs.h	83;"	d
RGB565ToRGB888	pybind_test/conversion.c	/^unsigned int RGB565ToRGB888(unsigned short n565Color)$/;"	f
RGB565ToRGB888	src/img/picojpeg_util.c	/^unsigned int RGB565ToRGB888(unsigned short n565Color)$/;"	f
RGB565ToRGB888	test/conversion.c	/^unsigned int RGB565ToRGB888(unsigned short n565Color)$/;"	f
RGB565_BLUE	pybind_test/conversion.c	102;"	d	file:
RGB565_BLUE	src/img/picojpeg_util.c	35;"	d	file:
RGB565_BLUE	test/conversion.c	102;"	d	file:
RGB565_GREEN	pybind_test/conversion.c	101;"	d	file:
RGB565_GREEN	src/img/picojpeg_util.c	34;"	d	file:
RGB565_GREEN	test/conversion.c	101;"	d	file:
RGB565_RED	pybind_test/conversion.c	100;"	d	file:
RGB565_RED	src/img/picojpeg_util.c	33;"	d	file:
RGB565_RED	test/conversion.c	100;"	d	file:
RGB888ToRGB565	pybind_test/conversion.c	/^unsigned short RGB888ToRGB565(unsigned int n888Color)$/;"	f
RGB888ToRGB565	src/img/picojpeg_util.c	/^unsigned short RGB888ToRGB565(unsigned int n888Color)$/;"	f
RGB888ToRGB565	test/conversion.c	/^unsigned short RGB888ToRGB565(unsigned int n888Color)$/;"	f
RGB888_BLUE	pybind_test/conversion.c	98;"	d	file:
RGB888_BLUE	src/img/picojpeg_util.c	31;"	d	file:
RGB888_BLUE	test/conversion.c	98;"	d	file:
RGB888_GREEN	pybind_test/conversion.c	97;"	d	file:
RGB888_GREEN	src/img/picojpeg_util.c	30;"	d	file:
RGB888_GREEN	test/conversion.c	97;"	d	file:
RGB888_RED	pybind_test/conversion.c	96;"	d	file:
RGB888_RED	src/img/picojpeg_util.c	29;"	d	file:
RGB888_RED	test/conversion.c	96;"	d	file:
RGB_OFFSET	zbar/image.h	47;"	d
RGB_SIZE	zbar/image.h	46;"	d
ROUND	src/img/zbar.c	8433;"	d	file:
ROUND	zbar/scanner.c	41;"	d	file:
RST0	src/img/picojpeg.c	/^   RST0    = 0xD0$/;"	e	enum:__anon37	file:
R_BYPASS	src/include/ov2640_regs.h	67;"	d
R_BYPASS_DSP_BYPAS	src/include/ov2640_regs.h	69;"	d
R_BYPASS_DSP_EN	src/include/ov2640_regs.h	68;"	d
R_DVP_SP	src/include/ov2640_regs.h	64;"	d
R_DVP_SP_AUTO_MODE	src/include/ov2640_regs.h	65;"	d
ReadModuleColor	src/img/dmtx.c	/^ReadModuleColor(DmtxDecode *dec, DmtxRegion *reg, int symbolRow, int symbolCol,$/;"	f	file:
Register	src/mt9d111.c	/^struct Register$/;"	s	file:
RightAngleTrueness	src/img/dmtx.c	/^RightAngleTrueness(DmtxVector2 c0, DmtxVector2 c1, DmtxVector2 c2, double angle)$/;"	f	file:
RsComputeSyndromes	src/img/dmtx.c	/^RsComputeSyndromes(DmtxByteList *syn, const DmtxByteList *rec, int blockErrorWords)$/;"	f	file:
RsDecode	src/img/dmtx.c	/^RsDecode(unsigned char *code, int sizeIdx, int fix)$/;"	f	file:
RsFindErrorLocations	src/img/dmtx.c	/^RsFindErrorLocations(DmtxByteList *loc, const DmtxByteList *elp)$/;"	f	file:
RsFindErrorLocatorPoly	src/img/dmtx.c	/^RsFindErrorLocatorPoly(DmtxByteList *elpOut, const DmtxByteList *syn, int errorWordCount, int maxCorrectable)$/;"	f	file:
RsRepairErrors	src/img/dmtx.c	/^RsRepairErrors(DmtxByteList *rec, const DmtxByteList *loc, const DmtxByteList *elp, const DmtxByteList *syn)$/;"	f	file:
S	src/img/apriltag.c	/^    matd_t *S;$/;"	m	struct:__anon6	file:
SCCB_AF	src/include/omv_boardconfig.h	124;"	d
SCCB_CLK_DISABLE	src/include/omv_boardconfig.h	126;"	d
SCCB_CLK_ENABLE	src/include/omv_boardconfig.h	125;"	d
SCCB_I2C	src/include/omv_boardconfig.h	123;"	d
SCCB_PORT	src/include/omv_boardconfig.h	127;"	d
SCCB_SCL_PIN	src/include/omv_boardconfig.h	128;"	d
SCCB_SDA_PIN	src/include/omv_boardconfig.h	129;"	d
SCH_ALNUM	src/img/zbar.c	/^enum { SCH_NUM, SCH_ALNUM, SCH_ISO646 };$/;"	e	enum:__anon44	file:
SCH_ISO646	src/img/zbar.c	/^enum { SCH_NUM, SCH_ALNUM, SCH_ISO646 };$/;"	e	enum:__anon44	file:
SCH_NUM	src/img/zbar.c	/^enum { SCH_NUM, SCH_ALNUM, SCH_ISO646 };$/;"	e	enum:__anon44	file:
SDE_NEGATIVE	src/include/sensor.h	/^    SDE_NEGATIVE,$/;"	e	enum:__anon52
SDE_NORMAL	src/include/sensor.h	/^    SDE_NORMAL,$/;"	e	enum:__anon52
SEARCH_DS	src/img/include/imlib.h	/^    SEARCH_DS,  \/\/ Diamond search$/;"	e	enum:template_match
SEARCH_EX	src/img/include/imlib.h	/^    SEARCH_EX,  \/\/ Exhaustive search$/;"	e	enum:template_match
SENSOR_BUFFER_NUM	src/include/framebuffer.h	15;"	d
SENSOR_CHECK_CONFIG	src/sensor.c	118;"	d	file:
SENSOR_HW_FLAGS_CLR	src/include/sensor.h	112;"	d
SENSOR_HW_FLAGS_FSYNC	src/include/sensor.h	108;"	d
SENSOR_HW_FLAGS_GET	src/include/sensor.h	110;"	d
SENSOR_HW_FLAGS_HSYNC	src/include/sensor.h	106;"	d
SENSOR_HW_FLAGS_JPEGE	src/include/sensor.h	109;"	d
SENSOR_HW_FLAGS_PIXCK	src/include/sensor.h	107;"	d
SENSOR_HW_FLAGS_SET	src/include/sensor.h	111;"	d
SENSOR_HW_FLAGS_VSYNC	src/include/sensor.h	105;"	d
SEV_ERROR	zbar/error.h	/^    SEV_ERROR   = -1,           \/* might be able to recover and continue *\/$/;"	e	enum:errsev_e
SEV_FATAL	zbar/error.h	/^    SEV_FATAL   = -2,           \/* application must terminate *\/$/;"	e	enum:errsev_e
SEV_MAX	zbar/error.c	35;"	d	file:
SEV_NOTE	zbar/error.h	/^    SEV_NOTE    =  2,           \/* fyi *\/$/;"	e	enum:errsev_e
SEV_OK	zbar/error.h	/^    SEV_OK      =  0,$/;"	e	enum:errsev_e
SEV_WARNING	zbar/error.h	/^    SEV_WARNING =  1,           \/* unexpected condition *\/$/;"	e	enum:errsev_e
SHIFT	src/img/zbar.c	/^    SHIFT       = 0x62,$/;"	e	enum:code128_char_e	file:
SIZEL	src/include/ov2640_regs.h	27;"	d
SIZE_OFFSET	src/img/mjpeg.c	13;"	d	file:
SMLAD	src/img/imlib.c	/^static uint32_t SMLAD(uint32_t x,uint32_t y,uint32_t sum)$/;"	f	file:
SS_CTRL	src/include/ov2640_regs.h	33;"	d
SS_ID	src/include/ov2640_regs.h	32;"	d
START_A	src/img/zbar.c	/^    START_A     = 0x67,$/;"	e	enum:code128_char_e	file:
START_B	src/img/zbar.c	/^    START_B     = 0x68,$/;"	e	enum:code128_char_e	file:
START_C	src/img/zbar.c	/^    START_C     = 0x69,$/;"	e	enum:code128_char_e	file:
STAT	src/img/zbar.c	1555;"	d	file:
STAT	src/img/zbar.c	1557;"	d	file:
STAT	zbar/img_scanner.c	79;"	d	file:
STAT	zbar/img_scanner.c	81;"	d	file:
STATE_ADDON	src/img/zbar.c	2424;"	d	file:
STATE_IDX	src/img/zbar.c	2425;"	d	file:
STATE_REV	src/img/zbar.c	2423;"	d	file:
STOP_FWD	src/img/zbar.c	/^    STOP_FWD    = 0x6a,$/;"	e	enum:code128_char_e	file:
STOP_REV	src/img/zbar.c	/^    STOP_REV    = 0x6b,$/;"	e	enum:code128_char_e	file:
SVGA_HSIZE	src/ov2640.c	18;"	d	file:
SVGA_HSIZE	src/ov3660.c	23;"	d	file:
SVGA_VSIZE	src/ov2640.c	19;"	d	file:
SVGA_VSIZE	src/ov3660.c	24;"	d	file:
SWAPINIT	src/img/qsort.c	46;"	d	file:
SWAP_PTRS	src/img/integral_mw.c	54;"	d	file:
SetDerivedFields	src/img/dmtx.c	/^SetDerivedFields(DmtxScanGrid *grid)$/;"	f	file:
StringIO	src/img/include/font.h	/^    StringIO,$/;"	e	enum:FontSource
TABLE_SIZE	src/img/lab_tab.c	2112;"	d	file:
TABLE_SIZE	src/img/yuv_tab.c	2088;"	d	file:
TAG16H5	src/img/include/imlib.h	/^    TAG16H5 = 1,$/;"	e	enum:apriltag_families
TAG25H7	src/img/include/imlib.h	/^    TAG25H7 = 2,$/;"	e	enum:apriltag_families
TAG25H9	src/img/include/imlib.h	/^    TAG25H9 = 4,$/;"	e	enum:apriltag_families
TAG36H10	src/img/include/imlib.h	/^    TAG36H10 = 8,$/;"	e	enum:apriltag_families
TAG36H11	src/img/include/imlib.h	/^    TAG36H11 = 16,$/;"	e	enum:apriltag_families
TEST	src/include/ov2640_regs.h	21;"	d
TEST_CFG	src/img/zbar.c	1552;"	d	file:
TEST_CFG	src/img/zbar.c	2384;"	d	file:
TEST_CFG	src/img/zbar.c	2922;"	d	file:
TEST_CFG	zbar/decoder.h	75;"	d
TEST_CFG	zbar/img_scanner.c	76;"	d	file:
THRESHOLD	src/img/selective_search.c	17;"	d	file:
THRESHOLD_S_DEN	src/img/qrcode.c	945;"	d	file:
THRESHOLD_S_MIN	src/img/qrcode.c	944;"	d	file:
THRESHOLD_T	src/img/qrcode.c	946;"	d	file:
THRESH_INIT	src/img/zbar.c	8443;"	d	file:
THRESH_INIT	zbar/scanner.c	51;"	d	file:
TIME_JPEG	src/img/jpeg.c	24;"	d	file:
TRUE	src/img/lsd.c	447;"	d	file:
TYPE	src/img/apriltag.c	1637;"	d	file:
TallyModuleJumps	src/img/dmtx.c	/^TallyModuleJumps(DmtxDecode *dec, DmtxRegion *reg, int tally[][24], int xOrigin, int yOrigin, int mapWidth, int mapHeight, DmtxDirection dir)$/;"	f	file:
TrailBlazeContinuous	src/img/dmtx.c	/^TrailBlazeContinuous(DmtxDecode *dec, DmtxRegion *reg, DmtxPointFlow flowBegin, int maxDiagonal)$/;"	f	file:
TrailBlazeGapped	src/img/dmtx.c	/^TrailBlazeGapped(DmtxDecode *dec, DmtxRegion *reg, DmtxBresLine line, int streamDir)$/;"	f	file:
TrailClear	src/img/dmtx.c	/^TrailClear(DmtxDecode *dec, DmtxRegion *reg, int clearMask)$/;"	f	file:
U	src/img/apriltag.c	/^    matd_t *U;$/;"	m	struct:__anon6	file:
UINT16_T_BITS	src/img/include/imlib.h	72;"	d
UINT16_T_MASK	src/img/include/imlib.h	73;"	d
UINT16_T_SHIFT	src/img/include/imlib.h	74;"	d
UINT32_T_BITS	src/img/include/imlib.h	76;"	d
UINT32_T_MASK	src/img/include/imlib.h	77;"	d
UINT32_T_SHIFT	src/img/include/imlib.h	78;"	d
UINT64_T_BITS	src/img/include/imlib.h	80;"	d
UINT64_T_MASK	src/img/include/imlib.h	81;"	d
UINT64_T_SHIFT	src/img/include/imlib.h	82;"	d
UINT8_T_BITS	src/img/include/imlib.h	68;"	d
UINT8_T_MASK	src/img/include/imlib.h	69;"	d
UINT8_T_SHIFT	src/img/include/imlib.h	70;"	d
UMM_BEST_FIT	src/umm_malloc.c	77;"	d	file:
UMM_BLOCK	src/umm_malloc.c	127;"	d	file:
UMM_BLOCKNO_MASK	src/umm_malloc.c	116;"	d	file:
UMM_CRITICAL_ENTRY	src/umm_malloc.c	90;"	d	file:
UMM_CRITICAL_EXIT	src/umm_malloc.c	91;"	d	file:
UMM_DATA	src/umm_malloc.c	133;"	d	file:
UMM_FIRST_FIT	src/umm_malloc.c	78;"	d	file:
UMM_FREELIST_MASK	src/umm_malloc.c	115;"	d	file:
UMM_H_ATTPACKPRE	src/umm_malloc.c	74;"	d	file:
UMM_H_ATTPACKSUF	src/umm_malloc.c	75;"	d	file:
UMM_NBLOCK	src/umm_malloc.c	129;"	d	file:
UMM_NFREE	src/umm_malloc.c	131;"	d	file:
UMM_NUMBLOCKS	src/umm_malloc.c	123;"	d	file:
UMM_PBLOCK	src/umm_malloc.c	130;"	d	file:
UMM_PFREE	src/umm_malloc.c	132;"	d	file:
USBDBG_ARCH_STR	src/include/ide_dbg.h	/^    USBDBG_ARCH_STR         =0x83,$/;"	e	enum:usbdbg_cmd
USBDBG_ATTR_READ	src/include/ide_dbg.h	/^    USBDBG_ATTR_READ        =0x8A,$/;"	e	enum:usbdbg_cmd
USBDBG_ATTR_WRITE	src/include/ide_dbg.h	/^    USBDBG_ATTR_WRITE       =0x0B,$/;"	e	enum:usbdbg_cmd
USBDBG_DESCRIPTOR_SAVE	src/include/ide_dbg.h	/^    USBDBG_DESCRIPTOR_SAVE  =0x09,$/;"	e	enum:usbdbg_cmd
USBDBG_FB_ENABLE	src/include/ide_dbg.h	/^    USBDBG_FB_ENABLE        =0x0D,$/;"	e	enum:usbdbg_cmd
USBDBG_FILE_SAVE	src/include/ide_dbg.h	/^    USBDBG_FILE_SAVE        =0x07,$/;"	e	enum:usbdbg_cmd
USBDBG_FILE_SAVE_STATUS	src/include/ide_dbg.h	/^    USBDBG_FILE_SAVE_STATUS =0x88,$/;"	e	enum:usbdbg_cmd
USBDBG_FRAME_DUMP	src/include/ide_dbg.h	/^    USBDBG_FRAME_DUMP       =0x82,$/;"	e	enum:usbdbg_cmd
USBDBG_FRAME_SIZE	src/include/ide_dbg.h	/^    USBDBG_FRAME_SIZE       =0x81,$/;"	e	enum:usbdbg_cmd
USBDBG_FW_VERSION	src/include/ide_dbg.h	/^    USBDBG_FW_VERSION       =0x80,$/;"	e	enum:usbdbg_cmd
USBDBG_NONE	src/include/ide_dbg.h	/^    USBDBG_NONE             =0x00,$/;"	e	enum:usbdbg_cmd
USBDBG_QUERY_STATUS	src/include/ide_dbg.h	/^    USBDBG_QUERY_STATUS     =0x8D,\/\/0xFFEEBBAA$/;"	e	enum:usbdbg_cmd
USBDBG_SCRIPT_EXEC	src/include/ide_dbg.h	/^    USBDBG_SCRIPT_EXEC      =0x05,$/;"	e	enum:usbdbg_cmd
USBDBG_SCRIPT_RUNNING	src/include/ide_dbg.h	/^    USBDBG_SCRIPT_RUNNING   =0x87,$/;"	e	enum:usbdbg_cmd
USBDBG_SCRIPT_STOP	src/include/ide_dbg.h	/^    USBDBG_SCRIPT_STOP      =0x06,$/;"	e	enum:usbdbg_cmd
USBDBG_SYS_RESET	src/include/ide_dbg.h	/^    USBDBG_SYS_RESET        =0x0C,$/;"	e	enum:usbdbg_cmd
USBDBG_TEMPLATE_SAVE	src/include/ide_dbg.h	/^    USBDBG_TEMPLATE_SAVE    =0x08,$/;"	e	enum:usbdbg_cmd
USBDBG_TX_BUF	src/include/ide_dbg.h	/^    USBDBG_TX_BUF           =0x8F$/;"	e	enum:usbdbg_cmd
USBDBG_TX_BUF_LEN	src/include/ide_dbg.h	/^    USBDBG_TX_BUF_LEN       =0x8E,$/;"	e	enum:usbdbg_cmd
USED	src/img/lsd.c	463;"	d	file:
UTF8	src/img/include/font.h	/^    UTF8,$/;"	e	enum:FontIndex
UVAC_HT	src/img/jpeg.c	/^static const uint16_t UVAC_HT[256][2] = {$/;"	v	file:
UVDC_HT	src/img/jpeg.c	/^static const uint16_t UVDC_HT[12][2] = { {0,2},{1,2},{2,2},{6,3},{14,4},{30,5},{62,6},{126,7},{254,8},{510,9},{1022,10},{2046,11}};$/;"	v	file:
UVQT	src/img/jpeg.c	/^static const uint8_t UVQT[] = {$/;"	v	file:
UVTable	src/img/jpeg.c	/^static uint8_t YTable[64], UVTable[64];$/;"	v	file:
UXGA_HSIZE	src/ov2640.c	21;"	d	file:
UXGA_HSIZE	src/ov3660.c	26;"	d	file:
UXGA_VSIZE	src/ov2640.c	22;"	d	file:
UXGA_VSIZE	src/ov3660.c	27;"	d	file:
UnRandomize255State	src/img/dmtx.c	/^UnRandomize255State(unsigned char value, int idx)$/;"	f	file:
Unicode	src/img/include/font.h	/^    Unicode,$/;"	e	enum:FontIndex
UpAlign4	pybind_test/conversion.c	9;"	d	file:
UpAlign4	test/conversion.c	9;"	d	file:
UpAlign8	pybind_test/conversion.c	10;"	d	file:
UpAlign8	test/conversion.c	10;"	d	file:
V	src/img/apriltag.c	/^    matd_t *V;$/;"	m	struct:__anon6	file:
VAR_MAX	src/img/zbar.c	4690;"	d	file:
VHYX	src/include/ov2640_regs.h	19;"	d
VSIZE	src/include/ov2640_regs.h	16;"	d
VSIZE8	src/include/ov2640_regs.h	29;"	d
VSTART	src/include/ov2640_regs.h	120;"	d
VSTOP	src/include/ov2640_regs.h	121;"	d
VV	src/include/ov2640_regs.h	203;"	d
VV_AGC_TH_SET	src/include/ov2640_regs.h	204;"	d
W	src/img/apriltag.c	/^    double W; \/\/ total weight$/;"	m	struct:line_fit_pt	file:
WINC_CS_HIGH	src/include/omv_boardconfig.h	207;"	d
WINC_CS_LOW	src/include/omv_boardconfig.h	206;"	d
WINC_CS_PIN	src/include/omv_boardconfig.h	198;"	d
WINC_CS_PORT	src/include/omv_boardconfig.h	203;"	d
WINC_EN_PIN	src/include/omv_boardconfig.h	197;"	d
WINC_EN_PORT	src/include/omv_boardconfig.h	202;"	d
WINC_IRQ_PIN	src/include/omv_boardconfig.h	200;"	d
WINC_RST_PIN	src/include/omv_boardconfig.h	199;"	d
WINC_RST_PORT	src/include/omv_boardconfig.h	204;"	d
WINC_SPI	src/include/omv_boardconfig.h	182;"	d
WINC_SPI_AF	src/include/omv_boardconfig.h	183;"	d
WINC_SPI_CLK_ENABLE	src/include/omv_boardconfig.h	187;"	d
WINC_SPI_MISO_PIN	src/include/omv_boardconfig.h	190;"	d
WINC_SPI_MISO_PORT	src/include/omv_boardconfig.h	194;"	d
WINC_SPI_MOSI_PIN	src/include/omv_boardconfig.h	191;"	d
WINC_SPI_MOSI_PORT	src/include/omv_boardconfig.h	195;"	d
WINC_SPI_PRESCALER	src/include/omv_boardconfig.h	186;"	d
WINC_SPI_SCLK_PIN	src/include/omv_boardconfig.h	189;"	d
WINC_SPI_SCLK_PORT	src/include/omv_boardconfig.h	193;"	d
WINC_SPI_TIMEOUT	src/include/omv_boardconfig.h	184;"	d
WriteDiagnosticImage	src/img/dmtx.c	/^WriteDiagnosticImage(DmtxDecode *dec, DmtxRegion *reg, char *imagePath)$/;"	f	file:
X	src/img/dmtx.c	/^   double          X;$/;"	m	struct:DmtxVector2_struct	file:
X	src/img/dmtx.c	/^   int X;$/;"	m	struct:DmtxPixelLoc_struct	file:
XOFFL	src/include/ov2640_regs.h	17;"	d
Y	src/img/dmtx.c	/^   double          Y;$/;"	m	struct:DmtxVector2_struct	file:
Y	src/img/dmtx.c	/^   int Y;$/;"	m	struct:DmtxPixelLoc_struct	file:
YAC_HT	src/img/jpeg.c	/^static const uint16_t YAC_HT[256][2] = {$/;"	v	file:
YAVG	src/include/ov2640_regs.h	130;"	d
YDC_HT	src/img/jpeg.c	/^static const uint16_t YDC_HT[12][2] = { {0,2},{2,3},{3,3},{4,3},{5,3},{6,3},{14,4},{30,5},{62,6},{126,7},{254,8},{510,9}};$/;"	v	file:
YOFFL	src/include/ov2640_regs.h	18;"	d
YQT	src/img/jpeg.c	/^static const uint8_t YQT[] = {$/;"	v	file:
YTable	src/img/jpeg.c	/^static uint8_t YTable[64], UVTable[64];$/;"	v	file:
ZAG	src/img/picojpeg.c	/^static const int8 ZAG[] = $/;"	v	file:
ZBAR_ADDON	src/img/zbar.c	/^    ZBAR_ADDON       = 0x0700,$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_ADDON	zbar/zbar.h	/^    ZBAR_ADDON       = 0x0700,  \/**< add-on flag mask *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_ADDON2	src/img/zbar.c	/^    ZBAR_ADDON2      = 0x0200,$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_ADDON2	zbar/zbar.h	/^    ZBAR_ADDON2      = 0x0200,  \/**< 2-digit add-on flag *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_ADDON5	src/img/zbar.c	/^    ZBAR_ADDON5      = 0x0500,$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_ADDON5	zbar/zbar.h	/^    ZBAR_ADDON5      = 0x0500,  \/**< 5-digit add-on flag *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_BAR	src/img/zbar.c	/^    ZBAR_BAR = 1,      \/**< dark area or colored bar segment *\/$/;"	e	enum:zbar_color_e	file:
ZBAR_BAR	zbar/zbar.h	/^    ZBAR_BAR = 1,      \/**< dark area or colored bar segment *\/$/;"	e	enum:zbar::zbar_color_e
ZBAR_CFG_ADD_CHECK	src/img/zbar.c	/^    ZBAR_CFG_ADD_CHECK,         \/**< enable check digit when optional *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_ADD_CHECK	zbar/zbar.h	/^    ZBAR_CFG_ADD_CHECK,         \/**< enable check digit when optional *\/$/;"	e	enum:zbar::zbar_config_e
ZBAR_CFG_ASCII	src/img/zbar.c	/^    ZBAR_CFG_ASCII,             \/**< enable full ASCII character set *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_ASCII	zbar/zbar.h	/^    ZBAR_CFG_ASCII,             \/**< enable full ASCII character set *\/$/;"	e	enum:zbar::zbar_config_e
ZBAR_CFG_EMIT_CHECK	src/img/zbar.c	/^    ZBAR_CFG_EMIT_CHECK,        \/**< return check digit when present *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_EMIT_CHECK	zbar/zbar.h	/^    ZBAR_CFG_EMIT_CHECK,        \/**< return check digit when present *\/$/;"	e	enum:zbar::zbar_config_e
ZBAR_CFG_ENABLE	src/img/zbar.c	/^    ZBAR_CFG_ENABLE = 0,        \/**< enable symbology\/feature *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_ENABLE	zbar/zbar.h	/^    ZBAR_CFG_ENABLE = 0,        \/**< enable symbology\/feature *\/$/;"	e	enum:zbar::zbar_config_e
ZBAR_CFG_MAX_LEN	src/img/zbar.c	/^    ZBAR_CFG_MAX_LEN,           \/**< maximum data length for valid decode *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_MAX_LEN	zbar/zbar.h	/^    ZBAR_CFG_MAX_LEN,           \/**< maximum data length for valid decode *\/$/;"	e	enum:zbar::zbar_config_e
ZBAR_CFG_MIN_LEN	src/img/zbar.c	/^    ZBAR_CFG_MIN_LEN = 0x20,    \/**< minimum data length for valid decode *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_MIN_LEN	zbar/zbar.h	/^    ZBAR_CFG_MIN_LEN = 0x20,    \/**< minimum data length for valid decode *\/$/;"	e	enum:zbar::zbar_config_e
ZBAR_CFG_NUM	src/img/zbar.c	/^    ZBAR_CFG_NUM,               \/**< number of boolean decoder configs *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_NUM	zbar/zbar.h	/^    ZBAR_CFG_NUM,               \/**< number of boolean decoder configs *\/$/;"	e	enum:zbar::zbar_config_e
ZBAR_CFG_POSITION	src/img/zbar.c	/^    ZBAR_CFG_POSITION = 0x80,   \/**< enable scanner to collect position data *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_POSITION	zbar/zbar.h	/^    ZBAR_CFG_POSITION = 0x80,   \/**< enable scanner to collect position data *\/$/;"	e	enum:zbar::zbar_config_e
ZBAR_CFG_UNCERTAINTY	src/img/zbar.c	/^    ZBAR_CFG_UNCERTAINTY = 0x40,\/**< required video consistency frames *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_X_DENSITY	src/img/zbar.c	/^    ZBAR_CFG_X_DENSITY = 0x100, \/**< image scanner vertical scan density *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_X_DENSITY	zbar/zbar.h	/^    ZBAR_CFG_X_DENSITY = 0x100, \/**< image scanner vertical scan density *\/$/;"	e	enum:zbar::zbar_config_e
ZBAR_CFG_Y_DENSITY	src/img/zbar.c	/^    ZBAR_CFG_Y_DENSITY,         \/**< image scanner horizontal scan density *\/$/;"	e	enum:zbar_config_e	file:
ZBAR_CFG_Y_DENSITY	zbar/zbar.h	/^    ZBAR_CFG_Y_DENSITY,         \/**< image scanner horizontal scan density *\/$/;"	e	enum:zbar::zbar_config_e
ZBAR_CODABAR	src/img/zbar.c	/^    ZBAR_CODABAR     =     38,  \/**< Codabar. @since 0.11 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_CODE128	src/img/zbar.c	/^    ZBAR_CODE128     =    128,  \/**< Code 128 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_CODE128	zbar/zbar.h	/^    ZBAR_CODE128     =    128,  \/**< Code 128 *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_CODE39	src/img/zbar.c	/^    ZBAR_CODE39      =     39,  \/**< Code 39. @since 0.4 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_CODE39	zbar/zbar.h	/^    ZBAR_CODE39      =     39,  \/**< Code 39. @since 0.4 *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_CODE93	src/img/zbar.c	/^    ZBAR_CODE93      =     93,  \/**< Code 93. @since 0.11 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_COMPOSITE	src/img/zbar.c	/^    ZBAR_COMPOSITE   =     15,  \/**< EAN\/UPC composite *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_DATABAR	src/img/zbar.c	/^    ZBAR_DATABAR     =     34,  \/**< GS1 DataBar (RSS). @since 0.11 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_DATABAR_EXP	src/img/zbar.c	/^    ZBAR_DATABAR_EXP =     35,  \/**< GS1 DataBar Expanded. @since 0.11 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_EAN13	src/img/zbar.c	/^    ZBAR_EAN13       =     13,  \/**< EAN-13 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_EAN13	zbar/zbar.h	/^    ZBAR_EAN13       =     13,  \/**< EAN-13 *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_EAN2	src/img/zbar.c	/^    ZBAR_EAN2        =      2,  \/**< GS1 2-digit add-on *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_EAN5	src/img/zbar.c	/^    ZBAR_EAN5        =      5,  \/**< GS1 5-digit add-on *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_EAN8	src/img/zbar.c	/^    ZBAR_EAN8        =      8,  \/**< EAN-8 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_EAN8	zbar/zbar.h	/^    ZBAR_EAN8        =      8,  \/**< EAN-8 *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_ERR_BUSY	zbar/zbar.h	/^    ZBAR_ERR_BUSY,              \/**< all resources busy *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_CLOSED	zbar/zbar.h	/^    ZBAR_ERR_CLOSED,            \/**< output window is closed *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_INTERNAL	zbar/zbar.h	/^    ZBAR_ERR_INTERNAL,          \/**< internal library error *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_INVALID	zbar/zbar.h	/^    ZBAR_ERR_INVALID,           \/**< invalid request *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_LOCKING	zbar/zbar.h	/^    ZBAR_ERR_LOCKING,           \/**< locking error *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_NOMEM	zbar/zbar.h	/^    ZBAR_ERR_NOMEM,             \/**< out of memory *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_NUM	zbar/zbar.h	/^    ZBAR_ERR_NUM                \/**< number of error codes *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_SYSTEM	zbar/zbar.h	/^    ZBAR_ERR_SYSTEM,            \/**< system error *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_UNSUPPORTED	zbar/zbar.h	/^    ZBAR_ERR_UNSUPPORTED,       \/**< unsupported request *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_WINAPI	zbar/zbar.h	/^    ZBAR_ERR_WINAPI,            \/**< windows system error *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_XDISPLAY	zbar/zbar.h	/^    ZBAR_ERR_XDISPLAY,          \/**< X11 display error *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ERR_XPROTO	zbar/zbar.h	/^    ZBAR_ERR_XPROTO,            \/**< X11 protocol error *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_FIXED	src/img/zbar.c	8431;"	d	file:
ZBAR_FIXED	zbar/scanner.c	39;"	d	file:
ZBAR_FMT_GRAY	zbar/image.h	/^    ZBAR_FMT_GRAY,$/;"	e	enum:zbar_format_group_e
ZBAR_FMT_JPEG	zbar/image.h	/^    ZBAR_FMT_JPEG,$/;"	e	enum:zbar_format_group_e
ZBAR_FMT_NUM	zbar/image.h	/^    ZBAR_FMT_NUM$/;"	e	enum:zbar_format_group_e
ZBAR_FMT_RGB_PACKED	zbar/image.h	/^    ZBAR_FMT_RGB_PACKED,$/;"	e	enum:zbar_format_group_e
ZBAR_FMT_YUV_NV	zbar/image.h	/^    ZBAR_FMT_YUV_NV,$/;"	e	enum:zbar_format_group_e
ZBAR_FMT_YUV_PACKED	zbar/image.h	/^    ZBAR_FMT_YUV_PACKED,$/;"	e	enum:zbar_format_group_e
ZBAR_FMT_YUV_PLANAR	zbar/image.h	/^    ZBAR_FMT_YUV_PLANAR,$/;"	e	enum:zbar_format_group_e
ZBAR_I25	src/img/zbar.c	/^    ZBAR_I25         =     25,  \/**< Interleaved 2 of 5. @since 0.4 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_I25	zbar/zbar.h	/^    ZBAR_I25         =     25,  \/**< Interleaved 2 of 5. @since 0.4 *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_ISBN10	src/img/zbar.c	/^    ZBAR_ISBN10      =     10,  \/**< ISBN-10 (from EAN-13). @since 0.4 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_ISBN10	zbar/zbar.h	/^    ZBAR_ISBN10      =     10,  \/**< ISBN-10 (from EAN-13). @since 0.4 *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_ISBN13	src/img/zbar.c	/^    ZBAR_ISBN13      =     14,  \/**< ISBN-13 (from EAN-13). @since 0.4 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_ISBN13	zbar/zbar.h	/^    ZBAR_ISBN13      =     14,  \/**< ISBN-13 (from EAN-13). @since 0.4 *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_MOD_AIM	src/img/zbar.c	/^    ZBAR_MOD_AIM,$/;"	e	enum:zbar_modifier_e	file:
ZBAR_MOD_GS1	src/img/zbar.c	/^    ZBAR_MOD_GS1 = 0,$/;"	e	enum:zbar_modifier_e	file:
ZBAR_MOD_IMAGE_SCANNER	zbar/error.h	/^    ZBAR_MOD_IMAGE_SCANNER,$/;"	e	enum:errmodule_e
ZBAR_MOD_NUM	src/img/zbar.c	/^    ZBAR_MOD_NUM,$/;"	e	enum:zbar_modifier_e	file:
ZBAR_MOD_PROCESSOR	zbar/error.h	/^    ZBAR_MOD_PROCESSOR,$/;"	e	enum:errmodule_e
ZBAR_MOD_UNKNOWN	zbar/error.h	/^    ZBAR_MOD_UNKNOWN,$/;"	e	enum:errmodule_e
ZBAR_MOD_VIDEO	zbar/error.h	/^    ZBAR_MOD_VIDEO,$/;"	e	enum:errmodule_e
ZBAR_MOD_WINDOW	zbar/error.h	/^    ZBAR_MOD_WINDOW,$/;"	e	enum:errmodule_e
ZBAR_NONE	src/img/zbar.c	/^    ZBAR_NONE        =      0,  \/**< no symbol decoded *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_NONE	zbar/zbar.h	/^    ZBAR_NONE        =      0,  \/**< no symbol decoded *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_OK	zbar/zbar.h	/^    ZBAR_OK = 0,                \/**< no error *\/$/;"	e	enum:zbar::zbar_error_e
ZBAR_ORIENT_DOWN	src/img/zbar.c	/^    ZBAR_ORIENT_DOWN,           \/**< upside-down, read right to left *\/$/;"	e	enum:zbar_orientation_e	file:
ZBAR_ORIENT_LEFT	src/img/zbar.c	/^    ZBAR_ORIENT_LEFT,           \/**< sideways, read bottom to top *\/$/;"	e	enum:zbar_orientation_e	file:
ZBAR_ORIENT_RIGHT	src/img/zbar.c	/^    ZBAR_ORIENT_RIGHT,          \/**< sideways, read top to bottom *\/$/;"	e	enum:zbar_orientation_e	file:
ZBAR_ORIENT_UNKNOWN	src/img/zbar.c	/^    ZBAR_ORIENT_UNKNOWN = -1,   \/**< unable to determine orientation *\/$/;"	e	enum:zbar_orientation_e	file:
ZBAR_ORIENT_UP	src/img/zbar.c	/^    ZBAR_ORIENT_UP,             \/**< upright, read left to right *\/$/;"	e	enum:zbar_orientation_e	file:
ZBAR_PARTIAL	src/img/zbar.c	/^    ZBAR_PARTIAL     =      1,  \/**< intermediate status *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_PARTIAL	zbar/zbar.h	/^    ZBAR_PARTIAL     =      1,  \/**< intermediate status *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_PDF417	src/img/zbar.c	/^    ZBAR_PDF417      =     57,  \/**< PDF417. @since 0.6 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_PDF417	zbar/zbar.h	/^    ZBAR_PDF417      =     57,  \/**< PDF417. @since 0.6 *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_QRCODE	src/img/zbar.c	/^    ZBAR_QRCODE      =     64,  \/**< QR Code. @since 0.10 *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_QRCODE	zbar/zbar.h	/^    ZBAR_QRCODE      =     64,  \/**< QR Code. @since 0.10 *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_SCANNER_EWMA_WEIGHT	src/img/zbar.c	8451;"	d	file:
ZBAR_SCANNER_EWMA_WEIGHT	zbar/scanner.c	59;"	d	file:
ZBAR_SCANNER_THRESH_FADE	src/img/zbar.c	8447;"	d	file:
ZBAR_SCANNER_THRESH_FADE	zbar/scanner.c	55;"	d	file:
ZBAR_SCANNER_THRESH_INIT_WEIGHT	src/img/zbar.c	8441;"	d	file:
ZBAR_SCANNER_THRESH_INIT_WEIGHT	zbar/scanner.c	49;"	d	file:
ZBAR_SCANNER_THRESH_MIN	src/img/zbar.c	8437;"	d	file:
ZBAR_SCANNER_THRESH_MIN	zbar/scanner.c	45;"	d	file:
ZBAR_SPACE	src/img/zbar.c	/^    ZBAR_SPACE = 0,    \/**< light area or space between bars *\/$/;"	e	enum:zbar_color_e	file:
ZBAR_SPACE	zbar/zbar.h	/^    ZBAR_SPACE = 0,    \/**< light area or space between bars *\/$/;"	e	enum:zbar::zbar_color_e
ZBAR_SYMBOL	src/img/zbar.c	/^    ZBAR_SYMBOL      = 0x00ff,$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_SYMBOL	zbar/zbar.h	/^    ZBAR_SYMBOL      = 0x00ff,  \/**< mask for base symbol type *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_UPCA	src/img/zbar.c	/^    ZBAR_UPCA        =     12,  \/**< UPC-A *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_UPCA	zbar/zbar.h	/^    ZBAR_UPCA        =     12,  \/**< UPC-A *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_UPCE	src/img/zbar.c	/^    ZBAR_UPCE        =      9,  \/**< UPC-E *\/$/;"	e	enum:zbar_symbol_type_e	file:
ZBAR_UPCE	zbar/zbar.h	/^    ZBAR_UPCE        =      9,  \/**< UPC-E *\/$/;"	e	enum:zbar::zbar_symbol_type_e
ZBAR_VERSION_MAJOR	zbar/config.h	28;"	d
ZBAR_VERSION_MINOR	zbar/config.h	31;"	d
ZFLUSH	zbar/error.h	87;"	d
ZFLUSH	zbar/error.h	89;"	d
ZMHH	src/include/ov2640_regs.h	24;"	d
ZMOH	src/include/ov2640_regs.h	23;"	d
ZMOW	src/include/ov2640_regs.h	22;"	d
ZOOMS	src/include/ov2640_regs.h	138;"	d
_DECODER_H_	zbar/decoder.h	24;"	d
_DECODER_QR_FINDER_H_	zbar/qr_finder.h	2;"	d
_ERROR_H_	zbar/error.h	24;"	d
_IMAGE_H_	zbar/image.h	24;"	d
_IMG_SCANNER_H_	zbar/img_scanner.h	24;"	d
_P	src/img/conv.c	6;"	d	file:
_QRCODE_H_	zbar/qrcode.h	7;"	d
_REFCNT_H_	zbar/refcnt.h	24;"	d
_SYMBOL_H_	zbar/symbol.h	24;"	d
_ZBAR_H_	zbar/zbar.h	24;"	d
__ARRAY_H__	src/include/array.h	10;"	d
__CAMBUS_H__	src/cambus.h	10;"	d
__CLZ	src/include/omv_boardconfig.h	255;"	d
__COLLECTIONS_H__	src/img/include/collections.h	7;"	d
__CONFIG_H__	zbar/config.h	2;"	d
__CONVERSION_H__	pybind_test/conversion.h	2;"	d
__CONVERSION_H__	test/conversion.h	2;"	d
__FB_ALLOC_H__	src/include/fb_alloc.h	10;"	d
__FMATH_H	src/img/include/fmath.h	10;"	d
__FONT_H__	src/img/include/font.h	10;"	d
__FRAMEBUFFER_H__	src/include/framebuffer.h	10;"	d
__FSORT_H__	src/img/include/fsort.h	10;"	d
__GC0328_H	src/include/gc0328.h	16;"	d
__GC2145_H__	src/include/gc2145.h	17;"	d
__GC2145_REGS_H__	src/include/gc2145_regs.h	17;"	d
__IDE_DBG_H__	src/include/ide_dbg.h	10;"	d
__IMDEFS_H	src/img/include/imdefs.h	2;"	d
__IMLIB_CONFIG_H__	src/include/imlib_config.h	10;"	d
__IMLIB_H__	src/img/include/imlib.h	7;"	d
__MP_H__	src/py/include/mp.h	10;"	d
__MUTEX_H__	src/include/mutex.h	10;"	d
__OMV_BOARDCONFIG_H__	src/include/omv_boardconfig.h	10;"	d
__OMV_FFT_H__	src/img/include/omv_fft.h	10;"	d
__OMV_H__	src/include/omv.h	4;"	d
__OV2640_H__	src/include/ov2640.h	10;"	d
__OV3660_H	src/include/ov3660.h	2;"	d
__OV5640_H__	src/include/ov5640.h	12;"	d
__OV5642_REGS__H__	src/include/ov5642_regs.h	2;"	d
__OV5642__H__	src/include/ov5642.h	2;"	d
__PICOJPEG_UTIL_H__	src/img/include/picojpeg_util.h	2;"	d
__PY_ASSERT_H__	src/py/include/py_assert.h	10;"	d
__PY_HELPER_H__	src/py/include/py_helper.h	7;"	d
__PY_IMAGE_H__	src/py/include/py_image.h	10;"	d
__PY_LCD_H__	src/py/include/py_lcd.h	10;"	d
__PY_SENSOR_H__	src/py/include/py_sensor.h	10;"	d
__PY_TIME_H__	src/py/py_time.h	10;"	d
__RBIT	src/img/fft.c	/^static inline uint32_t __RBIT(uint32_t value)$/;"	f	file:
__REG_REGS_H__	src/include/ov2640_regs.h	10;"	d
__REG_REGS_H__	src/include/ov5640_regs.h	12;"	d
__REV16	src/include/omv_boardconfig.h	262;"	d
__SENSOR_H__	src/include/sensor.h	11;"	d
__UMM_MALLOC_H__	src/include/umm_malloc.h	7;"	d
__VFS_WRAPPER_H	src/include/vfs_wrapper.h	2;"	d
__XALLOC_H__	src/include/xalloc.h	10;"	d
__func__	zbar/debug.h	65;"	d
__func__	zbar/debug.h	67;"	d
__func__	zbar/error.h	44;"	d
__func__	zbar/error.h	46;"	d
_ai_done_flag	src/img/conv.c	/^static volatile uint8_t _ai_done_flag;$/;"	v	file:
_ai_done_flag	src/img/imlib.c	/^static volatile uint8_t _ai_done_flag;$/;"	v	file:
_bch15_5_H	zbar/bch15_5.h	7;"	d
_cobj	src/py/py_image.c	/^    image_t _cobj;$/;"	m	struct:_py_image_obj_t	file:
_cobj	src/py/py_image.c	/^    struct cascade _cobj;$/;"	m	struct:_py_cascade_obj_t	typeref:struct:_py_cascade_obj_t::cascade	file:
_fb_framebuffer0	src/framebuffer.c	/^static framebuffer_t _fb_framebuffer0={0,0,0,0,0,0,0,0,0,NULL,NULL,NULL,NULL};$/;"	v	file:
_get_hv_pixel	src/py/py_image.c	/^static void _get_hv_pixel(image_t* img, uint16_t* h0, uint16_t* h1, \\$/;"	f	file:
_isaac_H	zbar/isaac.h	4;"	d
_jpeg_enc	src/img/jpeg.c	/^typedef struct _jpeg_enc {$/;"	s	file:
_jpeg_fb_framebuffer	src/framebuffer.c	/^    static jpegbuffer_t _jpeg_fb_framebuffer={0,0,0,0,0,{},g_jpg_buf};$/;"	v	file:
_line_buf	src/sensor.c	/^uint8_t _line_buf;$/;"	v
_mf_qr_scan_pic	test/mf_qr.c	/^static uint8_t _mf_qr_scan_pic(uint8_t *pic, uint16_t w, uint16_t h, uint8_t* qrcode, uint8_t convert)$/;"	f	file:
_mf_qr_scan_pic	test/python_module/image.c	/^char* _mf_qr_scan_pic(uint8_t *pic, uint16_t w, uint16_t h )$/;"	f
_ndelay	src/sensor.c	/^void _ndelay(uint32_t ns)$/;"	f
_py_cascade_obj_t	src/py/py_image.c	/^typedef struct _py_cascade_obj_t {$/;"	s	file:
_py_image_obj_t	src/py/py_image.c	/^typedef struct _py_image_obj_t {$/;"	s	file:
_py_kp_obj_t	src/py/py_image.c	/^typedef struct _py_kp_obj_t {$/;"	s	file:
_py_kptmatch_obj_t	src/py/py_image.c	/^typedef struct _py_kptmatch_obj_t {$/;"	s	file:
_py_lbp_obj_t	src/py/py_image.c	/^typedef struct _py_lbp_obj_t {$/;"	s	file:
_qrcode_binarize_H	zbar/binarize.h	7;"	d
_qrcode_rs_H	zbar/rs.h	8;"	d
_qrcode_util_H	zbar/util.h	7;"	d
_qrdec_H	zbar/qrdec.h	7;"	d
_sensor	src/include/sensor.h	/^typedef struct _sensor {$/;"	s
_t0	src/img/hough.c	/^volatile static uint64_t _t0,_t1;$/;"	v	file:
_t0	src/img/jpeg.c	/^volatile static uint64_t _t0,_t1;$/;"	v	file:
_t1	src/img/hough.c	/^volatile static uint64_t _t0,_t1;$/;"	v	file:
_t1	src/img/jpeg.c	/^volatile static uint64_t _t0,_t1;$/;"	v	file:
_vector	src/img/include/imlib.h	/^typedef struct _vector {$/;"	s
_zbar_decode_codabar	src/img/zbar.c	/^_zbar_decode_codabar (zbar_decoder_t *dcode)$/;"	f
_zbar_decode_code128	src/img/zbar.c	/^zbar_symbol_type_t _zbar_decode_code128 (zbar_decoder_t *dcode)$/;"	f
_zbar_decode_code39	src/img/zbar.c	/^zbar_symbol_type_t _zbar_decode_code39 (zbar_decoder_t *dcode)$/;"	f
_zbar_decode_code93	src/img/zbar.c	/^_zbar_decode_code93 (zbar_decoder_t *dcode)$/;"	f
_zbar_decode_databar	src/img/zbar.c	/^_zbar_decode_databar (zbar_decoder_t *dcode)$/;"	f
_zbar_decode_ean	src/img/zbar.c	/^zbar_symbol_type_t _zbar_decode_ean (zbar_decoder_t *dcode)$/;"	f
_zbar_decode_i25	src/img/zbar.c	/^zbar_symbol_type_t _zbar_decode_i25 (zbar_decoder_t *dcode)$/;"	f
_zbar_decode_pdf417	src/img/zbar.c	/^zbar_symbol_type_t _zbar_decode_pdf417 (zbar_decoder_t *dcode)$/;"	f
_zbar_decoder_buf_dump	zbar/decoder.c	/^const char *_zbar_decoder_buf_dump (unsigned char *buf,$/;"	f
_zbar_decoder_get_qr_finder_line	zbar/qr_finder.c	/^qr_finder_line *_zbar_decoder_get_qr_finder_line (zbar_decoder_t *dcode)$/;"	f
_zbar_error_spew	zbar/error.c	/^int _zbar_error_spew (const void *container,$/;"	f
_zbar_error_string	zbar/error.c	/^const char *_zbar_error_string (const void *container,$/;"	f
_zbar_find_qr	zbar/qr_finder.c	/^zbar_symbol_type_t _zbar_find_qr (zbar_decoder_t *dcode)$/;"	f
_zbar_get_error_code	zbar/error.c	/^zbar_error_t _zbar_get_error_code (const void *container)$/;"	f
_zbar_get_symbol_hash	src/img/zbar.c	/^int _zbar_get_symbol_hash (zbar_symbol_type_t sym)$/;"	f
_zbar_image_free	zbar/image.c	/^void _zbar_image_free (zbar_image_t *img)$/;"	f
_zbar_image_refcnt	zbar/image.h	/^static inline void _zbar_image_refcnt (zbar_image_t *img,$/;"	f
_zbar_image_scanner_add_sym	src/img/zbar.c	/^void _zbar_image_scanner_add_sym(zbar_image_scanner_t *iscn,$/;"	f
_zbar_image_scanner_add_sym	zbar/img_scanner.c	/^void _zbar_image_scanner_add_sym(zbar_image_scanner_t *iscn,$/;"	f
_zbar_image_scanner_alloc_sym	src/img/zbar.c	/^_zbar_image_scanner_alloc_sym (zbar_image_scanner_t *iscn,$/;"	f
_zbar_image_scanner_alloc_sym	zbar/img_scanner.c	/^_zbar_image_scanner_alloc_sym (zbar_image_scanner_t *iscn,$/;"	f
_zbar_image_scanner_recycle_syms	src/img/zbar.c	/^void _zbar_image_scanner_recycle_syms (zbar_image_scanner_t *iscn,$/;"	f
_zbar_image_scanner_recycle_syms	zbar/img_scanner.c	/^void _zbar_image_scanner_recycle_syms (zbar_image_scanner_t *iscn,$/;"	f
_zbar_image_swap_symbols	zbar/image.h	/^static inline void _zbar_image_swap_symbols (zbar_image_t *a,$/;"	f
_zbar_qr_create	zbar/qrdec.c	/^qr_reader *_zbar_qr_create (void)$/;"	f
_zbar_qr_decode	zbar/qrdec.c	/^int _zbar_qr_decode (qr_reader *reader,$/;"	f
_zbar_qr_destroy	zbar/qrdec.c	/^void _zbar_qr_destroy (qr_reader *reader)$/;"	f
_zbar_qr_found_line	zbar/qrdec.c	/^int _zbar_qr_found_line (qr_reader *reader,$/;"	f
_zbar_qr_reset	zbar/qrdec.c	/^void _zbar_qr_reset (qr_reader *reader)$/;"	f
_zbar_refcnt	src/img/zbar.c	/^static inline int _zbar_refcnt (refcnt_t *cnt,$/;"	f	file:
_zbar_refcnt	zbar/refcnt.h	/^static inline int _zbar_refcnt (refcnt_t *cnt,$/;"	f
_zbar_refcnt_init	src/img/zbar.c	/^void _zbar_refcnt_init ()$/;"	f
_zbar_refcnt_init	zbar/refcnt.c	/^void _zbar_refcnt_init ()$/;"	f
_zbar_reflock	zbar/refcnt.c	/^pthread_mutex_t _zbar_reflock;$/;"	v
_zbar_symbol_free	src/img/zbar.c	/^void _zbar_symbol_free (zbar_symbol_t *sym)$/;"	f
_zbar_symbol_free	zbar/symbol.c	/^void _zbar_symbol_free (zbar_symbol_t *sym)$/;"	f
_zbar_symbol_refcnt	src/img/zbar.c	/^static inline void _zbar_symbol_refcnt (zbar_symbol_t *sym,$/;"	f	file:
_zbar_symbol_refcnt	zbar/symbol.h	/^static inline void _zbar_symbol_refcnt (zbar_symbol_t *sym,$/;"	f
_zbar_symbol_set_add	src/img/zbar.c	/^static inline void _zbar_symbol_set_add (zbar_symbol_set_t *syms,$/;"	f	file:
_zbar_symbol_set_add	zbar/symbol.h	/^static inline void _zbar_symbol_set_add (zbar_symbol_set_t *syms,$/;"	f
_zbar_symbol_set_create	src/img/zbar.c	/^zbar_symbol_set_t *_zbar_symbol_set_create ()$/;"	f
_zbar_symbol_set_create	zbar/symbol.c	/^zbar_symbol_set_t *_zbar_symbol_set_create ()$/;"	f
_zbar_symbol_set_free	src/img/zbar.c	/^inline void _zbar_symbol_set_free (zbar_symbol_set_t *syms)$/;"	f
_zbar_symbol_set_free	zbar/symbol.c	/^inline void _zbar_symbol_set_free (zbar_symbol_set_t *syms)$/;"	f
_zbar_verbosity	zbar/error.c	/^int _zbar_verbosity = 0;$/;"	v
a	src/img/selective_search.c	/^    uint16_t a;$/;"	m	struct:__anon43	file:
a	zbar/isaac.h	/^  unsigned a;$/;"	m	struct:isaac_ctx
aasf	src/img/jpeg.c	/^static const float aasf[] = {$/;"	v	file:
acos	src/img/dmtx.c	55;"	d	file:
acquire_lock	src/img/zbar.c	/^static inline char acquire_lock (zbar_decoder_t *dcode,$/;"	f	file:
addAndClamp	src/img/picojpeg.c	/^static PJPG_INLINE uint8 addAndClamp(uint8 a, int16 b)$/;"	f	file:
add_7tuple	src/img/lsd.c	/^static void add_7tuple( ntuple_list out, double v1, double v2, double v3,$/;"	f	file:
address	src/mt9d111.c	/^    uint8_t     address;    \/**< struct Register address. *\/$/;"	m	struct:Register	file:
agast58_detect	src/img/agast.c	/^static corner_t *agast58_detect(image_t *img, int b, int* num_corners, rectangle_t *roi)$/;"	f	file:
agast58_score	src/img/agast.c	/^static int agast58_score(const unsigned char* p, int bstart)$/;"	f	file:
agast_detect	src/img/agast.c	/^void agast_detect(image_t *image, array_t *keypoints, int threshold, rectangle_t *roi)$/;"	f
align	src/img/qrcode.c	/^    struct quirc_point  align;$/;"	m	struct:quirc_grid	typeref:struct:quirc_grid::quirc_point	file:
align_region	src/img/qrcode.c	/^    int                 align_region;$/;"	m	struct:quirc_grid	file:
alloc	src/img/apriltag.c	/^    int alloc; \/\/ we've allocated storage for how many elements?$/;"	m	struct:zarray	file:
alloc_keypoint	src/img/agast.c	/^static kp_t *alloc_keypoint(uint16_t x, uint16_t y, uint16_t score)$/;"	f	file:
alloc_keypoint	src/img/fast.c	/^static kp_t *alloc_keypoint(uint16_t x, uint16_t y, uint16_t score)$/;"	f	file:
alloc_segment	src/img/zbar.c	/^alloc_segment (databar_decoder_t *db)$/;"	f	file:
alpha	src/img/mathop.c	/^    float alpha;$/;"	m	struct:imlib_blend_line_op_state	file:
alpha1_array	src/img/include/imlib.h	/^    int16_t *alpha1_array;          \/\/ Alpha1 array (1 per feature).$/;"	m	struct:cascade
alpha2_array	src/img/include/imlib.h	/^    int16_t *alpha2_array;          \/\/ Alpha2 array (1 per feature).$/;"	m	struct:cascade
alpha_tuple	src/img/qrcode.c	/^static int alpha_tuple(struct quirc_data *data,$/;"	f	file:
alt_fast_exp	src/img/phasecorrelation.c	8;"	d	file:
alt_fast_log	src/img/phasecorrelation.c	9;"	d	file:
angle	src/img/dmtx.c	/^   int             angle;$/;"	m	struct:DmtxBestLine_struct	file:
angle	src/img/include/imlib.h	/^    uint16_t angle;$/;"	m	struct:kp
angle_diff	src/img/lsd.c	/^static double angle_diff(double a, double b)$/;"	f	file:
angle_diff_signed	src/img/lsd.c	/^static double angle_diff_signed(double a, double b)$/;"	f	file:
antilog301	src/img/dmtx.c	/^static DmtxByte antilog301[] =$/;"	v	file:
apat	src/img/qrcode.c	/^    uint8_t                 apat[QUIRC_MAX_ALIGNMENT];$/;"	m	struct:quirc_version_info	file:
append_check14	src/img/zbar.c	/^append_check14 (unsigned char *buf)$/;"	f	file:
apriltag_detection	src/img/apriltag.c	/^struct apriltag_detection$/;"	s	file:
apriltag_detection_destroy	src/img/apriltag.c	/^void apriltag_detection_destroy(apriltag_detection_t *det)$/;"	f
apriltag_detection_t	src/img/apriltag.c	/^typedef struct apriltag_detection apriltag_detection_t;$/;"	t	typeref:struct:apriltag_detection	file:
apriltag_detections_destroy	src/img/apriltag.c	/^void apriltag_detections_destroy(zarray_t *detections)$/;"	f
apriltag_detector	src/img/apriltag.c	/^struct apriltag_detector$/;"	s	file:
apriltag_detector_add_family	src/img/apriltag.c	/^static inline void apriltag_detector_add_family(apriltag_detector_t *td, apriltag_family_t *fam)$/;"	f	file:
apriltag_detector_add_family_bits	src/img/apriltag.c	/^void apriltag_detector_add_family_bits(apriltag_detector_t *td, apriltag_family_t *fam, int bits_corrected)$/;"	f
apriltag_detector_clear_families	src/img/apriltag.c	/^void apriltag_detector_clear_families(apriltag_detector_t *td)$/;"	f
apriltag_detector_create	src/img/apriltag.c	/^apriltag_detector_t *apriltag_detector_create()$/;"	f
apriltag_detector_destroy	src/img/apriltag.c	/^void apriltag_detector_destroy(apriltag_detector_t *td)$/;"	f
apriltag_detector_detect	src/img/apriltag.c	/^zarray_t *apriltag_detector_detect(apriltag_detector_t *td, image_u8_t *im_orig)$/;"	f
apriltag_detector_remove_family	src/img/apriltag.c	/^void apriltag_detector_remove_family(apriltag_detector_t *td, apriltag_family_t *fam)$/;"	f
apriltag_detector_t	src/img/apriltag.c	/^typedef struct apriltag_detector apriltag_detector_t;$/;"	t	typeref:struct:apriltag_detector	file:
apriltag_families	src/img/include/imlib.h	/^typedef enum apriltag_families {$/;"	g
apriltag_families_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) apriltag_families_t;$/;"	t	typeref:enum:apriltag_families
apriltag_family	src/img/apriltag.c	/^struct apriltag_family$/;"	s	file:
apriltag_family_t	src/img/apriltag.c	/^typedef struct apriltag_family apriltag_family_t;$/;"	t	typeref:struct:apriltag_family	file:
apriltag_quad_thresh	src/img/apriltag.c	/^zarray_t *apriltag_quad_thresh(apriltag_detector_t *td, image_u8_t *im, bool overrideMode)$/;"	f
apriltag_quad_thresh_params	src/img/apriltag.c	/^struct apriltag_quad_thresh_params$/;"	s	file:
area_count	src/img/qrcode.c	/^static void area_count(void *user_data, int y, int left, int right)$/;"	f	file:
arg_img	test/python_module/image.c	/^image_t arg_img;                               \/\/获得图片指针$/;"	v
arg_int	zbar/error.h	/^    int arg_int;                \/* single integer argument *\/$/;"	m	struct:errinfo_s
arg_list	src/img/hough.c	/^void* arg_list[16];$/;"	v
arg_str	zbar/error.h	/^    char *arg_str;              \/* single string argument *\/$/;"	m	struct:errinfo_s
arithmeticRightShift8L	src/img/picojpeg.c	/^static PJPG_INLINE long arithmeticRightShift8L(long x) $/;"	f	file:
arithmeticRightShiftN16	src/img/picojpeg.c	/^static PJPG_INLINE int16 arithmeticRightShiftN16(int16 x, int8 n) $/;"	f	file:
array	src/img/dmtx.c	/^   unsigned char  *array;         \/* Pointer to internal representation of Data Matrix modules *\/$/;"	m	struct:DmtxMessage_struct	file:
arraySize	src/img/dmtx.c	/^   size_t          arraySize;     \/* mappingRows * mappingCols *\/$/;"	m	struct:DmtxMessage_struct	file:
array_alloc	src/array.c	/^void array_alloc(array_t **a, array_dtor_t dtor)$/;"	f
array_alloc_init	src/array.c	/^void array_alloc_init(array_t **a, array_dtor_t dtor, int size)$/;"	f
array_at	src/array.c	/^void *array_at(array_t *array, int idx)$/;"	f
array_clear	src/array.c	/^void array_clear(array_t *array)$/;"	f
array_comp_t	src/include/array.h	/^typedef int  (*array_comp_t)(const void*, const void*);$/;"	t
array_dtor_t	src/include/array.h	/^typedef void (*array_dtor_t)(void*);$/;"	t
array_erase	src/array.c	/^void array_erase(array_t *array, int idx)$/;"	f
array_free	src/array.c	/^void array_free(array_t *array)$/;"	f
array_isort	src/array.c	/^void array_isort(array_t *array, array_comp_t comp)$/;"	f
array_length	src/array.c	/^int array_length(array_t *array)$/;"	f
array_pop_back	src/array.c	/^void *array_pop_back(array_t *array)$/;"	f
array_push_back	src/array.c	/^void array_push_back(array_t *array, void *element)$/;"	f
array_resize	src/array.c	/^void array_resize(array_t *array, int num)$/;"	f
array_sort	src/array.c	/^void array_sort(array_t *array, array_comp_t comp)$/;"	f
array_t	src/include/array.h	/^} __attribute__((aligned(32))) array_t;$/;"	t	typeref:struct:__anon45
array_take	src/array.c	/^void *array_take(array_t *array, int idx)$/;"	f
arrive	src/img/dmtx.c	/^   int             arrive;$/;"	m	struct:DmtxPointFlow_struct	file:
artoolkit	src/img/apriltag.c	/^const apriltag_family_t artoolkit = {$/;"	v
ascii	src/img/font.c	/^static uint8_t ascii[] = {$/;"	v	file:
asin	src/img/dmtx.c	56;"	d	file:
assert	src/img/apriltag.c	52;"	d	file:
assert	src/img/dmtx.c	23;"	d	file:
assert	src/img/zbar.c	21;"	d	file:
atan	src/img/apriltag.c	66;"	d	file:
atan	src/img/dmtx.c	37;"	d	file:
atan	src/img/lsd.c	36;"	d	file:
atan2	src/img/apriltag.c	68;"	d	file:
atan2	src/img/dmtx.c	39;"	d	file:
atan2	src/img/lsd.c	37;"	d	file:
atan2f	src/img/apriltag.c	69;"	d	file:
atan2f	src/img/dmtx.c	40;"	d	file:
atanf	src/img/apriltag.c	67;"	d	file:
atanf	src/img/dmtx.c	38;"	d	file:
aux_end	src/img/zbar.c	/^static inline signed char aux_end (zbar_decoder_t *dcode,$/;"	f	file:
aux_mid	src/img/zbar.c	/^static inline signed char aux_mid (zbar_decoder_t *dcode)$/;"	f	file:
aux_start	src/img/zbar.c	/^static inline signed char aux_start (zbar_decoder_t *dcode)$/;"	f	file:
avg	src/py/py_image.c	/^    mp_obj_t avg, std, min, max;$/;"	m	struct:py_similarity_obj	file:
b	src/img/dmtx.c	/^   DmtxByte *b;$/;"	m	struct:DmtxByteList_struct	file:
b	src/img/selective_search.c	/^    uint16_t b;$/;"	m	struct:__anon43	file:
b	zbar/isaac.h	/^  unsigned b;$/;"	m	struct:isaac_ctx
b_acc	src/img/filter.c	/^    int r_acc, g_acc, b_acc, pixels;$/;"	m	struct:imlib_cartoon_filter_mean_state	file:
barcodes	src/img/include/imlib.h	/^typedef enum barcodes {$/;"	g
barcodes_t	src/img/include/imlib.h	/^} barcodes_t;$/;"	t	typeref:enum:barcodes
base	src/py/py_gif.c	/^    mp_obj_base_t base;$/;"	m	struct:py_gif_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:_py_cascade_obj_t	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:_py_image_obj_t	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:_py_kp_obj_t	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:_py_kptmatch_obj_t	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:_py_lbp_obj_t	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_apriltag_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_barcode_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_blob_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_circle_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_datamatrix_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_displacement_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_histogram_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_imagereader_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_imagewriter_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_line_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_percentile_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_qrcode_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_rect_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_similarity_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_statistics_obj	file:
base	src/py/py_image.c	/^    mp_obj_base_t base;$/;"	m	struct:py_threshold_obj	file:
base	src/py/py_mjpeg.c	/^    mp_obj_base_t base;$/;"	m	struct:py_mjpeg_obj	file:
bbox	zbar/qrdec.h	/^  qr_point            bbox[4];$/;"	m	struct:qr_code_data
bch15_5_calc_epos	zbar/bch15_5.c	/^static int bch15_5_calc_epos(unsigned _epos[3],unsigned _s[3]){$/;"	f	file:
bch15_5_calc_omega	zbar/bch15_5.c	/^static int bch15_5_calc_omega(unsigned _o[3],unsigned _s[3]){$/;"	f	file:
bch15_5_calc_syndrome	zbar/bch15_5.c	/^static int bch15_5_calc_syndrome(unsigned _s[3],unsigned _y){$/;"	f	file:
bch15_5_correct	zbar/bch15_5.c	/^int bch15_5_correct(unsigned *_y){$/;"	f
bch15_5_encode	zbar/bch15_5.c	/^unsigned bch15_5_encode(unsigned _x){$/;"	f
bch18_6_correct	zbar/qrdec.c	/^static int bch18_6_correct(unsigned *_y){$/;"	f	file:
berlekamp_massey	src/img/qrcode.c	/^static void berlekamp_massey(const uint8_t *s, int N,$/;"	f	file:
bin	src/img/hog.c	/^typedef struct bin {$/;"	s	file:
bin_array_comp	src/img/hog.c	/^int bin_array_comp(const void *obj0, const void *obj1)$/;"	f
bin_t	src/img/hog.c	/^} __attribute__((aligned(8)))bin_t;$/;"	t	typeref:struct:bin	file:
binocular_sensor_reset	src/sensor.c	/^int binocular_sensor_reset(mp_int_t freq)$/;"	f
binocular_sensor_scan	src/sensor.c	/^int binocular_sensor_scan()$/;"	f
bit_reverse	src/img/fft.c	/^ALWAYS_INLINE static int bit_reverse(int index, int N_pow2)$/;"	f	file:
bitb	src/img/jpeg.c	/^    int bitc, bitb;$/;"	m	struct:__anon34	file:
bitc	src/img/jpeg.c	/^    int bitc, bitb;$/;"	m	struct:__anon34	file:
bitmap	src/img/include/collections.h	/^typedef struct bitmap$/;"	s
bitmap_alloc	src/img/collections.c	/^void bitmap_alloc(bitmap_t *ptr, size_t size)$/;"	f
bitmap_bit_get	src/img/collections.c	/^bool bitmap_bit_get(bitmap_t *ptr, size_t index)$/;"	f
bitmap_bit_set	src/img/collections.c	/^void bitmap_bit_set(bitmap_t *ptr, size_t index)$/;"	f
bitmap_clear	src/img/collections.c	/^void bitmap_clear(bitmap_t *ptr)$/;"	f
bitmap_free	src/img/collections.c	/^void bitmap_free(bitmap_t *ptr)$/;"	f
bitmap_t	src/img/include/collections.h	/^__attribute__((aligned(8)))bitmap_t;$/;"	t	typeref:struct:bitmap
bitsPerChannel	src/img/dmtx.c	/^   int             bitsPerChannel[4];$/;"	m	struct:DmtxImage_struct	file:
bitsPerPixel	src/img/dmtx.c	/^   int             bitsPerPixel;$/;"	m	struct:DmtxImage_struct	file:
bits_remaining	src/img/qrcode.c	/^static inline int bits_remaining(const struct datastream *ds)$/;"	f	file:
black_border	src/img/apriltag.c	/^    uint32_t black_border;$/;"	m	struct:apriltag_family	file:
block_syndromes	src/img/qrcode.c	/^static int block_syndromes(const uint8_t *data, int bs, int npar, uint8_t *s)$/;"	f	file:
blue	src/img/include/imlib.h	/^        uint8_t blue;   \/\/ RGB888 Blue$/;"	m	union:simple_color::__anon27
blue	test/python_module/test.c	/^        uint8_t blue;   \/\/ RGB888 Blue$/;"	m	union:simple_color::__anon61	file:
blue	zbar/image.h	/^            uint8_t red, green, blue;   \/* size\/location a la RGB_BITS() *\/$/;"	m	struct:zbar_format_def_s::__anon62::__anon63
bmp_bpp	src/img/include/imlib.h	/^    uint16_t bmp_bpp;$/;"	m	struct:bmp_read_settings
bmp_fmt	src/img/include/imlib.h	/^    uint32_t bmp_fmt;$/;"	m	struct:bmp_read_settings
bmp_h	src/img/include/imlib.h	/^    int32_t bmp_h;$/;"	m	struct:bmp_read_settings
bmp_read	src/img/bmp.c	/^void bmp_read(image_t *img, const char *path)$/;"	f
bmp_read_geometry	src/img/bmp.c	/^bool bmp_read_geometry(mp_obj_t fp, image_t *img, bmp_read_settings_t *rs)$/;"	f
bmp_read_pixels	src/img/bmp.c	/^bool bmp_read_pixels(mp_obj_t fp, image_t *img, int line_start, int line_end, bmp_read_settings_t *rs)$/;"	f
bmp_read_settings	src/img/include/imlib.h	/^typedef struct bmp_read_settings {$/;"	s
bmp_read_settings_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) bmp_read_settings_t;$/;"	t	typeref:struct:bmp_read_settings
bmp_row_bytes	src/img/include/imlib.h	/^    uint32_t bmp_row_bytes;$/;"	m	struct:bmp_read_settings
bmp_rs	src/img/include/imlib.h	/^        bmp_read_settings_t bmp_rs;$/;"	m	union:img_read_settings::__anon29
bmp_w	src/img/include/imlib.h	/^    int32_t bmp_w;$/;"	m	struct:bmp_read_settings
bmp_write_subimg	src/img/bmp.c	/^void bmp_write_subimg(image_t *img, const char *path, rectangle_t *r)$/;"	f
body	src/umm_malloc.c	/^  } body;$/;"	m	struct:umm_block_t	typeref:union:umm_block_t::__anon58	file:
boffs	zbar/qrcode.h	/^  int      boffs;$/;"	m	struct:qr_finder_line
bottomAngle	src/img/dmtx.c	/^   int             bottomAngle;   \/* hough angle of bottom edge *\/$/;"	m	struct:DmtxRegion_struct	file:
bottomKnown	src/img/dmtx.c	/^   int             bottomKnown;   \/* known == 1; unknown == 0 *\/$/;"	m	struct:DmtxRegion_struct	file:
bottomLine	src/img/dmtx.c	/^   DmtxBestLine    bottomLine;    \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
bottomLoc	src/img/dmtx.c	/^   DmtxPixelLoc    bottomLoc;     \/* known (arbitrary) location on bottom edge *\/$/;"	m	struct:DmtxRegion_struct	file:
boundMax	src/img/dmtx.c	/^   DmtxPixelLoc    boundMax;      \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
boundMin	src/img/dmtx.c	/^   DmtxPixelLoc    boundMin;      \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
bpp	src/img/include/imdefs.h	/^    int bpp;$/;"	m	struct:image
bpp	src/img/include/imdefs.h	/^    int bpp;$/;"	m	struct:image_py
bpp	src/include/framebuffer.h	/^    int bpp;$/;"	m	struct:framebuffer
bpp	src/py/py_image.c	/^    image_bpp_t bpp;$/;"	m	struct:py_histogram_obj	file:
bpp	src/py/py_image.c	/^    image_bpp_t bpp;$/;"	m	struct:py_percentile_obj	file:
bpp	src/py/py_image.c	/^    image_bpp_t bpp;$/;"	m	struct:py_statistics_obj	file:
bpp	src/py/py_image.c	/^    image_bpp_t bpp;$/;"	m	struct:py_threshold_obj	file:
bpp	zbar/image.h	/^            uint8_t bpp;                \/* bits per pixel *\/$/;"	m	struct:zbar_format_def_s::__anon62::__anon63
brightness_regs	src/ov2640.c	/^static const uint8_t brightness_regs[NUM_BRIGHTNESS_LEVELS + 1][5] = {$/;"	v	file:
brightness_regs	src/ov7740.c	/^static const uint8_t brightness_regs[NUM_BRIGHTNESS_LEVELS][2] = {$/;"	v	file:
bs	src/img/qrcode.c	/^    uint8_t bs; \/* Small block size *\/$/;"	m	struct:quirc_rs_params	file:
buf	src/img/apriltag.c	/^    float *buf; \/\/ indexed as buf[y*stride + x]$/;"	m	struct:image_f32	file:
buf	src/img/apriltag.c	/^    uint32_t *buf; \/\/ indexed as buf[y*stride + x]$/;"	m	struct:image_u32	file:
buf	src/img/apriltag.c	/^    uint8_t *buf;$/;"	m	struct:image_u8	file:
buf	src/img/apriltag.c	/^    uint8_t *buf;$/;"	m	struct:image_u8x3	file:
buf	src/img/apriltag.c	/^    uint8_t *buf;$/;"	m	struct:image_u8x4	file:
buf	src/img/jpeg.c	/^    uint8_t *buf;$/;"	m	struct:__anon34	file:
buf	src/img/picojpeg_util.c	/^   uint8_t* buf;$/;"	m	struct:__anon38	file:
buf	src/img/zbar.c	/^    signed char buf[18];        \/* holding buffer *\/$/;"	m	struct:ean_decoder_s	file:
buf	src/img/zbar.c	/^    unsigned char *buf;                 \/* decoded characters *\/$/;"	m	struct:zbar_decoder_s	file:
buf	src/img/zbar.c	/^    unsigned char buf;          \/* first character *\/$/;"	m	struct:code93_decoder_s	file:
buf	src/img/zbar.c	/^    unsigned char buf[4];       \/* initial scan buffer *\/$/;"	m	struct:i25_decoder_s	file:
buf	src/img/zbar.c	/^    unsigned char buf[6];       \/* initial scan buffer *\/$/;"	m	struct:codabar_decoder_s	file:
buf	zbar/decoder.h	/^    unsigned char *buf;                 \/* decoded characters *\/$/;"	m	struct:zbar_decoder_s
buf	zbar/error.h	/^    char *buf;                  \/* formatted and passed to application *\/$/;"	m	struct:errinfo_s
buf	zbar/qrdec.c	/^  const unsigned char *buf;$/;"	m	struct:qr_pack_buf	file:
buf	zbar/qrdec.h	/^      unsigned char *buf;$/;"	m	struct:qr_code_data_entry::__anon65::__anon66
buf_alloc	src/img/zbar.c	/^    unsigned buf_alloc;                 \/* dynamic buffer allocation *\/$/;"	m	struct:zbar_decoder_s	file:
buf_alloc	zbar/decoder.h	/^    unsigned buf_alloc;                 \/* dynamic buffer allocation *\/$/;"	m	struct:zbar_decoder_s
buff_ready	src/sensor.c	/^static volatile bool buff_ready = false;$/;"	v	file:
buflen	src/img/zbar.c	/^    unsigned buflen;                    \/* binary data length *\/$/;"	m	struct:zbar_decoder_s	file:
buflen	zbar/decoder.h	/^    unsigned buflen;                    \/* binary data length *\/$/;"	m	struct:zbar_decoder_s
bytes	src/py/py_mjpeg.c	/^    uint32_t bytes;$/;"	m	struct:py_mjpeg_obj	file:
bytesPerPixel	src/img/dmtx.c	/^   int             bytesPerPixel;$/;"	m	struct:DmtxImage_struct	file:
c	src/img/apriltag.c	/^    double c[2];$/;"	m	struct:apriltag_detection	file:
c	src/img/qrcode.c	/^    float               c[QUIRC_PERSPECTIVE_PARAMS];$/;"	m	struct:quirc_capstone	file:
c	src/img/qrcode.c	/^    float               c[QUIRC_PERSPECTIVE_PARAMS];$/;"	m	struct:quirc_grid	file:
c	zbar/isaac.h	/^  unsigned c;$/;"	m	struct:isaac_ctx
c	zbar/qrdec.c	/^  qr_finder_center  *c;$/;"	m	struct:qr_finder	file:
c39_check_width	src/img/zbar.c	/^c39_check_width (unsigned ref,$/;"	f	file:
c93_check_width	src/img/zbar.c	/^c93_check_width (unsigned cur,$/;"	f	file:
c93_decode6	src/img/zbar.c	/^c93_decode6 (zbar_decoder_t *dcode)$/;"	f	file:
c93_postprocess	src/img/zbar.c	/^c93_postprocess (zbar_decoder_t *dcode)$/;"	f	file:
cache	src/img/dmtx.c	/^   unsigned char  *cache;$/;"	m	struct:DmtxDecode_struct	file:
cache	src/img/zbar.c	/^    zbar_symbol_t *cache;       \/* inter-image result cache entries *\/$/;"	m	struct:zbar_image_scanner_s	file:
cache	zbar/img_scanner.c	/^    zbar_symbol_t *cache;       \/* inter-image result cache entries *\/$/;"	m	struct:zbar_image_scanner_s	file:
cache_count	src/img/zbar.c	/^    int cache_count;            \/* cache state *\/$/;"	m	struct:zbar_symbol_s	file:
cache_count	zbar/symbol.h	/^    int cache_count;            \/* cache state *\/$/;"	m	struct:zbar_symbol_s
cache_lookup	src/img/zbar.c	/^static inline zbar_symbol_t *cache_lookup (zbar_image_scanner_t *iscn,$/;"	f	file:
cache_lookup	zbar/img_scanner.c	/^static inline zbar_symbol_t *cache_lookup (zbar_image_scanner_t *iscn,$/;"	f	file:
cache_sym	src/img/zbar.c	/^static inline void cache_sym (zbar_image_scanner_t *iscn,$/;"	f	file:
cache_sym	zbar/img_scanner.c	/^static inline void cache_sym (zbar_image_scanner_t *iscn,$/;"	f	file:
calc	pybind_test/func.cpp	/^void calc(struct student& tyh){  $/;"	f
calc_check	src/img/zbar.c	/^static inline unsigned char calc_check (unsigned char c)$/;"	f	file:
calc_s	src/img/zbar.c	/^static inline unsigned calc_s (const zbar_decoder_t *dcode,$/;"	f	file:
calc_s	zbar/decoder.h	/^static inline unsigned calc_s (const zbar_decoder_t *dcode,$/;"	f
calc_thresh	src/img/zbar.c	/^static inline unsigned calc_thresh (zbar_scanner_t *scn)$/;"	f	file:
calc_thresh	zbar/scanner.c	/^static inline unsigned calc_thresh (zbar_scanner_t *scn)$/;"	f	file:
calc_value4	src/img/zbar.c	/^calc_value4 (unsigned sig,$/;"	f	file:
calloc	src/img/apriltag.c	51;"	d	file:
calloc	src/img/dmtx.c	22;"	d	file:
calloc	src/img/lsd.c	24;"	d	file:
calloc	src/img/zbar.c	20;"	d	file:
cambus_init	src/cambus.c	/^int cambus_init(uint8_t reg_wid, int8_t i2c, int8_t pin_clk, int8_t pin_sda, uint8_t gpio_clk, uint8_t gpio_sda)$/;"	f
cambus_read16_id	src/cambus.c	/^int cambus_read16_id(uint8_t addr, uint16_t *manuf_id, uint16_t *device_id)$/;"	f
cambus_read_id	src/cambus.c	/^int cambus_read_id(uint8_t addr, uint16_t *manuf_id, uint16_t *device_id)$/;"	f
cambus_readb	src/cambus.c	/^int cambus_readb(uint8_t slv_addr, uint16_t reg_addr, uint8_t *reg_data)$/;"	f
cambus_readw	src/cambus.c	/^int cambus_readw(uint8_t slv_addr, uint16_t reg_addr, uint16_t *reg_data)$/;"	f
cambus_readw2	src/cambus.c	/^int cambus_readw2(uint8_t slv_addr, uint16_t reg_addr, uint16_t *reg_data)$/;"	f
cambus_reg_width	src/cambus.c	/^uint8_t cambus_reg_width()$/;"	f
cambus_scan	src/cambus.c	/^int cambus_scan()$/;"	f
cambus_scan_gc0328	src/cambus.c	/^int cambus_scan_gc0328(void)$/;"	f
cambus_scan_gc2145	src/cambus.c	/^int cambus_scan_gc2145(void)$/;"	f
cambus_scan_mt9d111	src/cambus.c	/^int cambus_scan_mt9d111(void)$/;"	f
cambus_set_writeb_delay	src/cambus.c	/^void cambus_set_writeb_delay(uint32_t delay)$/;"	f
cambus_writeb	src/cambus.c	/^int cambus_writeb(uint8_t slv_addr, uint16_t reg_addr, uint8_t reg_data)$/;"	f
cambus_writew	src/cambus.c	/^int cambus_writew(uint8_t slv_addr, uint16_t reg_addr, uint16_t reg_data)$/;"	f
cambus_writew2	src/cambus.c	/^int cambus_writew2(uint8_t slv_addr, uint16_t reg_addr, uint16_t reg_data)$/;"	f
capacity	src/img/dmtx.c	/^   int capacity;$/;"	m	struct:DmtxByteList_struct	file:
capacity	src/img/include/imlib.h	/^    uint16_t capacity, padding;$/;"	m	struct:find_datamatrices_list_lnk_data
capacity	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;$/;"	m	struct:py_datamatrix_obj	file:
caps	src/img/qrcode.c	/^    int                 caps[3];$/;"	m	struct:quirc_grid	file:
capstone	src/img/qrcode.c	/^    int                 capstone;$/;"	m	struct:quirc_region	file:
capstones	src/img/qrcode.c	/^    struct quirc_capstone   capstones[QUIRC_MAX_CAPSTONES];$/;"	m	struct:quirc	typeref:struct:quirc::quirc_capstone	file:
cascade	src/img/include/imlib.h	/^typedef struct cascade {$/;"	s
cascade_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) cascade_t;$/;"	t	typeref:struct:cascade
cbrt	src/img/apriltag.c	72;"	d	file:
cbrt	src/img/dmtx.c	43;"	d	file:
cbrtf	src/img/apriltag.c	73;"	d	file:
cbrtf	src/img/dmtx.c	44;"	d	file:
ceil	src/img/apriltag.c	62;"	d	file:
ceil	src/img/dmtx.c	33;"	d	file:
ceil	src/img/lsd.c	34;"	d	file:
ceilf	src/img/apriltag.c	63;"	d	file:
ceilf	src/img/dmtx.c	34;"	d	file:
cell_bitmap	src/img/qrcode.c	/^    uint8_t             cell_bitmap[QUIRC_MAX_BITMAP];$/;"	m	struct:quirc_code	file:
cell_limits	zbar/qrdec.c	/^  int             cell_limits[6];$/;"	m	struct:qr_sampling_grid	file:
cells	zbar/qrdec.c	/^  qr_hom_cell    *cells[6];$/;"	m	struct:qr_sampling_grid	file:
center	src/img/qrcode.c	/^    struct quirc_point  center;$/;"	m	struct:quirc_capstone	typeref:struct:quirc_capstone::quirc_point	file:
centroid	src/img/include/imlib.h	/^    point_t centroid;$/;"	m	struct:find_apriltags_list_lnk_data
centroid	src/img/include/imlib.h	/^    point_t centroid;$/;"	m	struct:find_blobs_list_lnk_data
channelCount	src/img/dmtx.c	/^   int             channelCount;$/;"	m	struct:DmtxImage_struct	file:
channelStart	src/img/dmtx.c	/^   int             channelStart[4];$/;"	m	struct:DmtxImage_struct	file:
char39_s	src/img/zbar.c	/^typedef struct char39_s {$/;"	s	file:
char39_t	src/img/zbar.c	/^}__attribute__((aligned(8))) char39_t;$/;"	t	typeref:struct:char39_s	file:
character	src/img/zbar.c	/^    int character : 12;         \/* character position in symbol *\/$/;"	m	struct:codabar_decoder_s	file:
character	src/img/zbar.c	/^    int character : 12;         \/* character position in symbol *\/$/;"	m	struct:code128_decoder_s	file:
character	src/img/zbar.c	/^    int character : 12;         \/* character position in symbol *\/$/;"	m	struct:code39_decoder_s	file:
character	src/img/zbar.c	/^    int character : 12;         \/* character position in symbol *\/$/;"	m	struct:code93_decoder_s	file:
character	src/img/zbar.c	/^    int character : 12;         \/* character position in symbol *\/$/;"	m	struct:i25_decoder_s	file:
character	src/img/zbar.c	/^    int character : 12;         \/* character position in symbol *\/$/;"	m	struct:pdf417_decoder_s	file:
characters	src/img/zbar.c	/^static const unsigned char characters[NUM_CHARS] = {$/;"	v	file:
chars	src/img/zbar.c	/^    signed char chars[16];      \/* outstanding character indices *\/$/;"	m	struct:databar_decoder_s	file:
check	src/img/zbar.c	/^    unsigned check : 8;         \/* bar checksum *\/$/;"	m	struct:databar_segment_s	file:
checkHuffTables	src/img/picojpeg.c	/^static uint8 checkHuffTables(void)$/;"	f	file:
checkQuantTables	src/img/picojpeg.c	/^static uint8 checkQuantTables(void)$/;"	f	file:
check_rotation	src/py/py_lcd.c	/^STATIC bool check_rotation(mp_int_t r)$/;"	f
check_sha256	src/ide_dbg.c	/^int check_sha256(uint8_t* hash, uint8_t* data, size_t data_len)$/;"	f
check_stop	src/img/zbar.c	/^check_stop (zbar_decoder_t *dcode)$/;"	f	file:
check_width	src/img/zbar.c	/^static inline int check_width (unsigned w0,$/;"	f	file:
chip_id	src/include/sensor.h	/^    uint16_t chip_id;           \/\/ Sensor ID.$/;"	m	struct:_sensor
chk	src/img/zbar.c	/^    unsigned char chk, rev, fwd;$/;"	m	struct:char39_s	file:
choice_dev	src/include/sensor.h	/^    uint8_t choice_dev;             \/\/ choice sensor device.$/;"	m	struct:_sensor
clamp	src/img/picojpeg.c	/^static PJPG_INLINE uint8 clamp(int16 s)$/;"	f	file:
cleanup	zbar/image.h	/^    zbar_image_cleanup_handler_t *cleanup;$/;"	m	struct:zbar_image_s
clines	zbar/qrdec.c	/^    int nlines, clines;$/;"	m	struct:qr_finder_lines	file:
cluster	src/img/apriltag.c	/^    zarray_t *cluster;$/;"	m	struct:uint32_zarray_entry	file:
cluster	src/img/include/imlib.h	/^typedef struct cluster {$/;"	s
cluster_alloc	src/img/kmeans.c	/^static cluster_t *cluster_alloc(int cx, int cy)$/;"	f	file:
cluster_dist_t	src/img/include/imlib.h	/^typedef float (*cluster_dist_t)(int cx, int cy, void *obj);$/;"	t
cluster_free	src/img/kmeans.c	/^static void cluster_free(void *c)$/;"	f	file:
cluster_points	src/img/kmeans.c	/^static void cluster_points(array_t *clusters, array_t *points, cluster_dist_t dist_func)$/;"	f	file:
cluster_reset	src/img/kmeans.c	/^static void cluster_reset(array_t *clusters, array_t *points)$/;"	f	file:
cluster_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) cluster_t;$/;"	t	typeref:struct:cluster
cluster_update	src/img/kmeans.c	/^static int cluster_update(array_t *clusters)$/;"	f	file:
cmd	src/ide_dbg.c	/^static enum usbdbg_cmd cmd;$/;"	v	typeref:enum:usbdbg_cmd	file:
cmd_a16_d8_t	src/ov3660.c	/^}cmd_a16_d8_t;$/;"	t	typeref:struct:__anon55	file:
cmos_href	src/sensor.c	/^    uint8_t cmos_href;$/;"	m	struct:sensor_config_t	file:
cmos_pclk	src/sensor.c	/^    uint8_t cmos_pclk;$/;"	m	struct:sensor_config_t	file:
cmos_pwdn	src/sensor.c	/^    uint8_t cmos_pwdn;$/;"	m	struct:sensor_config_t	file:
cmos_rst	src/sensor.c	/^    uint8_t cmos_rst;$/;"	m	struct:sensor_config_t	file:
cmos_vsync	src/sensor.c	/^    uint8_t cmos_vsync;$/;"	m	struct:sensor_config_t	file:
cmos_xclk	src/sensor.c	/^    uint8_t cmos_xclk;$/;"	m	struct:sensor_config_t	file:
cmp	zbar/image.h	/^        uint32_t cmp;                   \/* quick compare equivalent formats *\/$/;"	m	union:zbar_format_def_s::__anon62
cmpswp	src/img/fsort.c	/^static void cmpswp(int *a, int *b)$/;"	f	file:
codabar	src/img/zbar.c	/^    codabar_decoder_t codabar;          \/* Codabar decode state *\/$/;"	m	struct:zbar_decoder_s	file:
codabar_characters	src/img/zbar.c	/^static const unsigned char codabar_characters[20] =$/;"	v	file:
codabar_check_width	src/img/zbar.c	/^codabar_check_width (unsigned ref,$/;"	f	file:
codabar_checksum	src/img/zbar.c	/^codabar_checksum (zbar_decoder_t *dcode,$/;"	f	file:
codabar_decode7	src/img/zbar.c	/^codabar_decode7 (zbar_decoder_t *dcode)$/;"	f	file:
codabar_decode_start	src/img/zbar.c	/^codabar_decode_start (zbar_decoder_t *dcode)$/;"	f	file:
codabar_decoder_s	src/img/zbar.c	/^typedef struct codabar_decoder_s {$/;"	s	file:
codabar_decoder_t	src/img/zbar.c	/^}__attribute__((aligned(8))) codabar_decoder_t;$/;"	t	typeref:struct:codabar_decoder_s	file:
codabar_hi	src/img/zbar.c	/^static const unsigned char codabar_hi[8] = {$/;"	v	file:
codabar_lo	src/img/zbar.c	/^static const signed char codabar_lo[12] = {$/;"	v	file:
codabar_postprocess	src/img/zbar.c	/^codabar_postprocess (zbar_decoder_t *dcode)$/;"	f	file:
codabar_reset	src/img/zbar.c	/^static inline void codabar_reset (codabar_decoder_t *codabar)$/;"	f	file:
code	src/img/dmtx.c	/^   unsigned char  *code;          \/* Pointer to internal storage of code words (data and error) *\/$/;"	m	struct:DmtxMessage_struct	file:
code	src/img/include/imlib.h	/^    uint16_t code, count;$/;"	m	struct:find_blobs_list_lnk_data
code	src/py/py_image.c	/^    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count;$/;"	m	struct:py_blob_obj	file:
code128	src/img/zbar.c	/^    code128_decoder_t code128;          \/* Code 128 decode state *\/$/;"	m	struct:zbar_decoder_s	file:
code128	zbar/decoder.h	/^    code128_decoder_t code128;          \/* Code 128 decode state *\/$/;"	m	struct:zbar_decoder_s
code128_char_e	src/img/zbar.c	/^typedef enum code128_char_e {$/;"	g	file:
code128_char_t	src/img/zbar.c	/^} __attribute__((aligned(8)))code128_char_t;$/;"	t	typeref:enum:code128_char_e	file:
code128_decoder_s	src/img/zbar.c	/^typedef struct code128_decoder_s {$/;"	s	file:
code128_decoder_t	src/img/zbar.c	/^} __attribute__((aligned(8)))code128_decoder_t;$/;"	t	typeref:struct:code128_decoder_s	file:
code128_reset	src/img/zbar.c	/^static inline void code128_reset (code128_decoder_t *dcode128)$/;"	f	file:
code39	src/img/zbar.c	/^    code39_decoder_t code39;            \/* Code 39 decode state *\/$/;"	m	struct:zbar_decoder_s	file:
code39	zbar/decoder.h	/^    code39_decoder_t code39;            \/* Code 39 decode state *\/$/;"	m	struct:zbar_decoder_s
code39_characters	src/img/zbar.c	/^static const unsigned char code39_characters[NUM_CHARS] =$/;"	v	file:
code39_decode1	src/img/zbar.c	/^static inline unsigned char code39_decode1 (unsigned char enc,$/;"	f	file:
code39_decode9	src/img/zbar.c	/^static inline signed char code39_decode9 (zbar_decoder_t *dcode)$/;"	f	file:
code39_decode_start	src/img/zbar.c	/^static inline signed char code39_decode_start (zbar_decoder_t *dcode)$/;"	f	file:
code39_decoder_s	src/img/zbar.c	/^typedef struct code39_decoder_s {$/;"	s	file:
code39_decoder_t	src/img/zbar.c	/^} __attribute__((aligned(8)))code39_decoder_t;$/;"	t	typeref:struct:code39_decoder_s	file:
code39_encodings	src/img/zbar.c	/^static const char39_t code39_encodings[NUM_CHARS] = {$/;"	v	file:
code39_hi	src/img/zbar.c	/^static const unsigned char code39_hi[32] = {$/;"	v	file:
code39_postprocess	src/img/zbar.c	/^static inline int code39_postprocess (zbar_decoder_t *dcode)$/;"	f	file:
code39_reset	src/img/zbar.c	/^static inline void code39_reset (code39_decoder_t *dcode39)$/;"	f	file:
code93	src/img/zbar.c	/^    code93_decoder_t code93;            \/* Code 93 decode state *\/$/;"	m	struct:zbar_decoder_s	file:
code93_decoder_s	src/img/zbar.c	/^typedef struct code93_decoder_s {$/;"	s	file:
code93_decoder_t	src/img/zbar.c	/^}__attribute__((aligned(8))) code93_decoder_t;$/;"	t	typeref:struct:code93_decoder_s	file:
code93_hash	src/img/zbar.c	/^static const signed char code93_hash[0x40] = {$/;"	v	file:
code93_reset	src/img/zbar.c	/^static inline void code93_reset (code93_decoder_t *dcode93)$/;"	f	file:
codeSize	src/img/dmtx.c	/^   size_t          codeSize;      \/* Size of encoded data (data words + error words) *\/$/;"	m	struct:DmtxMessage_struct	file:
codes	src/img/apriltag.c	/^    uint64_t codes[];$/;"	m	struct:apriltag_family	file:
codestream_ecc	src/img/qrcode.c	/^static quirc_decode_error_t codestream_ecc(struct quirc_data *data,$/;"	f	file:
color	src/img/zbar.c	/^    unsigned color : 1;         \/* finder coloring *\/$/;"	m	struct:databar_segment_s	file:
color	src/py/py_gif.c	/^    bool color;$/;"	m	struct:py_gif_obj	file:
color_similarity	src/img/selective_search.c	/^static inline float color_similarity (float * hist1, float * hist2)$/;"	f	file:
color_thresholds_list_lnk_data	src/img/include/imlib.h	/^typedef struct color_thresholds_list_lnk_data$/;"	s
color_thresholds_list_lnk_data_t	src/img/include/imlib.h	/^color_thresholds_list_lnk_data_t;$/;"	t	typeref:struct:color_thresholds_list_lnk_data
columns	src/img/include/imlib.h	/^    uint8_t rows, columns;$/;"	m	struct:find_datamatrices_list_lnk_data
columns	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;$/;"	m	struct:py_datamatrix_obj	file:
comp	src/img/selective_search.c	/^int comp (const void * elem1, const void * elem2) $/;"	f
comp_angle	src/img/orb.c	/^static int comp_angle(image_t *img, kp_t *kp, float *a, float *b)$/;"	f	file:
config	src/img/zbar.c	/^    unsigned config;            \/* config flags *\/$/;"	m	struct:zbar_image_scanner_s	file:
config	src/img/zbar.c	/^    unsigned config;            \/* decoder configuration flags *\/$/;"	m	struct:databar_decoder_s	file:
config	src/img/zbar.c	/^    unsigned config;$/;"	m	struct:codabar_decoder_s	file:
config	src/img/zbar.c	/^    unsigned config;$/;"	m	struct:code128_decoder_s	file:
config	src/img/zbar.c	/^    unsigned config;$/;"	m	struct:code39_decoder_s	file:
config	src/img/zbar.c	/^    unsigned config;$/;"	m	struct:code93_decoder_s	file:
config	src/img/zbar.c	/^    unsigned config;$/;"	m	struct:i25_decoder_s	file:
config	src/img/zbar.c	/^    unsigned config;$/;"	m	struct:pdf417_decoder_s	file:
config	zbar/img_scanner.c	/^    unsigned config;            \/* config flags *\/$/;"	m	struct:zbar_image_scanner_s	file:
config	zbar/qr_finder.h	/^    unsigned config;$/;"	m	struct:qr_finder_s
configASSERT	zbar/zbar.h	26;"	d
config_exp	src/img/zbar.c	/^    unsigned config_exp;$/;"	m	struct:databar_decoder_s	file:
configs	src/img/zbar.c	/^    int configs[NUM_CFGS];      \/* int valued configurations *\/$/;"	m	struct:codabar_decoder_s	file:
configs	src/img/zbar.c	/^    int configs[NUM_CFGS];      \/* int valued configurations *\/$/;"	m	struct:code128_decoder_s	file:
configs	src/img/zbar.c	/^    int configs[NUM_CFGS];      \/* int valued configurations *\/$/;"	m	struct:code39_decoder_s	file:
configs	src/img/zbar.c	/^    int configs[NUM_CFGS];      \/* int valued configurations *\/$/;"	m	struct:code93_decoder_s	file:
configs	src/img/zbar.c	/^    int configs[NUM_CFGS];      \/* int valued configurations *\/$/;"	m	struct:i25_decoder_s	file:
configs	src/img/zbar.c	/^    int configs[NUM_CFGS];      \/* int valued configurations *\/$/;"	m	struct:pdf417_decoder_s	file:
configs	src/img/zbar.c	/^    int configs[NUM_SCN_CFGS];  \/* int valued configurations *\/$/;"	m	struct:zbar_image_scanner_s	file:
configs	src/img/zbar.c	/^    unsigned int configs;       \/* symbology boolean config bitmask *\/$/;"	m	struct:zbar_symbol_s	file:
configs	zbar/img_scanner.c	/^    int configs[NUM_SCN_CFGS];  \/* int valued configurations *\/$/;"	m	struct:zbar_image_scanner_s	file:
contrast_regs	src/gc0328.c	/^static uint8_t contrast_regs[NUM_CONTRAST_LEVELS][2]={$/;"	v	file:
contrast_regs	src/gc2145.c	/^static uint8_t contrast_regs[NUM_CONTRAST_LEVELS][2] = {$/;"	v	file:
contrast_regs	src/ov2640.c	/^static const uint8_t contrast_regs[NUM_CONTRAST_LEVELS + 1][7] = {$/;"	v	file:
contrast_regs	src/ov7740.c	/^static const uint8_t contrast_regs[NUM_CONTRAST_LEVELS][3] = {$/;"	v	file:
conv_data	src/img/conv.c	/^static float conv_data[9*3*3] ={$/;"	v	file:
convertCb	src/img/picojpeg.c	/^static void convertCb(uint8 dstOfs)$/;"	f	file:
convertCr	src/img/picojpeg.c	/^static void convertCr(uint8 dstOfs)$/;"	f	file:
coorlist	src/img/lsd.c	/^struct coorlist$/;"	s	file:
copyY	src/img/picojpeg.c	/^static void copyY(uint8 dstOfs)$/;"	f	file:
corner_detector_t	src/img/include/imlib.h	/^} corner_detector_t;$/;"	t	typeref:enum:corner_detector_type
corner_detector_type	src/img/include/imlib.h	/^typedef enum corner_detector_type {$/;"	g
corner_t	src/img/agast.c	/^} corner_t;$/;"	t	typeref:struct:__anon4	file:
corner_t	src/img/fast.c	/^} __attribute__((aligned(8)))corner_t;$/;"	t	typeref:struct:__anon21	file:
corners	src/img/include/imlib.h	/^    point_t corners[4];$/;"	m	struct:find_apriltags_list_lnk_data
corners	src/img/include/imlib.h	/^    point_t corners[4];$/;"	m	struct:find_barcodes_list_lnk_data
corners	src/img/include/imlib.h	/^    point_t corners[4];$/;"	m	struct:find_datamatrices_list_lnk_data
corners	src/img/include/imlib.h	/^    point_t corners[4];$/;"	m	struct:find_qrcodes_list_lnk_data
corners	src/img/include/imlib.h	/^    point_t corners[4];$/;"	m	struct:find_rects_list_lnk_data
corners	src/img/qrcode.c	/^    struct quirc_point  *corners;$/;"	m	struct:polygon_score_data	typeref:struct:polygon_score_data::	file:
corners	src/img/qrcode.c	/^    struct quirc_point  corners[4];$/;"	m	struct:quirc_capstone	typeref:struct:quirc_capstone::quirc_point	file:
corners	src/img/qrcode.c	/^    struct quirc_point  corners[4];$/;"	m	struct:quirc_code	typeref:struct:quirc_code::quirc_point	file:
corners	src/py/py_image.c	/^    mp_obj_t corners;$/;"	m	struct:py_apriltag_obj	file:
corners	src/py/py_image.c	/^    mp_obj_t corners;$/;"	m	struct:py_barcode_obj	file:
corners	src/py/py_image.c	/^    mp_obj_t corners;$/;"	m	struct:py_datamatrix_obj	file:
corners	src/py/py_image.c	/^    mp_obj_t corners;$/;"	m	struct:py_qrcode_obj	file:
corners	src/py/py_image.c	/^    mp_obj_t corners;$/;"	m	struct:py_rect_obj	file:
correct_block	src/img/qrcode.c	/^static quirc_decode_error_t correct_block(uint8_t *data,$/;"	f	file:
correct_format	src/img/qrcode.c	/^static quirc_decode_error_t correct_format(uint16_t *f_ret)$/;"	f	file:
cos	src/img/apriltag.c	274;"	d	file:
cos	src/img/dmtx.c	53;"	d	file:
cos	src/img/lsd.c	42;"	d	file:
cos_table	src/img/sincos_tab.c	/^const float cos_table[360] = {$/;"	v
count	src/fb_alloc.c	/^    uint8_t count;$/;"	m	struct:__anon1	file:
count	src/img/include/imlib.h	/^    uint16_t code, count;$/;"	m	struct:find_blobs_list_lnk_data
count	src/img/qrcode.c	/^    int                 count;$/;"	m	struct:neighbour_list	file:
count	src/img/qrcode.c	/^    int                 count;$/;"	m	struct:quirc_region	file:
count	src/img/zbar.c	/^    unsigned count : 7;         \/* times encountered *\/$/;"	m	struct:databar_segment_s	file:
count	src/py/py_image.c	/^    mp_obj_t count;$/;"	m	struct:_py_kptmatch_obj_t	file:
count	src/py/py_image.c	/^    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count;$/;"	m	struct:py_blob_obj	file:
cqrdata	zbar/qrdec.h	/^  int           cqrdata;$/;"	m	struct:qr_code_data_list
createWinogradQuant	src/img/picojpeg.c	/^static void createWinogradQuant(int16* pQuant)$/;"	f	file:
critical_rad	src/img/apriltag.c	/^    float critical_rad;$/;"	m	struct:apriltag_quad_thresh_params	file:
crop_h	src/img/zbar.c	/^    unsigned crop_w, crop_h;$/;"	m	struct:zbar_image_s	file:
crop_w	src/img/zbar.c	/^    unsigned crop_w, crop_h;$/;"	m	struct:zbar_image_s	file:
crop_x	src/img/zbar.c	/^    unsigned crop_x, crop_y;    \/* crop rectangle *\/$/;"	m	struct:zbar_image_s	file:
crop_y	src/img/zbar.c	/^    unsigned crop_x, crop_y;    \/* crop rectangle *\/$/;"	m	struct:zbar_image_s	file:
csegs	src/img/zbar.c	/^    unsigned csegs : 8;         \/* allocated segments *\/$/;"	m	struct:databar_decoder_s	file:
cur_edge	src/img/zbar.c	/^    unsigned cur_edge;      \/* interpolated position of tracking edge *\/$/;"	m	struct:zbar_scanner_s	file:
cur_edge	zbar/scanner.c	/^    unsigned cur_edge;      \/* interpolated position of tracking edge *\/$/;"	m	struct:zbar_scanner_s	file:
curr	src/img/picojpeg_util.c	/^   uint     curr;$/;"	m	struct:__anon38	file:
cx	src/img/include/imlib.h	/^    uint16_t cx,cy;$/;"	m	struct:_vector
cx	src/py/py_image.c	/^    mp_obj_t cx, cy;$/;"	m	struct:_py_kptmatch_obj_t	file:
cx	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
cx	src/py/py_image.c	/^    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count;$/;"	m	struct:py_blob_obj	file:
cy	src/img/include/imlib.h	/^    uint16_t cx,cy;$/;"	m	struct:_vector
cy	src/py/py_image.c	/^    mp_obj_t cx, cy;$/;"	m	struct:_py_kptmatch_obj_t	file:
cy	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
cy	src/py/py_image.c	/^    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count;$/;"	m	struct:py_blob_obj	file:
d	src/img/apriltag.c	/^    uint32_t d;$/;"	m	struct:apriltag_family	file:
d	src/img/hog.c	/^    int d;$/;"	m	struct:bin	file:
d_len	src/img/include/omv_fft.h	/^    int d_len;$/;"	m	struct:fft1d_controller
d_pointer	src/img/include/omv_fft.h	/^    uint8_t *d_pointer;$/;"	m	struct:fft1d_controller
data	src/img/apriltag.c	/^    char *data;$/;"	m	struct:zarray	file:
data	src/img/apriltag.c	/^    double data[];$/;"	m	struct:__anon5	file:
data	src/img/apriltag.c	/^    struct ufrec *data;$/;"	m	struct:unionfind	typeref:struct:unionfind::	file:
data	src/img/include/collections.h	/^    char *data;$/;"	m	struct:bitmap
data	src/img/include/collections.h	/^    char *data;$/;"	m	struct:fifo
data	src/img/include/collections.h	/^    char *data;$/;"	m	struct:lifo
data	src/img/include/collections.h	/^    char data[];$/;"	m	struct:list_lnk
data	src/img/include/imdefs.h	/^        uint8_t *data;$/;"	m	union:image::__anon24
data	src/img/include/imdefs.h	/^    uint8_t *data;$/;"	m	struct:image_py
data	src/img/include/imlib.h	/^    uint32_t **data;$/;"	m	struct:__anon28
data	src/img/include/imlib.h	/^    uint32_t *data;$/;"	m	struct:integral_image
data	src/img/include/omv_fft.h	/^    float *data;$/;"	m	struct:fft1d_controller
data	src/img/include/omv_fft.h	/^    float *data;$/;"	m	struct:fft2d_controller
data	src/img/lsd.c	/^  double * data;$/;"	m	struct:image_double_s	file:
data	src/img/lsd.c	/^  int16_t * data;$/;"	m	struct:image_int_s	file:
data	src/img/lsd.c	/^  unsigned char * data;$/;"	m	struct:image_char_s	file:
data	src/img/qrcode.c	/^    uint8_t data[QUIRC_MAX_PAYLOAD];$/;"	m	struct:datastream	file:
data	src/img/zbar.c	/^    char *data;                 \/* symbol data *\/$/;"	m	struct:zbar_symbol_s	file:
data	src/img/zbar.c	/^    const void *data;           \/* image sample data *\/$/;"	m	struct:zbar_image_s	file:
data	src/img/zbar.c	/^    signed short data;          \/* decoded character data *\/$/;"	m	struct:databar_segment_s	file:
data	src/include/array.h	/^    void **data;$/;"	m	struct:__anon45
data	src/ov3660.c	/^    uint8_t  data;$/;"	m	struct:__anon55	file:
data	src/umm_malloc.c	/^    unsigned char data[16];$/;"	m	union:umm_block_t::__anon58	file:
data	zbar/image.h	/^    const void *data;           \/* image sample data *\/$/;"	m	struct:zbar_image_s
data	zbar/qrdec.h	/^    }data;$/;"	m	union:qr_code_data_entry::__anon65	typeref:struct:qr_code_data_entry::__anon65::__anon66
data	zbar/symbol.h	/^    char *data;                 \/* symbol data *\/$/;"	m	struct:zbar_symbol_s
data_alloc	src/img/zbar.c	/^    unsigned int data_alloc;    \/* allocation size of data *\/$/;"	m	struct:zbar_symbol_s	file:
data_alloc	zbar/symbol.h	/^    unsigned int data_alloc;    \/* allocation size of data *\/$/;"	m	struct:zbar_symbol_s
data_bits	src/img/qrcode.c	/^    int     data_bits;$/;"	m	struct:datastream	file:
data_bytes	src/img/qrcode.c	/^    uint16_t                data_bytes;$/;"	m	struct:quirc_version_info	file:
data_len	src/img/include/collections.h	/^    size_t head_ptr, tail_ptr, len, size, data_len;$/;"	m	struct:fifo
data_len	src/img/include/collections.h	/^    size_t len, size, data_len;$/;"	m	struct:lifo
data_len	src/img/include/collections.h	/^    size_t size, data_len;$/;"	m	struct:list
data_type	src/img/include/imlib.h	/^    uint8_t version, ecc_level, mask, data_type;$/;"	m	struct:find_qrcodes_list_lnk_data
data_type	src/img/qrcode.c	/^    int         data_type;$/;"	m	struct:quirc_data	file:
data_type	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;$/;"	m	struct:py_qrcode_obj	file:
databar	src/img/zbar.c	/^    databar_decoder_t databar;          \/* DataBar decode state *\/$/;"	m	struct:zbar_decoder_s	file:
databar_calc_check	src/img/zbar.c	/^databar_calc_check (unsigned sig0,$/;"	f	file:
databar_check_width	src/img/zbar.c	/^databar_check_width (unsigned wf,$/;"	f	file:
databar_decoder_s	src/img/zbar.c	/^typedef struct databar_decoder_s {$/;"	s	file:
databar_decoder_t	src/img/zbar.c	/^} __attribute__((aligned(8)))databar_decoder_t;$/;"	t	typeref:struct:databar_decoder_s	file:
databar_new_scan	src/img/zbar.c	/^static inline void databar_new_scan (databar_decoder_t *db)$/;"	f	file:
databar_postprocess	src/img/zbar.c	/^databar_postprocess (zbar_decoder_t *dcode,$/;"	f	file:
databar_postprocess_exp	src/img/zbar.c	/^databar_postprocess_exp (zbar_decoder_t *dcode,$/;"	f	file:
databar_reset	src/img/zbar.c	/^static inline void databar_reset (databar_decoder_t *db)$/;"	f	file:
databar_segment_s	src/img/zbar.c	/^typedef struct databar_segment_s {$/;"	s	file:
databar_segment_t	src/img/zbar.c	/^}__attribute__((aligned(8))) databar_segment_t;$/;"	t	typeref:struct:databar_segment_s	file:
datalen	src/img/zbar.c	/^    unsigned int datalen;       \/* length of binary symbol data *\/$/;"	m	struct:zbar_symbol_s	file:
datalen	src/img/zbar.c	/^    unsigned long datalen;      \/* allocated\/mapped size of data *\/$/;"	m	struct:zbar_image_s	file:
datalen	zbar/image.h	/^    unsigned long datalen;      \/* allocated\/mapped size of data *\/$/;"	m	struct:zbar_image_s
datalen	zbar/symbol.h	/^    unsigned int datalen;       \/* length of binary symbol data *\/$/;"	m	struct:zbar_symbol_s
datastream	src/img/qrcode.c	/^struct datastream {$/;"	s	file:
dblcmp	src/img/apriltag.c	/^static inline int dblcmp (double d1, double d2)$/;"	f	file:
dbprintf	src/img/zbar.c	23;"	d	file:
dclamp	src/img/apriltag.c	/^static inline double dclamp(double a, double min, double max)$/;"	f	file:
dcode	src/img/zbar.c	/^    zbar_decoder_t *dcode;      \/* associated symbol decoder *\/$/;"	m	struct:zbar_image_scanner_s	file:
dcode	zbar/img_scanner.c	/^    zbar_decoder_t *dcode;      \/* associated symbol decoder *\/$/;"	m	struct:zbar_image_scanner_s	file:
debug_printf	src/include/common.h	23;"	d
debug_printf	src/include/common.h	26;"	d
decision_margin	src/img/apriltag.c	/^    float decision_margin;$/;"	m	struct:apriltag_detection	file:
decision_margin	src/img/include/imlib.h	/^    float goodness, decision_margin;$/;"	m	struct:find_apriltags_list_lnk_data
decision_margin	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
decode10	src/img/zbar.c	/^decode10 (unsigned char *buf,$/;"	f	file:
decode4	src/img/zbar.c	/^static inline signed char decode4 (zbar_decoder_t *dcode)$/;"	f	file:
decode6	src/img/zbar.c	/^static inline signed char decode6 (zbar_decoder_t *dcode)$/;"	f	file:
decodeNextMCU	src/img/picojpeg.c	/^static uint8 decodeNextMCU(void)$/;"	f	file:
decode_abort	src/img/zbar.c	/^decode_abort (zbar_decoder_t *dcode,$/;"	f	file:
decode_alpha	src/img/qrcode.c	/^static quirc_decode_error_t decode_alpha(struct quirc_data *data,$/;"	f	file:
decode_byte	src/img/qrcode.c	/^static quirc_decode_error_t decode_byte(struct quirc_data *data,$/;"	f	file:
decode_char	src/img/zbar.c	/^decode_char (zbar_decoder_t *dcode,$/;"	f	file:
decode_e	src/img/zbar.c	/^static inline int decode_e (unsigned e,$/;"	f	file:
decode_e	zbar/decoder.h	/^static inline int decode_e (unsigned e,$/;"	f
decode_eci	src/img/qrcode.c	/^static quirc_decode_error_t decode_eci(struct quirc_data *data,$/;"	f	file:
decode_finder	src/img/zbar.c	/^decode_finder (zbar_decoder_t *dcode)$/;"	f	file:
decode_hi	src/img/zbar.c	/^static inline signed char decode_hi (int sig)$/;"	f	file:
decode_kanji	src/img/qrcode.c	/^static quirc_decode_error_t decode_kanji(struct quirc_data *data,$/;"	f	file:
decode_lo	src/img/zbar.c	/^static inline signed char decode_lo (int sig)$/;"	f	file:
decode_numeric	src/img/qrcode.c	/^static quirc_decode_error_t decode_numeric(struct quirc_data *data,$/;"	f	file:
decode_pass	src/img/zbar.c	/^static inline zbar_symbol_type_t decode_pass (zbar_decoder_t *dcode,$/;"	f	file:
decode_payload	src/img/qrcode.c	/^static quirc_decode_error_t decode_payload(struct quirc_data *data,$/;"	f	file:
decode_sort3	src/img/zbar.c	/^static inline unsigned decode_sort3 (zbar_decoder_t *dcode,$/;"	f	file:
decode_sortn	src/img/zbar.c	/^static inline unsigned decode_sortn (zbar_decoder_t *dcode,$/;"	f	file:
decode_start	src/img/zbar.c	/^decode_start (zbar_decoder_t *dcode)$/;"	f	file:
decode_status	src/img/apriltag.c	/^    int decode_status;$/;"	m	struct:evaluate_quad_ret	file:
decoder	src/img/zbar.c	/^    zbar_decoder_t *decoder; \/* associated bar width decoder *\/$/;"	m	struct:zbar_scanner_s	file:
decoder	zbar/scanner.c	/^    zbar_decoder_t *decoder; \/* associated bar width decoder *\/$/;"	m	struct:zbar_scanner_s	file:
decoder_dump	zbar/decoder.c	/^static char *decoder_dump = NULL;$/;"	v	file:
decoder_dumplen	zbar/decoder.c	/^static unsigned decoder_dumplen = 0;$/;"	v	file:
decoder_get_configp	src/img/zbar.c	/^decoder_get_configp (const zbar_decoder_t *dcode,$/;"	f	file:
decoder_set_config_bool	src/img/zbar.c	/^static inline int decoder_set_config_bool (zbar_decoder_t *dcode,$/;"	f	file:
decoder_set_config_bool	zbar/decoder.c	/^static inline int decoder_set_config_bool (zbar_decoder_t *dcode,$/;"	f	file:
decoder_set_config_int	src/img/zbar.c	/^static inline int decoder_set_config_int (zbar_decoder_t *dcode,$/;"	f	file:
decoder_set_config_int	zbar/decoder.c	/^static inline int decoder_set_config_int (zbar_decoder_t *dcode,$/;"	f	file:
default_regs	src/include/ov5640_regs.h	/^const uint16_t default_regs[][2]=$/;"	v
default_regs	src/ov7740.c	/^static const uint8_t default_regs[][2] = {$/;"	v	file:
degToRad	src/img/lsd.c	47;"	d	file:
deglitch	src/img/apriltag.c	/^    int deglitch;$/;"	m	struct:apriltag_quad_thresh_params	file:
depart	src/img/dmtx.c	/^   int             depart;$/;"	m	struct:DmtxPointFlow_struct	file:
dequals_mag	src/img/apriltag.c	/^static inline int dequals_mag(double a, double b, double thresh)$/;"	f	file:
desc	src/img/include/imlib.h	/^    uint8_t desc[32];$/;"	m	struct:kp
descriptor_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) descriptor_t;$/;"	t	typeref:enum:descriptor_type
descriptor_type	src/img/include/imlib.h	/^typedef enum descriptor_type {$/;"	g
detail	zbar/error.h	/^    const char *detail;         \/* description *\/$/;"	m	struct:errinfo_s
detection_compare_function	src/img/apriltag.c	/^static inline int detection_compare_function(const void *_a, const void *_b)$/;"	f	file:
devn	src/img/dmtx.c	/^   double          devn;$/;"	m	struct:DmtxBestLine_struct	file:
diff	src/img/selective_search.c	/^static inline float diff(image_t *img, int x1, int y1, int x2, int y2)$/;"	f	file:
digits	src/img/zbar.c	/^static const unsigned char digits[] = {  \/* E1   E2 *\/$/;"	v	file:
dim	src/img/lsd.c	/^  unsigned int dim;$/;"	m	struct:ntuple_list_s	file:
direction	src/img/zbar.c	/^    int direction;                      \/* direction of last decoded data *\/$/;"	m	struct:zbar_decoder_s	file:
direction	src/img/zbar.c	/^    int direction;              \/* scan direction *\/$/;"	m	struct:ean_decoder_s	file:
direction	src/img/zbar.c	/^    unsigned direction : 1;     \/* scan direction: 0=fwd, 1=rev *\/$/;"	m	struct:codabar_decoder_s	file:
direction	src/img/zbar.c	/^    unsigned direction : 1;     \/* scan direction: 0=fwd, 1=rev *\/$/;"	m	struct:code39_decoder_s	file:
direction	src/img/zbar.c	/^    unsigned direction : 1;     \/* scan direction: 0=fwd\/space, 1=rev\/bar *\/$/;"	m	struct:code128_decoder_s	file:
direction	src/img/zbar.c	/^    unsigned direction : 1;     \/* scan direction: 0=fwd\/space, 1=rev\/bar *\/$/;"	m	struct:code93_decoder_s	file:
direction	src/img/zbar.c	/^    unsigned direction : 1;     \/* scan direction: 0=fwd\/space, 1=rev\/bar *\/$/;"	m	struct:i25_decoder_s	file:
direction	src/img/zbar.c	/^    unsigned direction : 1;     \/* scan direction: 0=fwd\/space, 1=rev\/bar *\/$/;"	m	struct:pdf417_decoder_s	file:
dist	src/img/lsd.c	/^static double dist(double x1, double y1, double x2, double y2)$/;"	f	file:
distSq	src/img/dmtx.c	/^   int             distSq;$/;"	m	struct:DmtxBestLine_struct	file:
distance	src/img/filter.c	/^static float distance(int x, int y)$/;"	f	file:
distance	src/img/qrcode.c	/^    float   distance;$/;"	m	struct:neighbour	file:
dmtxBlankEdge	src/img/dmtx.c	/^static const DmtxPointFlow dmtxBlankEdge = { 0, 0, 0, DmtxUndefined, { -1, -1 } };$/;"	v	file:
dmtxByteListBuild	src/img/dmtx.c	/^dmtxByteListBuild(DmtxByte *storage, int capacity)$/;"	f
dmtxByteListClear	src/img/dmtx.c	/^dmtxByteListClear(DmtxByteList *list)$/;"	f
dmtxByteListCopy	src/img/dmtx.c	/^dmtxByteListCopy(DmtxByteList *dst, const DmtxByteList *src, DmtxPassFail *passFail)$/;"	f
dmtxByteListHasCapacity	src/img/dmtx.c	/^dmtxByteListHasCapacity(DmtxByteList *list)$/;"	f
dmtxByteListInit	src/img/dmtx.c	/^dmtxByteListInit(DmtxByteList *list, int length, DmtxByte value, DmtxPassFail *passFail)$/;"	f
dmtxByteListPop	src/img/dmtx.c	/^dmtxByteListPop(DmtxByteList *list, DmtxPassFail *passFail)$/;"	f
dmtxByteListPrint	src/img/dmtx.c	/^dmtxByteListPrint(DmtxByteList *list, char *prefix)$/;"	f
dmtxByteListPush	src/img/dmtx.c	/^dmtxByteListPush(DmtxByteList *list, DmtxByte value, DmtxPassFail *passFail)$/;"	f
dmtxDecodeCreate	src/img/dmtx.c	/^dmtxDecodeCreate(DmtxImage *img, int scale)$/;"	f
dmtxDecodeCreateDiagnostic	src/img/dmtx.c	/^dmtxDecodeCreateDiagnostic(DmtxDecode *dec, int *totalBytes, int *headerBytes, int style)$/;"	f
dmtxDecodeDestroy	src/img/dmtx.c	/^dmtxDecodeDestroy(DmtxDecode **dec)$/;"	f
dmtxDecodeGetCache	src/img/dmtx.c	/^dmtxDecodeGetCache(DmtxDecode *dec, int x, int y)$/;"	f
dmtxDecodeGetPixelValue	src/img/dmtx.c	/^dmtxDecodeGetPixelValue(DmtxDecode *dec, int x, int y, int channel, int *value)$/;"	f
dmtxDecodeGetProp	src/img/dmtx.c	/^dmtxDecodeGetProp(DmtxDecode *dec, int prop)$/;"	f
dmtxDecodeMatrixRegion	src/img/dmtx.c	/^dmtxDecodeMatrixRegion(DmtxDecode *dec, DmtxRegion *reg, int fix)$/;"	f
dmtxDecodeMosaicRegion	src/img/dmtx.c	/^dmtxDecodeMosaicRegion(DmtxDecode *dec, DmtxRegion *reg, int fix)$/;"	f
dmtxDecodeSetProp	src/img/dmtx.c	/^dmtxDecodeSetProp(DmtxDecode *dec, int prop, int value)$/;"	f
dmtxDistanceAlongRay2	src/img/dmtx.c	/^dmtxDistanceAlongRay2(const DmtxRay2 *r, const DmtxVector2 *q)$/;"	f
dmtxDistanceFromRay2	src/img/dmtx.c	/^dmtxDistanceFromRay2(const DmtxRay2 *r, const DmtxVector2 *q)$/;"	f
dmtxGetBlockDataSize	src/img/dmtx.c	/^dmtxGetBlockDataSize(int sizeIdx, int blockIdx)$/;"	f
dmtxGetSymbolAttribute	src/img/dmtx.c	/^dmtxGetSymbolAttribute(int attribute, int sizeIdx)$/;"	f
dmtxImageContainsFloat	src/img/dmtx.c	/^dmtxImageContainsFloat(DmtxImage *img, double x, double y)$/;"	f
dmtxImageContainsInt	src/img/dmtx.c	/^dmtxImageContainsInt(DmtxImage *img, int margin, int x, int y)$/;"	f
dmtxImageCreate	src/img/dmtx.c	/^dmtxImageCreate(unsigned char *pxl, int width, int height, int pack)$/;"	f
dmtxImageDestroy	src/img/dmtx.c	/^dmtxImageDestroy(DmtxImage **img)$/;"	f
dmtxImageGetByteOffset	src/img/dmtx.c	/^dmtxImageGetByteOffset(DmtxImage *img, int x, int y)$/;"	f
dmtxImageGetPixelValue	src/img/dmtx.c	/^dmtxImageGetPixelValue(DmtxImage *img, int x, int y, int channel, int *value)$/;"	f
dmtxImageGetProp	src/img/dmtx.c	/^dmtxImageGetProp(DmtxImage *img, int prop)$/;"	f
dmtxImageSetChannel	src/img/dmtx.c	/^dmtxImageSetChannel(DmtxImage *img, int channelStart, int bitsPerChannel)$/;"	f
dmtxImageSetPixelValue	src/img/dmtx.c	/^dmtxImageSetPixelValue(DmtxImage *img, int x, int y, int channel, int value)$/;"	f
dmtxImageSetProp	src/img/dmtx.c	/^dmtxImageSetProp(DmtxImage *img, int prop, int value)$/;"	f
dmtxMatrix3Copy	src/img/dmtx.c	/^dmtxMatrix3Copy(DmtxMatrix3 m0, DmtxMatrix3 m1)$/;"	f
dmtxMatrix3Identity	src/img/dmtx.c	/^dmtxMatrix3Identity(DmtxMatrix3 m)$/;"	f
dmtxMatrix3LineSkewSide	src/img/dmtx.c	/^dmtxMatrix3LineSkewSide(DmtxMatrix3 m, double b0, double b1, double sz)$/;"	f
dmtxMatrix3LineSkewSideInv	src/img/dmtx.c	/^dmtxMatrix3LineSkewSideInv(DmtxMatrix3 m, double b0, double b1, double sz)$/;"	f
dmtxMatrix3LineSkewTop	src/img/dmtx.c	/^dmtxMatrix3LineSkewTop(DmtxMatrix3 m, double b0, double b1, double sz)$/;"	f
dmtxMatrix3LineSkewTopInv	src/img/dmtx.c	/^dmtxMatrix3LineSkewTopInv(DmtxMatrix3 m, double b0, double b1, double sz)$/;"	f
dmtxMatrix3Multiply	src/img/dmtx.c	/^dmtxMatrix3Multiply(DmtxMatrix3 mOut, DmtxMatrix3 m0, DmtxMatrix3 m1)$/;"	f
dmtxMatrix3MultiplyBy	src/img/dmtx.c	/^dmtxMatrix3MultiplyBy(DmtxMatrix3 m0, DmtxMatrix3 m1)$/;"	f
dmtxMatrix3Print	src/img/dmtx.c	/^dmtxMatrix3Print(DmtxMatrix3 m)$/;"	f
dmtxMatrix3Rotate	src/img/dmtx.c	/^dmtxMatrix3Rotate(DmtxMatrix3 m, double angle)$/;"	f
dmtxMatrix3Scale	src/img/dmtx.c	/^dmtxMatrix3Scale(DmtxMatrix3 m, double sx, double sy)$/;"	f
dmtxMatrix3Shear	src/img/dmtx.c	/^dmtxMatrix3Shear(DmtxMatrix3 m, double shx, double shy)$/;"	f
dmtxMatrix3Translate	src/img/dmtx.c	/^void dmtxMatrix3Translate(DmtxMatrix3 m, double tx, double ty)$/;"	f
dmtxMatrix3VMultiply	src/img/dmtx.c	/^dmtxMatrix3VMultiply(DmtxVector2 *vOut, DmtxVector2 *vIn, DmtxMatrix3 m)$/;"	f
dmtxMatrix3VMultiplyBy	src/img/dmtx.c	/^dmtxMatrix3VMultiplyBy(DmtxVector2 *v, DmtxMatrix3 m)$/;"	f
dmtxMessageCreate	src/img/dmtx.c	/^dmtxMessageCreate(int sizeIdx, int symbolFormat)$/;"	f
dmtxMessageDestroy	src/img/dmtx.c	/^dmtxMessageDestroy(DmtxMessage **msg)$/;"	f
dmtxNeighborNone	src/img/dmtx.c	/^static const int dmtxNeighborNone = 8;$/;"	v	file:
dmtxPatternX	src/img/dmtx.c	/^static const int dmtxPatternX[] = { -1,  0,  1,  1,  1,  0, -1, -1 };$/;"	v	file:
dmtxPatternY	src/img/dmtx.c	/^static const int dmtxPatternY[] = { -1, -1, -1,  0,  1,  1,  1,  0 };$/;"	v	file:
dmtxPointAlongRay2	src/img/dmtx.c	/^dmtxPointAlongRay2(DmtxVector2 *point, const DmtxRay2 *r, double t)$/;"	f
dmtxRay2Intersect	src/img/dmtx.c	/^dmtxRay2Intersect(DmtxVector2 *point, const DmtxRay2 *p0, const DmtxRay2 *p1)$/;"	f
dmtxRegionCreate	src/img/dmtx.c	/^dmtxRegionCreate(DmtxRegion *reg)$/;"	f
dmtxRegionDestroy	src/img/dmtx.c	/^dmtxRegionDestroy(DmtxRegion **reg)$/;"	f
dmtxRegionFindNext	src/img/dmtx.c	/^dmtxRegionFindNext(DmtxDecode *dec, int max_iterations, int *current_iterations)$/;"	f
dmtxRegionScanPixel	src/img/dmtx.c	/^dmtxRegionScanPixel(DmtxDecode *dec, int x, int y)$/;"	f
dmtxRegionUpdateCorners	src/img/dmtx.c	/^dmtxRegionUpdateCorners(DmtxDecode *dec, DmtxRegion *reg, DmtxVector2 p00,$/;"	f
dmtxRegionUpdateXfrms	src/img/dmtx.c	/^dmtxRegionUpdateXfrms(DmtxDecode *dec, DmtxRegion *reg)$/;"	f
dmtxSymbolModuleStatus	src/img/dmtx.c	/^dmtxSymbolModuleStatus(DmtxMessage *message, int sizeIdx, int symbolRow, int symbolCol)$/;"	f
dmtxVector2Add	src/img/dmtx.c	/^dmtxVector2Add(DmtxVector2 *vOut, const DmtxVector2 *v1, const DmtxVector2 *v2)$/;"	f
dmtxVector2AddTo	src/img/dmtx.c	/^dmtxVector2AddTo(DmtxVector2 *v1, const DmtxVector2 *v2)$/;"	f
dmtxVector2Cross	src/img/dmtx.c	/^dmtxVector2Cross(const DmtxVector2 *v1, const DmtxVector2 *v2)$/;"	f
dmtxVector2Dot	src/img/dmtx.c	/^dmtxVector2Dot(const DmtxVector2 *v1, const DmtxVector2 *v2)$/;"	f
dmtxVector2Mag	src/img/dmtx.c	/^dmtxVector2Mag(const DmtxVector2 *v)$/;"	f
dmtxVector2Norm	src/img/dmtx.c	/^dmtxVector2Norm(DmtxVector2 *v)$/;"	f
dmtxVector2Scale	src/img/dmtx.c	/^dmtxVector2Scale(DmtxVector2 *vOut, const DmtxVector2 *v, double s)$/;"	f
dmtxVector2ScaleBy	src/img/dmtx.c	/^dmtxVector2ScaleBy(DmtxVector2 *v, double s)$/;"	f
dmtxVector2Sub	src/img/dmtx.c	/^dmtxVector2Sub(DmtxVector2 *vOut, const DmtxVector2 *v1, const DmtxVector2 *v2)$/;"	f
dmtxVector2SubFrom	src/img/dmtx.c	/^dmtxVector2SubFrom(DmtxVector2 *v1, const DmtxVector2 *v2)$/;"	f
dmtxVersion	src/img/dmtx.c	/^dmtxVersion(void)$/;"	f
do_fft	src/img/fft.c	/^static void do_fft(float *inout, int N_pow2, int stride)$/;"	f	file:
do_ifft	src/img/fft.c	/^static void do_ifft(float *inout, int N_pow2, int stride)$/;"	f	file:
do_unionfind_line	src/img/apriltag.c	/^static void do_unionfind_line(unionfind_t *uf, image_u8_t *im, int h, int w, int s, int y)$/;"	f	file:
double	src/img/apriltag.c	53;"	d	file:
double	src/img/dmtx.c	24;"	d	file:
double	src/img/lsd.c	25;"	d	file:
double_buff	src/include/framebuffer.h	/^    bool double_buff;$/;"	m	struct:framebuffer
double_buff	src/include/sensor.h	/^    bool     double_buff;$/;"	m	struct:_sensor
double_equal	src/img/lsd.c	/^static int double_equal(double a, double b)$/;"	f	file:
double_sort_up	src/img/apriltag.c	/^static int double_sort_up(const void *_a, const void *_b)$/;"	f	file:
dprintf	zbar/debug.h	34;"	d
dprintf	zbar/debug.h	42;"	d
dprintf	zbar/debug.h	46;"	d
dtor	src/include/array.h	/^    array_dtor_t dtor;$/;"	m	struct:__anon45
du	src/img/zbar.c	/^    int dx, dy, du, umin, v;    \/* current scan direction *\/$/;"	m	struct:zbar_image_scanner_s	file:
du	zbar/img_scanner.c	/^    int dx, dy, du, umin, v;    \/* current scan direction *\/$/;"	m	struct:zbar_image_scanner_s	file:
dual_func	src/img/hough.c	/^volatile dual_func_t dual_func;$/;"	v
dual_func_t	src/img/hough.c	/^typedef int (*dual_func_t)(int);$/;"	t	file:
dual_func_t	src/img/jpeg.c	/^typedef int (*dual_func_t)(int);$/;"	t	file:
dual_func_t	src/sensor.c	/^typedef int (*dual_func_t)(int);$/;"	t	file:
dump_stats	src/img/zbar.c	/^static inline void dump_stats (const zbar_image_scanner_t *iscn)$/;"	f	file:
dump_stats	src/img/zbar.c	1558;"	d	file:
dump_stats	zbar/img_scanner.c	/^static inline void dump_stats (const zbar_image_scanner_t *iscn)$/;"	f	file:
dump_stats	zbar/img_scanner.c	82;"	d	file:
dw	src/img/qrcode.c	/^    uint8_t dw; \/* Small data words *\/$/;"	m	struct:quirc_rs_params	file:
dx	src/img/lsd.c	/^  double dx,dy;        \/* (dx,dy) is vector oriented as the line segment *\/$/;"	m	struct:rect	file:
dx	src/img/zbar.c	/^    int dx, dy, du, umin, v;    \/* current scan direction *\/$/;"	m	struct:zbar_image_scanner_s	file:
dx	zbar/img_scanner.c	/^    int dx, dy, du, umin, v;    \/* current scan direction *\/$/;"	m	struct:zbar_image_scanner_s	file:
dy	src/img/lsd.c	/^  double dx,dy;        \/* (dx,dy) is vector oriented as the line segment *\/$/;"	m	struct:rect	file:
dy	src/img/zbar.c	/^    int dx, dy, du, umin, v;    \/* current scan direction *\/$/;"	m	struct:zbar_image_scanner_s	file:
dy	zbar/img_scanner.c	/^    int dx, dy, du, umin, v;    \/* current scan direction *\/$/;"	m	struct:zbar_image_scanner_s	file:
e	src/img/apriltag.c	/^    struct quick_decode_entry e;$/;"	m	struct:evaluate_quad_ret	typeref:struct:evaluate_quad_ret::quick_decode_entry	file:
e	src/img/fmath.c	/^        uint32_t e : 11;$/;"	m	struct:__anon22::__anon23	file:
ean	src/img/zbar.c	/^    ean_decoder_t ean;                  \/* EAN\/UPC parallel decode attempts *\/$/;"	m	struct:zbar_decoder_s	file:
ean	zbar/decoder.h	/^    ean_decoder_t ean;                  \/* EAN\/UPC parallel decode attempts *\/$/;"	m	struct:zbar_decoder_s
ean13_config	src/img/zbar.c	/^    unsigned ean13_config;$/;"	m	struct:ean_decoder_s	file:
ean2_config	src/img/zbar.c	/^    unsigned ean2_config;$/;"	m	struct:ean_decoder_s	file:
ean5_config	src/img/zbar.c	/^    unsigned ean5_config;$/;"	m	struct:ean_decoder_s	file:
ean8_config	src/img/zbar.c	/^    unsigned ean8_config;$/;"	m	struct:ean_decoder_s	file:
ean_config	src/img/zbar.c	/^    unsigned ean_config;$/;"	m	struct:zbar_image_scanner_s	file:
ean_decoder_s	src/img/zbar.c	/^typedef struct ean_decoder_s {$/;"	s	file:
ean_decoder_t	src/img/zbar.c	/^}__attribute__((aligned(8))) ean_decoder_t;$/;"	t	typeref:struct:ean_decoder_s	file:
ean_expand_upce	src/img/zbar.c	/^static inline void ean_expand_upce (ean_decoder_t *ean,$/;"	f	file:
ean_get_config	src/img/zbar.c	/^static inline unsigned ean_get_config (ean_decoder_t *ean,$/;"	f	file:
ean_new_scan	src/img/zbar.c	/^static inline void ean_new_scan (ean_decoder_t *ean)$/;"	f	file:
ean_part_end2	src/img/zbar.c	/^static inline char ean_part_end2 (ean_decoder_t *ean,$/;"	f	file:
ean_part_end4	src/img/zbar.c	/^static inline zbar_symbol_type_t ean_part_end4 (ean_pass_t *pass,$/;"	f	file:
ean_part_end5	src/img/zbar.c	/^static inline char ean_part_end5 (ean_decoder_t *ean,$/;"	f	file:
ean_part_end7	src/img/zbar.c	/^static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,$/;"	f	file:
ean_pass_s	src/img/zbar.c	/^typedef struct ean_pass_s {$/;"	s	file:
ean_pass_t	src/img/zbar.c	/^} __attribute__((aligned(8)))ean_pass_t;$/;"	t	typeref:struct:ean_pass_s	file:
ean_postprocess	src/img/zbar.c	/^static inline void ean_postprocess (zbar_decoder_t *dcode,$/;"	f	file:
ean_reset	src/img/zbar.c	/^static inline void ean_reset (ean_decoder_t *ean)$/;"	f	file:
ean_verify_checksum	src/img/zbar.c	/^static inline signed char ean_verify_checksum (ean_decoder_t *ean,$/;"	f	file:
ecc	src/img/qrcode.c	/^    struct quirc_rs_params  ecc[4];$/;"	m	struct:quirc_version_info	typeref:struct:quirc_version_info::quirc_rs_params	file:
ecc_level	src/img/include/imlib.h	/^    uint8_t version, ecc_level, mask, data_type;$/;"	m	struct:find_qrcodes_list_lnk_data
ecc_level	src/img/qrcode.c	/^    int         ecc_level;$/;"	m	struct:quirc_data	file:
ecc_level	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;$/;"	m	struct:py_qrcode_obj	file:
ecc_level	zbar/qrdec.h	/^  unsigned char       ecc_level;$/;"	m	struct:qr_code_data
eci	src/img/include/imlib.h	/^    uint32_t eci;$/;"	m	struct:find_qrcodes_list_lnk_data
eci	src/img/qrcode.c	/^    uint32_t    eci;$/;"	m	struct:quirc_data	file:
eci	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;$/;"	m	struct:py_qrcode_obj	file:
eci	zbar/qrdec.h	/^    unsigned eci;$/;"	m	union:qr_code_data_entry::__anon65
edge	src/img/selective_search.c	/^} __attribute__((aligned(8)))edge;$/;"	t	typeref:struct:__anon43	file:
edge	zbar/qrdec.c	/^  int      edge;$/;"	m	struct:qr_finder_edge_pt	file:
edgeMax	src/img/dmtx.c	/^   int             edgeMax;$/;"	m	struct:DmtxDecode_struct	file:
edgeMin	src/img/dmtx.c	/^   int             edgeMin;$/;"	m	struct:DmtxDecode_struct	file:
edgeThresh	src/img/dmtx.c	/^   int             edgeThresh;$/;"	m	struct:DmtxDecode_struct	file:
edge_detector_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) edge_detector_t;$/;"	t	typeref:enum:edge_detector_type
edge_detector_type	src/img/include/imlib.h	/^typedef enum edge_detector_type {$/;"	g
edge_pts	zbar/qrdec.c	/^  qr_finder_edge_pt *edge_pts;$/;"	m	struct:qr_finder_center	file:
edge_pts	zbar/qrdec.c	/^  qr_finder_edge_pt *edge_pts[4];$/;"	m	struct:qr_finder	file:
el_sz	src/img/apriltag.c	/^    size_t el_sz; \/\/ size of each element$/;"	m	struct:zarray	file:
element	src/img/zbar.c	/^    unsigned element : 3;       \/* element offset 0-5 *\/$/;"	m	struct:code128_decoder_s	file:
element	src/img/zbar.c	/^    unsigned element : 3;       \/* element offset 0-5 *\/$/;"	m	struct:code93_decoder_s	file:
element	src/img/zbar.c	/^    unsigned element : 3;       \/* element offset 0-7 *\/$/;"	m	struct:pdf417_decoder_s	file:
element	src/img/zbar.c	/^    unsigned element : 4;       \/* element offset 0-7 *\/$/;"	m	struct:codabar_decoder_s	file:
element	src/img/zbar.c	/^    unsigned element : 4;       \/* element offset 0-8 *\/$/;"	m	struct:code39_decoder_s	file:
element	src/img/zbar.c	/^    unsigned element : 4;       \/* element offset 0-8 *\/$/;"	m	struct:i25_decoder_s	file:
eloc_poly	src/img/qrcode.c	/^static void eloc_poly(uint8_t *omega,$/;"	f	file:
elts	src/img/selective_search.c	/^    uni_elt *elts;$/;"	m	struct:__anon42	file:
enable	src/img/zbar.c	/^    signed char enable;$/;"	m	struct:ean_decoder_s	file:
enable_cache	src/img/zbar.c	/^    int enable_cache;           \/* current result cache state *\/$/;"	m	struct:zbar_image_scanner_s	file:
enable_cache	zbar/img_scanner.c	/^    int enable_cache;           \/* current result cache state *\/$/;"	m	struct:zbar_image_scanner_s	file:
enabled	src/include/framebuffer.h	/^    int enabled;$/;"	m	struct:jpegbuffer
enc_list_mtf	zbar/qrdectxt.c	/^static void enc_list_mtf(zbar_iconv_t _enc_list[3],zbar_iconv_t _enc){$/;"	f	file:
encode6	src/img/zbar.c	/^encode6 (zbar_decoder_t *dcode)$/;"	f	file:
endbit	zbar/qrdec.c	/^  int                  endbit;$/;"	m	struct:qr_pack_buf	file:
endbyte	zbar/qrdec.c	/^  int                  endbyte;$/;"	m	struct:qr_pack_buf	file:
enlarge_ntuple_list	src/img/lsd.c	/^static void enlarge_ntuple_list(ntuple_list n_tuple)$/;"	f	file:
entries	src/img/apriltag.c	/^    struct quick_decode_entry *entries;$/;"	m	struct:quick_decode	typeref:struct:quick_decode::	file:
entries	zbar/qrdec.h	/^  qr_code_data_entry *entries;$/;"	m	struct:qr_code_data
eoffs	zbar/qrcode.h	/^  int      eoffs;$/;"	m	struct:qr_finder_line
epoch	src/img/zbar.c	/^    unsigned epoch : 8;         \/* age, in characters scanned *\/$/;"	m	struct:databar_segment_s	file:
epoch	src/img/zbar.c	/^    unsigned epoch : 8;         \/* current scan *\/$/;"	m	struct:databar_decoder_s	file:
err	src/img/apriltag.c	/^    double err;$/;"	m	struct:remove_vertex	file:
err_capture	zbar/error.h	/^static inline int err_capture (const void *container,$/;"	f
err_capture_int	zbar/error.h	/^static inline int err_capture_int (const void *container,$/;"	f
err_capture_num	zbar/error.h	/^static inline int err_capture_num (const void *container,$/;"	f
err_capture_str	zbar/error.h	/^static inline int err_capture_str (const void *container,$/;"	f
err_cleanup	zbar/error.h	/^static inline void err_cleanup (errinfo_t *err)$/;"	f
err_compare_descending	src/img/apriltag.c	/^int err_compare_descending(const void *_a, const void *_b)$/;"	f
err_copy	zbar/error.h	/^static inline int err_copy (void *dst_c,$/;"	f
err_init	zbar/error.h	/^static inline void err_init (errinfo_t *err,$/;"	f
err_str	zbar/error.c	/^static const char  * err_str[] = {$/;"	v	file:
errinfo_s	zbar/error.h	/^typedef struct errinfo_s {$/;"	s
errinfo_t	zbar/error.h	/^} errinfo_t;$/;"	t	typeref:struct:errinfo_s
errmodule_e	zbar/error.h	/^typedef enum errmodule_e {$/;"	g
errmodule_t	zbar/error.h	/^} errmodule_t;$/;"	t	typeref:enum:errmodule_e
errnum	zbar/error.h	/^    int errnum;                 \/* errno for system errors *\/$/;"	m	struct:errinfo_s
error	src/img/dmtx.c	/^   int             error;$/;"	m	struct:DmtxBresLine_struct	file:
error	src/img/lsd.c	20;"	d	file:
error_table	src/img/qrcode.c	/^static const char *const error_table[] = {$/;"	v	file:
errsev_e	zbar/error.h	/^typedef enum errsev_e {$/;"	g
errsev_t	zbar/error.h	/^} errsev_t;$/;"	t	typeref:enum:errsev_e
eval_weak_classifier	src/img/haar.c	/^static int eval_weak_classifier(cascade_t *cascade, point_t pt, int t_idx, int w_idx, int r_idx)$/;"	f	file:
evaluate_quad_ret	src/img/apriltag.c	/^struct evaluate_quad_ret$/;"	s	file:
eversion	zbar/qrdec.c	/^  int                eversion[2];$/;"	m	struct:qr_finder	file:
exchang_data_byte	src/sensor.c	/^int exchang_data_byte(uint8_t *addr, uint32_t length)$/;"	f
exchang_pixel	src/sensor.c	/^int exchang_pixel(uint16_t *addr, uint32_t resoltion)$/;"	f
exp	src/img/apriltag.c	70;"	d	file:
exp	src/img/dmtx.c	41;"	d	file:
exp	src/img/lsd.c	38;"	d	file:
exp	src/img/qrcode.c	/^    const uint8_t   *exp;$/;"	m	struct:galois_field	file:
exp	src/img/zbar.c	/^    unsigned exp : 1;           \/* DataBar expanded finder *\/$/;"	m	struct:databar_segment_s	file:
exp	zbar/rs.h	/^  unsigned char exp[511];$/;"	m	struct:rs_gf256
exp_checksums	src/img/zbar.c	/^static const unsigned char exp_checksums[] = {$/;"	v	file:
exp_sequences	src/img/zbar.c	/^static const unsigned char exp_sequences[] = {$/;"	v	file:
exp_t	src/img/fmath.c	/^}exp_t;$/;"	t	typeref:union:__anon22	file:
expf	src/img/apriltag.c	71;"	d	file:
expf	src/img/dmtx.c	42;"	d	file:
extent	src/img/dmtx.c	/^   int             extent;        \/* Length\/width of cross in pixels *\/$/;"	m	struct:DmtxScanGrid_struct	file:
extent	zbar/qrdec.c	/^  int      extent;$/;"	m	struct:qr_finder_edge_pt	file:
eye_alpha1_array	src/img/include/cascade.h	/^const int16_t eye_alpha1_array[]={-197, 146, 154, 164, 138, -59, 182, -72, 136, -44, 157, -31, 43, -32, 98, -163, -88, -162, 173, 171, 184, 170, 179, 151, 88, -203, -79, -135, 107, 122, -98, -67, 119, 75, 118, 106, -71, -69, 113, -41, 104, 21, 142, 91, 100, -112, 102, 107, -189, -194, 107, 120, 84, -94, -184, 91, 100, -150, -67, -200, 106, -33, 93, -76, 91, -139, 106, -99, 135, 91, 38, 143, 118, -189, -116, 24, 104, 103, 158, -33, -182, 32, -155, -68, -20, 94, -175, 60, -153, -40, -25, -155, -26, 80, -48, 93, 54, 101, 77, -195, 123, -64, 17, 109, -49, 77, -59, 49, 141, -61, 104, -147, 74, -50, -24, 120, -34, -199, 79, 16, -45, 116, -134, -38, 84, 121, -77, 58, 103, -175, -178, 64, 15, 16, -181, 131, 68, -172, 13, 144, -128, 45, 100, -30, -44, -59, 110, 18, 92, 72, 12, -27, -205, 47, 70, 23, -99, 96, 77, 94, 117, 114, 71, -38, -58, 116, -160, 67, -62, -109, -30, 71, 10, -160, 10, 51, 131, -185, 75, 11, 51, 75, -29, -26, -70, 62, -137, -53, 93, -33, -145, -124, -20, 114, -170, 44, -153, 59, -22, 12, -38, -148, -35, -26, 106, 84, 66, -88, -108, 81, 79, -153, -31, 86, -156, 64, 140, 21, 59, 15, -171, -18, -108, 41, -15, -155, -42, 11, -28, 103, 16, -24, -150, -38, -14, 38, 55, -43, -177, 48, 120, -194, 78, 67, -44, 91, 12, -163, 41, 8, 6, 85, -26, -63, 98, -160, 23, -18, 51, -71, 93, 100, 32, 18, 55, 93, -88, -158, -149, -152, -174, -24, 20, 60, -114, 111, 46, 120, 70, -31, 91, -105, -186, 141, -146, -118, -24, 58, -145, 89, -154, -26, 72, 59, 16, -97, -19, 36, 69, -39, -151, 65, 11, 63, -170, 6, -20, 71, -88, 61, -151, 47, -84, 25, 75, -37, -175, -37, -44, -17, 129, 116, -67, 19, -126, -54, -23, 65, -40, -38, 75, 12, -32, 63, 13, -55, 62, 72, 10, -125, -72, -183, -186, -79, 75, -170, -158, 57, -138, -16, -193, 23, 62, -30, -125, -55, -38, 109, 18, 12, -43, -202, -178, -27, 79, 20, -223, -29, 61, -60, -80, -70, -143, 10, 42, -27, -45, -138, 62, 17, -34, -73, -148, 101, 70, 5, -145, -38, -39, -161, 65, -25, 48, -38, 12, 46, -27, 69, -179, -23, 176, 24, 61, -29, -152, -118, -18, -189, -35, -140, -21, 53, -211, 21, 39, -52, -44, -152, 48, 8, -60, 59, 99, 46, -192, -184, -86, -30, -17, -19, 18, -43, 90, 110, 59, -34, -160, 42, -121, 46, -17, 14, -120, -31, 51, -221, 75, 8, 62, 55, 11, 38, -22, 44, 68, 11, -28, -39, 29, -10, -137, 59, -22, -31, -21, 9, -42, -31, 66, -27, -35, -19, -28, -94, -27, -136, -34, 22, 40, -175, 72, -94, -82, -83, -22, 18, 66, -21, 49, -81, -25, 116, -90, 25, 14, 80, 69, 10, -25, -134, 63, 68, 40, 104, 46, 74, -54, -116, 67, -25, 73, -28, -48, -19, 51, 45, 10, -31, 131, -129, 95, -44, -112, -32, -22, -21, -113, -28, -96, 19, -84, -15, -15, -90, 58, -14, -78, 98, -28, -51, -55, 111, -12, -97, 124, -91, 13, 115, -24, -20, -29, 17, -16, -181, 35, -33, 97, -79, 66, -14, 37, 85, -18, 118, -70, 57, 99, 61, -72, 8, 61, 99, 78, -35, 42, -161, -47, -6, -76, 67, -151, 41, -147, 15, -18, 100, 9, 45, -113, -13, 14, -9, 72, -130, -122, 103, -180, 7, -13, 23, 34, -17, 75, -42, -23, 16, 5, 65, 5, 69, -27, -76, -69, -14, 17, 52, -24, 72, -22, -29, 60, 45, 116, -60, 20, -10, 44, 13, -29, -10, 17, 87, 30, 52, -28, -25, 38, 131, -23, 7, -33, -128, -203, 78, 53, -168, -21, 16, 37, 126, 71, -148, -127, 88, 38, 58, -113, 35, -76, -41, -136, -200, -9, -24, 29, 45, 46, 64, 35, 102, -48, 12, -111, 168, 101, 15, -132, 38, -161, -14, 48, -139, -172, -110, -27, 61, -22, 11, -140, -28, 62, -161, 50, -23, 12, -23, 16, 33, 41, 156, -256, 256, 72, -256, 222, 116, 34, 82, -33, -31, 30, -16, 140, 61, -32, 76, 15, 12, 182, -89, 23, -13, 16, 45, 26, -16, 135, 20, -89, 59, 30, -164, 11, 106, 13, 11, 21, -14, 115, 46, -7, -228, -18, 18, 13, 8, 79, -33, 74, 8, 41, -111, 97, -40, -10, -13, 28, 17, 16, 50, 21, -121, -12, -26, -3, -189, -32, -42, 86, 57, 66, 48, 51, 61, -125, 79, -126, 83, -173, 57, 29, -29, -38, 25, -81, -97, -24, 56, 9, 75, 58, -129, 11, -22, -19, -90, -20, 10, 49, -53, 10, 40, -142, -10, 17, 45, 7, -118, -24, 29, -8, -16, -86, 37, -131, 5, 60, 49, -24, -80, -169, 8, 55, 62, -122, -153, 62, -35, -19, -24, -70, 58, 122, -57, 70, -11, 60, 38, -14, 9, -44, 79, -81, 62, -194, -116, 37, -25, 8, 23, -170, -147, 22, 66, -28, 9, -9, -25, -196, -34, 64, -102, 10, -66, 61, -18, 128, 63, 81, -69, 70, -89, 8, 9, 63, -21, -4, -63, 73, 32, 60, -66, -181, -149, -152, 33, -145, 29, -8, -13, -19, 50, -73, 17, 42, 6, 35, 7, 67, 39, 14, -23, 15, 75, -16, -43, 16, -25, 49, 9, -112, 50, 5, 25, 29, 121, -65, 49, 113, -34, -13, -51, 26, 72, -21, 50, -143, 127, 43, -165, 64, -22, 29, -12, -138, 6, -30, -15, -88, 51, -80, 51, -9, -72, -27, 127, 43, 22, 63, 17, -21, 7, -40, -177, -22, 54, 38, -8, 12, 55, -19, -173, 58, 14, 49, -175, 96, 7, -17, 46, -214, 106, -50, 62, -73, 74, 54, 67, 5, 138, -33, -242, -18, -21, -33, -164, 36, 40, -85, 43, -149, 36, 70, 33, -6, -61, -34, -14, -96, -95, 20, -9, 49, 33, -77, 56, -99, -24, -61, 143, 14, -15, 60, 13, -100, -79, -11, -209, 9, -91, 64, -18, -161, -17, -92, 36, 55, 115, -173, -111, -6, 46, -51, 171, -19, 63, -74, -56, -29, 40, 31, -89, 33, 44, -72, 100, -8, -145, -116, 40, -36, 42, 69, 10, 41, -109, -4, 40, 49, 20, 25, -18, -7, 29, -43, 116};$/;"	v
eye_alpha2_array	src/img/include/cascade.h	/^const int16_t eye_alpha2_array[]={174, -125, -80, -39, -52, 123, -151, 151, -58, 162, -43, 190, -167, 211, -53, 33, 58, 33, -128, -91, -46, -70, -50, -56, -98, 40, 90, 90, -100, -64, 81, 83, -38, -64, -33, -45, 68, 61, -36, 109, -46, -204, -30, -98, -76, 49, -59, -58, 32, 22, -45, -36, -55, 62, 16, -42, -30, 22, 54, 20, -35, 129, -35, 52, -39, 26, -87, 61, -44, -57, -167, -37, -27, 14, 24, -140, -31, -41, -18, 95, 13, -79, 20, 37, 145, -34, 13, -45, 19, 76, 107, 18, 107, -86, 137, -41, -72, -33, -52, 25, -33, 62, -168, -33, 74, -50, 60, -72, -24, 55, -32, 24, -43, 70, 103, -22, 78, 14, -38, -185, 59, -46, 41, 108, -44, -18, 40, -52, -34, 20, 12, -41, -170, -137, 14, -22, -45, 18, -142, -18, 22, -57, -25, 108, 57, 42, -25, -147, -29, -31, -206, 86, 11, -45, -32, -109, 22, -63, -57, -45, -33, -26, -39, 102, 55, -32, 21, -37, 42, 23, 77, -31, -189, 12, -183, -49, -15, 12, -30, -178, -40, -29, 77, 104, 31, -34, 16, 41, -23, 64, 13, 14, 103, -16, 12, -43, 14, -30, 92, -161, 48, 11, 50, 64, -42, -53, -40, 35, 34, -42, -34, 22, 98, -25, 12, -36, -15, -113, -35, -126, 11, 113, 17, -46, 136, 13, 49, -147, 59, -15, -114, 77, 11, 45, 125, -48, -30, 42, 10, -38, -14, 8, -22, -23, 39, -19, -151, 8, -38, -192, -183, -18, 136, 53, -37, 30, -141, 142, -53, 35, -19, -28, -61, -112, -36, -21, 23, 12, 11, 10, 8, 77, -90, -30, 14, -17, -36, -15, -24, 53, -19, 17, 9, -13, 12, 12, 66, -26, 12, -21, 11, 59, -25, -29, -108, 15, 85, -43, -23, 50, 10, -24, -124, -24, 9, -186, 76, -75, 53, -49, 31, -63, 28, -127, -33, 85, 25, 79, 54, 126, -19, -23, 41, -138, 15, 36, 91, -36, 53, 68, -27, -183, 61, -34, -133, 32, -29, -27, -188, 45, 61, 22, 24, 46, -56, 21, 13, -51, 17, 158, 13, -113, -47, 94, 27, 47, 74, -26, -164, -185, 60, 11, 10, 93, -29, -119, 9, 84, -45, 63, 47, 42, 28, -148, -64, 100, 69, 12, -33, -180, 56, 34, 9, -20, -34, -205, 10, 48, 49, 9, -27, 77, -35, 55, -164, -35, 62, -30, 10, 79, -10, -73, -28, 62, 12, 13, 99, 10, 48, 12, 81, -31, 8, -143, -69, 51, 54, 12, -40, -175, 28, -35, -14, -45, 6, 8, 18, 57, 80, 104, -88, 39, -21, -14, -27, 67, 11, -42, 12, -36, 93, -114, 12, 52, -32, 7, -21, -198, -29, -35, -139, -38, 65, -36, -20, -120, 52, 40, -56, 137, 11, -26, 78, 45, 82, -174, 106, 103, -51, 93, 76, 124, 74, 18, 81, 18, 58, -122, -45, 9, -25, 20, 19, 22, 81, -103, -30, 79, -38, 22, 65, -13, 20, -55, -103, -20, -19, -152, 60, 11, -24, -23, -40, -16, -35, -20, 28, 13, -24, 53, -19, 55, 36, 75, -27, -30, -139, 164, -28, 29, -37, 122, 34, 119, 94, 132, 23, 100, 31, -104, 28, 143, 133, 27, -41, 123, 27, -23, 79, 39, 36, -19, 150, 23, -18, 27, -146, -21, 80, 92, 56, -94, 98, 9, -59, 58, -17, 21, -26, 122, -44, -42, 145, -23, 33, -38, -16, -29, 33, -131, -33, -20, -18, 48, -40, 10, 34, 156, 18, -20, 10, -32, 9, -77, 75, -12, -125, -28, 13, 95, -94, 148, -15, 9, 9, -12, 7, -135, 84, -55, -35, 85, -17, 31, 54, -92, -207, -17, -215, -19, 58, 16, 17, 93, -73, -25, 50, -17, 54, 42, -23, -27, -10, 19, -73, 122, -25, -82, 37, 136, -69, -14, -38, -67, 83, 81, -50, -11, 88, -212, 52, 23, -1, -20, -32, 12, 92, -181, -42, -6, -19, 9, 12, -17, -36, -23, 14, -37, 19, 35, 10, 6, 182, 55, -46, -31, -29, -23, -44, -12, 38, -110, 10, -8, -11, -83, 9, -32, 8, 98, -25, 10, 5, 11, 49, -26, 52, -99, 9, 44, -20, 6, -26, 50, -86, 51, -68, -32, -27, -16, 0, 0, -39, 11, 0, -22, -66, -24, 67, 53, -59, 105, -10, -24, 49, -24, -107, -161, -10, 18, -63, 144, -93, -29, -51, 77, -10, -63, 14, -23, -47, 7, -110, -12, -97, -110, -63, 88, -10, -27, 170, 6, 72, -77, -100, -130, -16, 37, -17, -122, -29, 11, -14, 31, 117, 89, -42, -78, -71, -27, -63, 8, 109, 43, 236, 7, 33, 25, -39, -49, -39, -42, -31, -33, 26, -29, 13, -16, 6, -32, -68, 65, 42, -56, 21, 15, 73, -24, -148, -20, -25, 11, -105, 63, 72, 14, 60, -124, -26, 24, -159, -31, 10, 159, -78, -28, -226, 8, 73, -42, 153, 76, 16, -33, 8, -178, -22, -26, 65, 15, 6, -116, -21, -21, 11, 5, -18, 67, 99, 74, 20, -20, -1, 22, -25, 80, -22, -32, 93, -137, 28, -17, 16, -20, 7, 7, -28, 50, -101, -40, 4, 6, -41, -15, 40, -121, 126, 40, 5, 28, -17, 10, -84, 17, -18, 61, -7, -14, -10, 14, -13, 11, -110, -94, -15, 56, 176, 16, -13, -32, -18, 15, 4, 5, 5, -25, 8, -30, 153, 59, 45, -20, 12, -57, -22, -142, -30, -118, -14, -28, -72, 45, -62, -13, 63, 24, -62, 46, -24, -115, 8, -19, -184, -38, -32, -30, 41, -44, -23, 46, 92, 30, -61, -17, 104, -29, 17, -15, -33, 10, -22, 61, -48, 147, 12, -158, 41, 90, 16, -25, 15, -22, 136, 18, 63, -10, -28, -70, -24, -86, 62, -176, 30, 7, 61, -33, -32, 129, -102, -22, 67, 8, -23, -91, -24, 6, -13, -228, 69, -25, 6, -13, 26, -37, 27, -26, -35, -11, -110, -11, 42, 5, 68, 70, 45, 10, -29, -28, 11, -27, 7, -28, -13, -28, 128, 15, 25, 63, 10, 10, -44, 104, -21, -36, 13, -19, 10, 38, 16, -6, -71, 63, -16, -79, 8, 12, 93, 4, -85, 10, -14, 58, 7, 71, 10, -27, -17, -10, 4, 8, 130, -21, 17, -5, 44, -16, 13, 16, 29, -21, -28, 8, -27, -22, 13, -10, 105, 7, 6, -23, 26, -21, -14, -81, -21, 7, 204, -21, -18, -53, -38, 55, 146, -32, 20, -7};$/;"	v
eye_n_stages	src/img/include/cascade.h	/^const int eye_n_stages=24;$/;"	v
eye_num_rectangles_array	src/img/include/cascade.h	/^const int8_t eye_num_rectangles_array[]={2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 3, 2, 3, 2, 3, 2, 2, 3, 2, 3, 2, 3, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 2, 3, 3, 3, 2, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 2, 3, 2, 2, 2, 3, 3, 3, 2, 3, 3, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2};$/;"	v
eye_rectangles_array	src/img/include/cascade.h	/^const int8_t eye_rectangles_array[]={0, 8, 20, 12, 0, 14, 20, 6, 9, 1, 4, 15, 9, 6, 4, 5, 6, 10, 9, 2, 9, 10, 3, 2, 7, 0, 10, 9, 7, 3, 10, 3, 12, 2, 2, 18, 12, 8, 2, 6, 8, 6, 8, 6, 8, 9, 8, 3, 2, 0, 17, 18, 2, 6, 17, 6, 10, 10, 1, 8, 10, 14, 1, 4, 7, 10, 9, 2, 10, 10, 3, 2, 5, 1, 6, 6, 5, 3, 6, 2, 3, 1, 15, 9, 3, 4, 15, 3, 6, 3, 9, 6, 6, 5, 9, 2, 8, 17, 6, 3, 10, 17, 2, 3, 9, 10, 9, 1, 12, 10, 3, 1, 1, 7, 6, 11, 3, 7, 2, 11, 9, 18, 3, 1, 10, 18, 1, 1, 16, 16, 1, 2, 16, 17, 1, 1, 9, 17, 6, 3, 11, 17, 2, 3, 8, 0, 5, 18, 8, 6, 5, 6, 6, 7, 9, 7, 9, 7, 3, 7, 14, 6, 6, 10, 16, 6, 2, 10, 9, 8, 9, 5, 12, 8, 3, 5, 3, 7, 9, 6, 6, 7, 3, 6, 1, 7, 6, 6, 3, 7, 2, 6, 16, 0, 4, 18, 16, 6, 4, 6, 0, 17, 3, 3, 0, 18, 3, 1, 16, 0, 2, 1, 17, 0, 1, 1, 0, 8, 20, 12, 0, 14, 20, 6, 6, 6, 9, 8, 9, 6, 3, 8, 5, 3, 12, 9, 5, 6, 12, 3, 4, 16, 1, 2, 4, 17, 1, 1, 18, 10, 2, 1, 19, 10, 1, 1, 9, 8, 6, 5, 11, 8, 2, 5, 0, 0, 2, 1, 1, 0, 1, 1, 6, 8, 6, 6, 8, 8, 2, 6, 11, 7, 6, 7, 13, 7, 2, 7, 19, 14, 1, 2, 19, 15, 1, 1, 6, 17, 1, 2, 6, 18, 1, 1, 14, 7, 2, 7, 15, 7, 1, 7, 6, 8, 2, 4, 7, 8, 1, 4, 5, 8, 12, 6, 5, 10, 12, 2, 2, 17, 1, 3, 2, 18, 1, 1, 6, 7, 3, 6, 7, 7, 1, 6, 6, 7, 9, 12, 9, 7, 3, 12, 6, 2, 11, 12, 6, 6, 11, 4, 1, 12, 5, 8, 1, 16, 5, 4, 14, 7, 6, 7, 16, 7, 2, 7, 10, 8, 6, 6, 12, 8, 2, 6, 16, 18, 4, 2, 16, 19, 4, 1, 18, 17, 2, 3, 18, 18, 2, 1, 9, 7, 3, 7, 10, 7, 1, 7, 5, 6, 6, 8, 7, 6, 2, 8, 2, 6, 6, 11, 4, 6, 2, 11, 8, 10, 12, 8, 8, 14, 12, 4, 7, 17, 6, 3, 9, 17, 2, 3, 10, 9, 3, 3, 11, 9, 1, 3, 8, 8, 3, 6, 9, 8, 1, 6, 7, 0, 6, 5, 9, 0, 2, 5, 6, 17, 1, 3, 6, 18, 1, 1, 0, 18, 4, 2, 0, 19, 4, 1, 4, 1, 11, 9, 4, 4, 11, 3, 3, 1, 14, 9, 3, 4, 14, 3, 0, 9, 6, 4, 2, 9, 2, 4, 18, 13, 1, 2, 18, 14, 1, 1, 13, 5, 3, 11, 14, 5, 1, 11, 0, 18, 8, 2, 0, 18, 4, 1, 4, 19, 4, 1, 5, 8, 12, 5, 9, 8, 4, 5, 4, 7, 11, 10, 4, 12, 11, 5, 14, 9, 6, 4, 16, 9, 2, 4, 0, 7, 6, 8, 3, 7, 3, 8, 0, 16, 3, 3, 0, 17, 3, 1, 7, 11, 12, 1, 11, 11, 4, 1, 4, 8, 9, 4, 7, 8, 3, 4, 5, 16, 6, 4, 7, 16, 2, 4, 18, 17, 1, 3, 18, 18, 1, 1, 18, 17, 1, 3, 18, 18, 1, 1, 4, 9, 4, 10, 4, 9, 2, 5, 6, 14, 2, 5, 4, 8, 6, 4, 6, 8, 2, 4, 10, 2, 2, 18, 10, 8, 2, 6, 0, 5, 8, 6, 0, 5, 4, 3, 4, 8, 4, 3, 6, 0, 6, 5, 8, 0, 2, 5, 18, 0, 2, 14, 18, 7, 2, 7, 8, 18, 4, 2, 10, 18, 2, 2, 1, 17, 6, 3, 1, 18, 6, 1, 11, 8, 3, 5, 12, 8, 1, 5, 11, 8, 3, 4, 12, 8, 1, 4, 11, 0, 6, 5, 13, 0, 2, 5, 1, 7, 6, 7, 3, 7, 2, 7, 0, 13, 1, 3, 0, 14, 1, 1, 3, 2, 9, 6, 3, 4, 9, 2, 8, 6, 9, 2, 8, 7, 9, 1, 0, 14, 3, 6, 0, 16, 3, 2, 1, 11, 6, 4, 3, 11, 2, 4, 6, 9, 9, 3, 9, 9, 3, 3, 6, 0, 9, 6, 6, 2, 9, 2, 8, 5, 6, 6, 8, 7, 6, 2, 1, 12, 2, 1, 2, 12, 1, 1, 10, 10, 6, 2, 12, 10, 2, 2, 13, 8, 6, 6, 15, 8, 2, 6, 6, 16, 6, 4, 8, 16, 2, 4, 8, 0, 9, 9, 8, 3, 9, 3, 18, 17, 1, 3, 18, 18, 1, 1, 18, 17, 1, 3, 18, 18, 1, 1, 7, 10, 3, 3, 8, 10, 1, 3, 9, 14, 2, 2, 9, 14, 1, 1, 10, 15, 1, 1, 9, 14, 2, 2, 9, 14, 1, 1, 10, 15, 1, 1, 0, 8, 19, 12, 0, 14, 19, 6, 7, 6, 9, 14, 10, 6, 3, 14, 13, 8, 3, 4, 14, 8, 1, 4, 4, 17, 1, 3, 4, 18, 1, 1, 4, 9, 6, 3, 6, 9, 2, 3, 2, 18, 5, 2, 2, 19, 5, 1, 7, 8, 2, 2, 7, 8, 1, 1, 8, 9, 1, 1, 7, 8, 2, 2, 7, 8, 1, 1, 8, 9, 1, 1, 5, 10, 13, 2, 5, 11, 13, 1, 10, 8, 1, 9, 10, 11, 1, 3, 15, 8, 2, 12, 15, 8, 1, 6, 16, 14, 1, 6, 4, 0, 3, 5, 5, 0, 1, 5, 12, 6, 3, 7, 13, 6, 1, 7, 7, 16, 6, 4, 9, 16, 2, 4, 9, 16, 2, 1, 10, 16, 1, 1, 6, 10, 9, 2, 9, 10, 3, 2, 0, 6, 15, 14, 0, 13, 15, 7, 9, 1, 5, 6, 9, 3, 5, 2, 3, 9, 3, 4, 4, 9, 1, 4, 5, 7, 3, 6, 6, 7, 1, 6, 17, 16, 1, 2, 17, 17, 1, 1, 9, 8, 6, 12, 11, 8, 2, 12, 6, 10, 6, 1, 8, 10, 2, 1, 7, 17, 9, 3, 10, 17, 3, 3, 14, 18, 6, 2, 14, 19, 6, 1, 9, 5, 3, 14, 10, 5, 1, 14, 8, 16, 9, 4, 11, 16, 3, 4, 0, 0, 4, 14, 0, 7, 4, 7, 8, 1, 6, 3, 10, 1, 2, 3, 6, 8, 3, 4, 7, 8, 1, 4, 4, 8, 3, 4, 5, 8, 1, 4, 5, 1, 6, 5, 7, 1, 2, 5, 1, 18, 1, 2, 1, 19, 1, 1, 7, 0, 6, 6, 7, 2, 6, 2, 0, 18, 4, 2, 0, 19, 4, 1, 12, 3, 8, 12, 12, 7, 8, 4, 12, 9, 3, 4, 13, 9, 1, 4, 12, 8, 3, 5, 13, 8, 1, 5, 16, 0, 2, 1, 17, 0, 1, 1, 5, 17, 1, 3, 5, 18, 1, 1, 10, 2, 3, 6, 10, 4, 3, 2, 4, 17, 2, 3, 4, 18, 2, 1, 12, 7, 1, 9, 12, 10, 1, 3, 7, 6, 3, 9, 8, 6, 1, 9, 17, 13, 3, 6, 17, 15, 3, 2, 7, 7, 3, 8, 8, 7, 1, 8, 5, 0, 3, 5, 6, 0, 1, 5, 4, 6, 9, 8, 7, 6, 3, 8, 2, 9, 3, 3, 3, 9, 1, 3, 16, 18, 4, 2, 16, 19, 4, 1, 17, 10, 3, 10, 17, 15, 3, 5, 8, 9, 6, 4, 10, 9, 2, 4, 5, 2, 10, 12, 5, 6, 10, 4, 6, 9, 6, 3, 8, 9, 2, 3, 11, 7, 3, 7, 12, 7, 1, 7, 12, 8, 6, 4, 14, 8, 2, 4, 14, 8, 6, 5, 16, 8, 2, 5, 12, 12, 2, 4, 12, 14, 2, 2, 3, 15, 1, 2, 3, 16, 1, 1, 12, 7, 3, 4, 13, 7, 1, 4, 10, 0, 6, 6, 12, 0, 2, 6, 10, 6, 3, 8, 11, 6, 1, 8, 16, 17, 1, 2, 16, 18, 1, 1, 16, 16, 1, 3, 16, 17, 1, 1, 11, 11, 1, 2, 11, 12, 1, 1, 3, 7, 6, 9, 5, 7, 2, 9, 4, 18, 9, 1, 7, 18, 3, 1, 0, 11, 4, 9, 0, 14, 4, 3, 9, 17, 6, 3, 11, 17, 2, 3, 7, 8, 6, 12, 9, 8, 2, 12, 6, 8, 3, 4, 7, 8, 1, 4, 3, 17, 1, 3, 3, 18, 1, 1, 11, 9, 6, 4, 13, 9, 2, 4, 6, 1, 3, 2, 7, 1, 1, 2, 1, 0, 2, 1, 2, 0, 1, 1, 1, 0, 2, 14, 1, 0, 1, 7, 2, 7, 1, 7, 5, 5, 11, 8, 5, 9, 11, 4, 9, 3, 5, 6, 9, 5, 5, 2, 7, 9, 5, 10, 7, 14, 5, 5, 15, 10, 2, 2, 16, 10, 1, 2, 0, 18, 8, 2, 0, 19, 8, 1, 7, 17, 1, 3, 7, 18, 1, 1, 7, 2, 11, 6, 7, 4, 11, 2, 8, 3, 9, 3, 8, 4, 9, 1, 0, 9, 2, 2, 0, 10, 2, 1, 0, 5, 3, 6, 0, 7, 3, 2, 6, 7, 2, 2, 6, 7, 1, 1, 7, 8, 1, 1, 7, 6, 3, 6, 8, 6, 1, 6, 12, 1, 6, 4, 14, 1, 2, 4, 9, 11, 6, 8, 11, 11, 2, 8, 17, 15, 3, 3, 17, 16, 3, 1, 6, 6, 3, 9, 6, 9, 3, 3, 0, 5, 8, 6, 0, 5, 4, 3, 4, 8, 4, 3, 0, 6, 1, 3, 0, 7, 1, 1, 17, 0, 2, 6, 18, 0, 1, 6, 10, 17, 6, 3, 12, 17, 2, 3, 13, 15, 2, 2, 13, 15, 1, 1, 14, 16, 1, 1, 4, 0, 12, 3, 4, 1, 12, 1, 5, 3, 10, 9, 5, 6, 10, 3, 7, 7, 9, 7, 10, 7, 3, 7, 5, 8, 9, 6, 8, 8, 3, 6, 0, 16, 6, 2, 0, 17, 6, 1, 12, 6, 7, 14, 12, 13, 7, 7, 13, 7, 6, 8, 15, 7, 2, 8, 2, 10, 6, 3, 4, 10, 2, 3, 18, 17, 1, 3, 18, 18, 1, 1, 7, 1, 6, 2, 7, 2, 6, 1, 6, 0, 6, 4, 6, 2, 6, 2, 8, 18, 6, 2, 10, 18, 2, 2, 7, 6, 5, 2, 7, 7, 5, 1, 6, 7, 3, 6, 7, 7, 1, 6, 18, 18, 2, 2, 18, 18, 1, 1, 19, 19, 1, 1, 16, 8, 3, 7, 17, 8, 1, 7, 0, 16, 2, 3, 0, 17, 2, 1, 5, 19, 6, 1, 7, 19, 2, 1, 9, 5, 6, 6, 9, 7, 6, 2, 0, 10, 2, 4, 0, 12, 2, 2, 0, 9, 4, 3, 2, 9, 2, 3, 1, 10, 6, 9, 3, 10, 2, 9, 9, 0, 6, 2, 11, 0, 2, 2, 14, 1, 2, 1, 15, 1, 1, 1, 0, 8, 1, 4, 0, 10, 1, 2, 15, 6, 2, 2, 15, 6, 1, 1, 16, 7, 1, 1, 7, 5, 3, 6, 8, 5, 1, 6, 19, 17, 1, 3, 19, 18, 1, 1, 7, 10, 3, 1, 8, 10, 1, 1, 12, 1, 6, 6, 14, 1, 2, 6, 15, 5, 2, 1, 16, 5, 1, 1, 8, 2, 7, 4, 8, 4, 7, 2, 4, 0, 14, 15, 4, 5, 14, 5, 7, 8, 6, 6, 9, 8, 2, 6, 11, 17, 1, 3, 11, 18, 1, 1, 12, 16, 2, 4, 12, 16, 1, 2, 13, 18, 1, 2, 10, 13, 2, 1, 11, 13, 1, 1, 11, 8, 3, 3, 12, 8, 1, 3, 2, 0, 6, 8, 4, 0, 2, 8, 3, 5, 6, 6, 3, 5, 3, 3, 6, 8, 3, 3, 10, 8, 3, 3, 11, 8, 1, 3, 5, 17, 4, 2, 5, 18, 4, 1, 8, 16, 5, 2, 8, 17, 5, 1, 0, 4, 3, 3, 0, 5, 3, 1, 6, 3, 6, 2, 8, 3, 2, 2, 4, 4, 9, 3, 7, 4, 3, 3, 0, 13, 1, 4, 0, 15, 1, 2, 0, 17, 8, 3, 0, 18, 8, 1, 6, 1, 11, 6, 6, 3, 11, 2, 4, 10, 6, 2, 6, 10, 2, 2, 10, 8, 1, 12, 10, 14, 1, 6, 5, 8, 3, 4, 6, 8, 1, 4, 0, 17, 1, 3, 0, 18, 1, 1, 0, 17, 1, 3, 0, 18, 1, 1, 13, 8, 3, 4, 14, 8, 1, 4, 1, 5, 5, 4, 1, 7, 5, 2, 18, 14, 1, 2, 18, 15, 1, 1, 13, 8, 2, 4, 14, 8, 1, 4, 10, 6, 6, 8, 12, 6, 2, 8, 8, 6, 6, 10, 10, 6, 2, 10, 17, 16, 1, 3, 17, 17, 1, 1, 1, 7, 2, 10, 2, 7, 1, 10, 5, 9, 6, 3, 7, 9, 2, 3, 0, 8, 5, 12, 0, 14, 5, 6, 0, 11, 1, 3, 0, 12, 1, 1, 6, 16, 6, 4, 8, 16, 2, 4, 0, 6, 2, 6, 0, 8, 2, 2, 11, 18, 2, 1, 12, 18, 1, 1, 5, 1, 9, 2, 5, 2, 9, 1, 0, 0, 1, 2, 0, 1, 1, 1, 15, 9, 3, 3, 16, 9, 1, 3, 18, 16, 1, 3, 18, 17, 1, 1, 11, 10, 6, 1, 13, 10, 2, 1, 1, 3, 4, 4, 3, 3, 2, 4, 11, 2, 1, 18, 11, 8, 1, 6, 9, 1, 5, 12, 9, 5, 5, 4, 12, 0, 8, 1, 16, 0, 4, 1, 8, 6, 3, 10, 9, 6, 1, 10, 19, 2, 1, 6, 19, 4, 1, 2, 18, 6, 2, 2, 18, 7, 2, 1, 7, 7, 3, 4, 8, 7, 1, 4, 5, 0, 6, 5, 7, 0, 2, 5, 0, 3, 7, 3, 0, 4, 7, 1, 1, 6, 2, 1, 2, 6, 1, 1, 4, 8, 2, 10, 4, 8, 1, 5, 5, 13, 1, 5, 2, 18, 18, 2, 2, 18, 9, 1, 11, 19, 9, 1, 2, 7, 4, 4, 2, 7, 2, 2, 4, 9, 2, 2, 17, 3, 3, 4, 18, 3, 1, 4, 16, 9, 2, 8, 16, 9, 1, 4, 17, 13, 1, 4, 15, 7, 1, 6, 15, 9, 1, 2, 14, 2, 2, 2, 14, 3, 2, 1, 17, 0, 2, 3, 17, 1, 2, 1, 16, 18, 2, 2, 16, 18, 1, 1, 17, 19, 1, 1, 10, 4, 4, 3, 10, 5, 4, 1, 0, 2, 8, 6, 4, 2, 4, 6, 7, 14, 6, 6, 7, 16, 6, 2, 11, 15, 2, 2, 11, 16, 2, 1, 7, 1, 9, 4, 10, 1, 3, 4, 9, 7, 3, 7, 10, 7, 1, 7, 6, 17, 2, 2, 6, 17, 1, 1, 7, 18, 1, 1, 4, 6, 3, 9, 5, 6, 1, 9, 0, 10, 19, 10, 0, 15, 19, 5, 5, 17, 6, 1, 7, 17, 2, 1, 0, 12, 6, 3, 3, 12, 3, 3, 2, 5, 18, 5, 8, 5, 6, 5, 1, 15, 6, 4, 1, 17, 6, 2, 14, 10, 6, 6, 16, 10, 2, 6, 0, 14, 4, 3, 0, 15, 4, 1, 1, 7, 6, 11, 3, 7, 2, 11, 13, 17, 7, 2, 13, 18, 7, 1, 0, 14, 2, 3, 0, 15, 2, 1, 0, 0, 6, 2, 3, 0, 3, 2, 0, 1, 6, 3, 3, 1, 3, 3, 0, 8, 2, 6, 0, 10, 2, 2, 1, 2, 6, 14, 1, 2, 3, 7, 4, 9, 3, 7, 17, 5, 2, 2, 17, 5, 1, 1, 18, 6, 1, 1, 11, 10, 9, 4, 14, 10, 3, 4, 2, 9, 12, 4, 6, 9, 4, 4, 7, 10, 12, 2, 11, 10, 4, 2, 2, 13, 1, 2, 2, 14, 1, 1, 16, 7, 4, 3, 16, 8, 4, 1, 19, 16, 1, 3, 19, 17, 1, 1, 18, 11, 1, 2, 18, 12, 1, 1, 12, 7, 8, 2, 12, 7, 4, 1, 16, 8, 4, 1, 14, 9, 2, 4, 15, 9, 1, 4, 14, 2, 6, 4, 14, 2, 3, 2, 17, 4, 3, 2, 14, 0, 6, 1, 17, 0, 3, 1, 3, 12, 2, 1, 4, 12, 1, 1, 17, 2, 3, 1, 18, 2, 1, 1, 1, 16, 18, 2, 7, 16, 6, 2, 2, 19, 8, 1, 6, 19, 4, 1, 1, 17, 4, 3, 1, 18, 4, 1, 19, 13, 1, 2, 19, 14, 1, 1, 9, 16, 10, 4, 9, 16, 5, 2, 14, 18, 5, 2, 12, 9, 2, 4, 12, 9, 1, 2, 13, 11, 1, 2, 19, 11, 1, 9, 19, 14, 1, 3, 6, 6, 14, 14, 6, 13, 14, 7, 2, 17, 4, 2, 2, 18, 4, 1, 0, 2, 1, 3, 0, 3, 1, 1, 0, 12, 1, 3, 0, 13, 1, 1, 15, 15, 4, 4, 15, 17, 4, 2, 2, 5, 18, 7, 8, 5, 6, 7, 1, 16, 5, 3, 1, 17, 5, 1, 0, 4, 2, 3, 0, 5, 2, 1, 0, 6, 2, 6, 1, 6, 1, 6, 16, 14, 4, 3, 16, 15, 4, 1, 0, 0, 10, 6, 0, 0, 5, 3, 5, 3, 5, 3, 2, 2, 3, 6, 3, 2, 1, 6, 2, 0, 3, 10, 3, 0, 1, 10, 5, 5, 2, 2, 5, 6, 2, 1, 12, 6, 4, 4, 12, 8, 4, 2, 13, 5, 7, 3, 13, 6, 7, 1, 10, 13, 1, 2, 10, 14, 1, 1, 16, 16, 4, 2, 18, 16, 2, 2, 16, 12, 4, 7, 18, 12, 2, 7, 16, 17, 1, 3, 16, 18, 1, 1, 19, 9, 1, 3, 19, 10, 1, 1, 18, 7, 2, 6, 19, 7, 1, 6, 8, 1, 3, 4, 9, 1, 1, 4, 14, 0, 6, 9, 16, 0, 2, 9, 4, 2, 10, 2, 9, 2, 5, 2, 2, 12, 8, 4, 2, 12, 4, 2, 6, 14, 4, 2, 0, 4, 7, 3, 0, 5, 7, 1, 14, 14, 3, 3, 15, 14, 1, 3, 0, 3, 4, 3, 2, 3, 2, 3, 1, 0, 2, 7, 2, 0, 1, 7, 15, 16, 4, 4, 15, 18, 4, 2, 5, 8, 12, 4, 5, 10, 12, 2, 3, 17, 1, 2, 3, 18, 1, 1, 6, 1, 3, 4, 7, 1, 1, 4, 6, 2, 3, 4, 7, 2, 1, 4, 6, 8, 9, 12, 9, 8, 3, 12, 8, 1, 8, 6, 8, 3, 8, 2, 14, 2, 6, 3, 17, 2, 3, 3, 0, 6, 1, 3, 0, 7, 1, 1, 10, 0, 10, 2, 15, 0, 5, 2, 11, 0, 3, 2, 12, 0, 1, 2, 3, 19, 10, 1, 8, 19, 5, 1, 0, 4, 7, 16, 0, 12, 7, 8, 2, 16, 1, 3, 2, 17, 1, 1, 7, 8, 12, 6, 11, 8, 4, 6, 14, 9, 6, 7, 16, 9, 2, 7, 12, 17, 6, 1, 14, 17, 2, 1, 16, 1, 3, 1, 17, 1, 1, 1, 0, 17, 8, 2, 0, 17, 4, 1, 4, 18, 4, 1, 17, 0, 2, 1, 18, 0, 1, 1, 4, 15, 6, 5, 6, 15, 2, 5, 7, 2, 8, 2, 7, 3, 8, 1, 4, 1, 8, 4, 4, 3, 8, 2, 5, 19, 2, 1, 6, 19, 1, 1, 5, 19, 2, 1, 6, 19, 1, 1, 16, 17, 1, 3, 16, 18, 1, 1, 0, 11, 2, 3, 1, 11, 1, 3, 0, 19, 4, 1, 2, 19, 2, 1, 0, 18, 4, 2, 2, 18, 2, 2, 2, 17, 1, 3, 2, 18, 1, 1, 5, 7, 11, 2, 5, 8, 11, 1, 9, 2, 4, 10, 9, 7, 4, 5, 0, 2, 4, 3, 0, 3, 4, 1, 10, 19, 10, 1, 15, 19, 5, 1, 11, 17, 8, 3, 15, 17, 4, 3, 8, 19, 3, 1, 9, 19, 1, 1, 14, 0, 3, 4, 15, 0, 1, 4, 10, 6, 4, 3, 10, 7, 4, 1, 0, 8, 3, 2, 0, 9, 3, 1, 7, 12, 3, 6, 7, 14, 3, 2, 1, 18, 1, 2, 1, 19, 1, 1, 0, 12, 4, 4, 2, 12, 2, 4, 1, 8, 6, 7, 3, 8, 2, 7, 0, 8, 4, 5, 2, 8, 2, 5, 19, 16, 1, 3, 19, 17, 1, 1, 1, 5, 18, 6, 7, 5, 6, 6, 2, 15, 4, 2, 2, 16, 4, 1, 18, 6, 2, 11, 19, 6, 1, 11, 0, 12, 2, 6, 0, 14, 2, 2, 12, 5, 3, 2, 12, 6, 3, 1, 1, 3, 2, 3, 1, 4, 2, 1, 16, 14, 4, 4, 16, 16, 4, 2, 6, 8, 12, 5, 10, 8, 4, 5, 13, 7, 2, 7, 14, 7, 1, 7, 1, 8, 2, 6, 2, 8, 1, 6, 15, 0, 3, 7, 16, 0, 1, 7, 4, 2, 6, 2, 6, 2, 2, 2, 0, 9, 20, 9, 0, 12, 20, 3, 10, 14, 2, 2, 10, 15, 2, 1, 6, 5, 10, 4, 6, 7, 10, 2, 6, 1, 5, 9, 6, 4, 5, 3, 16, 18, 2, 2, 16, 18, 1, 1, 17, 19, 1, 1, 0, 14, 2, 4, 0, 16, 2, 2, 10, 8, 2, 5, 11, 8, 1, 5, 3, 7, 12, 7, 7, 7, 4, 7, 0, 0, 6, 6, 3, 0, 3, 6, 1, 0, 4, 4, 3, 0, 2, 4, 0, 0, 6, 8, 2, 0, 2, 8, 0, 0, 2, 1, 1, 0, 1, 1, 0, 0, 3, 3, 0, 1, 3, 1, 5, 4, 2, 4, 5, 6, 2, 2, 2, 10, 9, 1, 5, 10, 3, 1, 1, 17, 1, 3, 1, 18, 1, 1, 0, 17, 2, 3, 0, 18, 2, 1, 0, 15, 16, 3, 8, 15, 8, 3, 0, 5, 4, 1, 2, 5, 2, 1, 1, 0, 6, 20, 3, 0, 2, 20, 2, 5, 4, 6, 2, 5, 2, 3, 4, 8, 2, 3, 9, 16, 6, 3, 11, 16, 2, 3, 11, 17, 6, 1, 14, 17, 3, 1, 3, 17, 15, 2, 8, 17, 5, 2, 18, 0, 2, 3, 18, 1, 2, 1, 13, 1, 7, 4, 13, 3, 7, 2, 13, 6, 4, 4, 13, 6, 2, 2, 15, 8, 2, 2, 17, 6, 3, 4, 17, 8, 3, 2, 14, 9, 2, 2, 15, 9, 1, 2, 17, 17, 1, 3, 17, 18, 1, 1, 3, 19, 8, 1, 7, 19, 4, 1, 0, 9, 3, 6, 0, 12, 3, 3, 4, 7, 15, 5, 9, 7, 5, 5, 6, 9, 9, 5, 9, 9, 3, 5, 8, 1, 6, 2, 10, 1, 2, 2, 4, 0, 12, 2, 10, 0, 6, 2, 7, 0, 10, 3, 12, 0, 5, 3, 5, 0, 9, 6, 5, 2, 9, 2, 8, 3, 6, 4, 8, 5, 6, 2, 17, 4, 2, 3, 17, 5, 2, 1, 5, 2, 4, 3, 5, 3, 4, 1, 5, 9, 2, 6, 6, 9, 1, 6, 14, 10, 2, 6, 15, 10, 1, 6, 7, 4, 3, 3, 7, 5, 3, 1, 12, 4, 8, 2, 12, 4, 4, 1, 16, 5, 4, 1, 15, 8, 1, 6, 15, 10, 1, 2, 4, 17, 11, 3, 4, 18, 11, 1, 3, 0, 16, 20, 3, 10, 16, 10, 12, 4, 4, 6, 12, 6, 4, 2, 11, 0, 6, 6, 13, 0, 2, 6, 13, 1, 6, 4, 13, 1, 3, 2, 16, 3, 3, 2, 11, 0, 6, 4, 13, 0, 2, 4, 8, 6, 6, 9, 10, 6, 2, 9, 7, 0, 3, 4, 8, 0, 1, 4, 0, 17, 14, 2, 0, 17, 7, 1, 7, 18, 7, 1, 6, 18, 2, 2, 6, 18, 1, 1, 7, 19, 1, 1, 18, 17, 1, 3, 18, 18, 1, 1, 17, 18, 2, 2, 17, 18, 1, 1, 18, 19, 1, 1, 5, 7, 1, 9, 5, 10, 1, 3, 5, 3, 6, 4, 7, 3, 2, 4, 1, 9, 6, 2, 1, 9, 3, 1, 4, 10, 3, 1, 6, 9, 2, 3, 7, 9, 1, 3, 6, 8, 6, 12, 8, 8, 2, 12, 4, 18, 2, 2, 4, 18, 1, 1, 5, 19, 1, 1, 9, 1, 6, 6, 9, 3, 6, 2, 6, 17, 6, 2, 6, 18, 6, 1, 3, 18, 16, 2, 3, 19, 16, 1, 3, 0, 3, 11, 4, 0, 1, 11, 13, 18, 3, 1, 14, 18, 1, 1, 6, 0, 9, 6, 6, 2, 9, 2, 1, 2, 12, 4, 1, 2, 6, 2, 7, 4, 6, 2, 3, 3, 6, 4, 5, 3, 2, 4, 12, 0, 8, 1, 16, 0, 4, 1, 9, 0, 6, 2, 11, 0, 2, 2, 3, 3, 12, 1, 9, 3, 6, 1, 2, 7, 6, 2, 2, 7, 3, 1, 5, 8, 3, 1, 0, 8, 4, 6, 0, 10, 4, 2, 9, 6, 3, 7, 10, 6, 1, 7, 9, 6, 6, 13, 11, 6, 2, 13, 11, 12, 6, 1, 13, 12, 2, 1, 18, 9, 2, 6, 18, 12, 2, 3, 17, 2, 3, 9, 18, 2, 1, 9, 13, 8, 4, 6, 13, 8, 2, 3, 15, 11, 2, 3, 4, 2, 12, 6, 10, 2, 6, 6, 4, 14, 16, 6, 12, 14, 8, 6, 6, 19, 10, 1, 11, 19, 5, 1, 6, 17, 1, 3, 6, 18, 1, 1, 4, 14, 10, 3, 4, 15, 10, 1, 6, 0, 12, 12, 6, 4, 12, 4, 5, 7, 4, 2, 5, 7, 2, 1, 7, 8, 2, 1, 17, 5, 3, 2, 18, 5, 1, 2, 8, 13, 6, 3, 8, 14, 6, 1, 8, 13, 5, 3, 8, 14, 5, 1, 13, 2, 1, 18, 13, 11, 1, 9, 6, 10, 9, 2, 9, 10, 3, 2, 11, 0, 7, 4, 11, 2, 7, 2, 1, 0, 6, 8, 3, 0, 2, 8, 9, 15, 3, 3, 9, 16, 3, 1, 9, 17, 9, 3, 9, 18, 9, 1, 12, 12, 3, 3, 12, 13, 3, 1, 4, 1, 3, 5, 5, 1, 1, 5, 10, 14, 2, 3, 10, 15, 2, 1, 18, 17, 2, 2, 18, 17, 1, 1, 19, 18, 1, 1, 18, 18, 2, 2, 18, 18, 1, 1, 19, 19, 1, 1, 18, 18, 2, 2, 18, 18, 1, 1, 19, 19, 1, 1, 4, 10, 9, 1, 7, 10, 3, 1, 3, 9, 6, 5, 5, 9, 2, 5, 18, 8, 1, 12, 18, 14, 1, 6, 0, 2, 8, 6, 0, 2, 4, 3, 4, 5, 4, 3, 9, 4, 3, 3, 9, 5, 3, 1, 3, 18, 2, 2, 3, 18, 1, 1, 4, 19, 1, 1, 6, 4, 4, 3, 6, 5, 4, 1, 16, 7, 4, 2, 16, 7, 2, 1, 18, 8, 2, 1, 5, 17, 1, 3, 5, 18, 1, 1, 2, 0, 15, 20, 2, 10, 15, 10, 8, 11, 6, 4, 8, 11, 3, 2, 11, 13, 3, 2, 8, 16, 4, 3, 8, 17, 4, 1, 8, 18, 2, 2, 8, 18, 1, 1, 9, 19, 1, 1, 2, 16, 13, 3, 2, 17, 13, 1, 16, 16, 2, 2, 16, 16, 1, 1, 17, 17, 1, 1, 8, 1, 6, 3, 10, 1, 2, 3, 16, 7, 2, 2, 16, 7, 1, 1, 17, 8, 1, 1, 14, 7, 4, 2, 14, 7, 2, 1, 16, 8, 2, 1, 4, 0, 14, 1, 11, 0, 7, 1, 10, 4, 8, 2, 10, 4, 4, 1, 14, 5, 4, 1, 8, 2, 3, 2, 9, 2, 1, 2, 12, 11, 6, 3, 12, 12, 6, 1, 1, 5, 1, 4, 1, 7, 1, 2, 1, 1, 1, 18, 1, 7, 1, 6, 11, 13, 3, 2, 11, 14, 3, 1, 0, 1, 12, 2, 0, 1, 6, 1, 6, 2, 6, 1, 10, 18, 2, 2, 10, 18, 1, 1, 11, 19, 1, 1, 4, 5, 4, 4, 4, 5, 2, 2, 6, 7, 2, 2, 6, 7, 1, 3, 6, 8, 1, 1, 14, 10, 6, 2, 16, 10, 2, 2, 16, 8, 3, 6, 17, 8, 1, 6, 4, 10, 6, 2, 6, 10, 2, 2, 6, 5, 3, 7, 7, 5, 1, 7, 0, 13, 6, 6, 0, 16, 6, 3, 12, 5, 1, 9, 12, 8, 1, 3, 5, 9, 3, 3, 6, 9, 1, 3, 7, 5, 6, 13, 9, 5, 2, 13, 19, 8, 1, 10, 19, 13, 1, 5, 11, 18, 6, 1, 13, 18, 2, 1, 9, 7, 6, 12, 11, 7, 2, 12, 12, 7, 6, 6, 14, 7, 2, 6, 15, 8, 3, 4, 16, 8, 1, 4, 6, 11, 4, 2, 6, 12, 4, 1, 1, 6, 6, 8, 3, 6, 2, 8, 11, 15, 6, 5, 13, 15, 2, 5, 15, 17, 4, 2, 15, 18, 4, 1, 13, 11, 6, 1, 15, 11, 2, 1, 5, 18, 2, 2, 5, 18, 1, 1, 6, 19, 1, 1, 4, 8, 4, 4, 4, 8, 2, 2, 6, 10, 2, 2, 11, 7, 9, 3, 11, 8, 9, 1, 0, 3, 10, 4, 0, 3, 5, 2, 5, 5, 5, 2, 7, 18, 6, 1, 9, 18, 2, 1, 0, 8, 3, 3, 0, 9, 3, 1, 0, 0, 6, 8, 0, 0, 3, 4, 3, 4, 3, 4, 7, 6, 3, 8, 8, 6, 1, 8, 13, 7, 7, 3, 13, 8, 7, 1, 3, 3, 2, 2, 3, 4, 2, 1, 0, 3, 3, 3, 0, 4, 3, 1, 9, 3, 5, 2, 9, 4, 5, 1, 6, 5, 9, 4, 9, 5, 3, 4, 3, 10, 12, 3, 7, 10, 4, 3, 8, 7, 3, 6, 9, 7, 1, 6, 5, 5, 6, 5, 8, 5, 3, 5, 0, 5, 2, 3, 0, 6, 2, 1, 9, 7, 3, 4, 10, 7, 1, 4, 1, 0, 6, 15, 3, 0, 2, 15, 15, 1, 3, 5, 16, 1, 1, 5, 9, 2, 3, 10, 10, 2, 1, 10, 8, 8, 6, 12, 10, 8, 2, 12, 16, 4, 3, 4, 16, 6, 3, 2, 16, 7, 2, 2, 16, 7, 1, 1, 17, 8, 1, 1, 13, 0, 6, 9, 13, 3, 6, 3, 7, 17, 1, 3, 7, 18, 1, 1, 12, 1, 4, 2, 12, 2, 4, 1, 17, 3, 1, 3, 17, 4, 1, 1, 0, 16, 9, 3, 0, 17, 9, 1, 3, 6, 2, 4, 3, 6, 1, 2, 4, 8, 1, 2, 13, 18, 3, 1, 14, 18, 1, 1, 0, 18, 4, 2, 2, 18, 2, 2, 1, 19, 2, 1, 2, 19, 1, 1, 0, 18, 4, 2, 0, 19, 4, 1, 2, 17, 1, 3, 2, 18, 1, 1, 4, 8, 3, 5, 5, 8, 1, 5, 2, 1, 6, 7, 4, 1, 2, 7, 3, 6, 2, 8, 3, 6, 1, 4, 4, 10, 1, 4, 4, 5, 11, 10, 4, 10, 11, 5, 0, 13, 20, 2, 10, 13, 10, 2, 1, 13, 16, 3, 9, 13, 8, 3, 16, 4, 4, 4, 16, 4, 2, 2, 18, 6, 2, 2, 16, 0, 4, 12, 16, 0, 2, 6, 18, 6, 2, 6, 14, 15, 3, 1, 15, 15, 1, 1, 3, 4, 12, 10, 3, 9, 12, 5, 9, 18, 2, 2, 9, 18, 1, 1, 10, 19, 1, 1, 9, 18, 2, 2, 9, 18, 1, 1, 10, 19, 1, 1, 13, 4, 2, 14, 13, 4, 1, 7, 14, 11, 1, 7, 4, 2, 6, 4, 7, 2, 3, 4, 0, 0, 18, 20, 0, 0, 9, 10, 9, 10, 9, 10, 15, 11, 1, 2, 15, 12, 1, 1, 16, 10, 2, 4, 16, 10, 1, 2, 17, 12, 1, 2, 18, 17, 2, 2, 18, 17, 1, 1, 19, 18, 1, 1, 9, 17, 1, 2, 9, 18, 1, 1, 8, 4, 9, 6, 11, 4, 3, 6, 6, 9, 9, 10, 9, 9, 3, 10, 5, 0, 5, 4, 5, 2, 5, 2, 5, 7, 11, 4, 5, 9, 11, 2, 2, 4, 2, 14, 3, 4, 1, 14, 8, 6, 3, 5, 9, 6, 1, 5, 8, 4, 3, 9, 9, 4, 1, 9, 0, 8, 20, 6, 0, 10, 20, 2, 14, 16, 6, 1, 17, 16, 3, 1, 17, 18, 2, 2, 17, 19, 2, 1, 8, 17, 6, 3, 10, 17, 2, 3, 4, 1, 9, 15, 7, 1, 3, 15, 11, 5, 3, 12, 12, 5, 1, 12, 0, 15, 4, 3, 0, 16, 4, 1, 0, 0, 15, 1, 5, 0, 5, 1, 6, 0, 6, 4, 8, 0, 2, 4, 2, 0, 9, 3, 5, 0, 3, 3, 13, 6, 3, 7, 14, 6, 1, 7, 7, 6, 4, 2, 7, 7, 4, 1, 6, 18, 6, 1, 8, 18, 2, 1, 18, 6, 2, 2, 18, 7, 2, 1, 6, 4, 7, 3, 6, 5, 7, 1, 12, 7, 3, 1, 13, 7, 1, 1, 15, 1, 2, 10, 15, 1, 1, 5, 16, 6, 1, 5, 0, 18, 2, 2, 0, 19, 2, 1, 19, 4, 1, 8, 19, 8, 1, 4, 1, 17, 1, 3, 1, 18, 1, 1, 0, 15, 6, 4, 0, 15, 3, 2, 3, 17, 3, 2, 19, 0, 1, 18, 19, 6, 1, 6, 10, 2, 6, 2, 12, 2, 2, 2, 2, 8, 12, 2, 6, 8, 4, 2, 16, 0, 4, 1, 18, 0, 2, 1, 8, 4, 2, 6, 8, 7, 2, 3, 14, 5, 2, 10, 15, 5, 1, 10, 13, 4, 2, 2, 13, 5, 2, 1, 11, 1, 3, 6, 11, 3, 3, 2, 6, 9, 12, 2, 10, 9, 4, 2, 9, 16, 4, 2, 9, 17, 4, 1, 5, 14, 15, 4, 5, 16, 15, 2, 18, 16, 2, 2, 18, 17, 2, 1, 16, 18, 2, 2, 16, 18, 1, 1, 17, 19, 1, 1, 6, 4, 3, 8, 7, 4, 1, 8, 5, 9, 3, 1, 6, 9, 1, 1, 0, 8, 1, 6, 0, 10, 1, 2, 11, 2, 9, 6, 14, 2, 3, 6, 12, 2, 6, 4, 14, 2, 2, 4, 1, 7, 2, 4, 1, 9, 2, 2, 13, 1, 6, 4, 13, 3, 6, 2, 4, 10, 2, 10, 4, 10, 1, 5, 5, 15, 1, 5, 2, 16, 9, 3, 5, 16, 3, 3, 1, 2, 3, 9, 2, 2, 1, 9, 19, 7, 1, 4, 19, 9, 1, 2, 14, 11, 6, 8, 14, 11, 3, 4, 17, 15, 3, 4, 15, 12, 4, 6, 15, 12, 2, 3, 17, 15, 2, 3, 16, 15, 2, 2, 16, 15, 1, 1, 17, 16, 1, 1, 17, 16, 2, 2, 17, 16, 1, 1, 18, 17, 1, 1, 17, 16, 2, 2, 17, 16, 1, 1, 18, 17, 1, 1, 2, 3, 2, 2, 2, 3, 1, 1, 3, 4, 1, 1, 10, 10, 3, 3, 11, 10, 1, 3, 5, 9, 7, 8, 5, 13, 7, 4, 7, 16, 2, 2, 7, 16, 1, 1, 8, 17, 1, 1, 7, 16, 2, 2, 7, 16, 1, 1, 8, 17, 1, 1, 9, 8, 10, 3, 14, 8, 5, 3, 6, 7, 4, 8, 6, 7, 2, 4, 8, 11, 2, 4, 1, 6, 4, 3, 1, 7, 4, 1, 6, 10, 6, 10, 8, 10, 2, 10, 4, 6, 3, 6, 5, 6, 1, 6, 3, 10, 4, 4, 3, 10, 2, 2, 5, 12, 2, 2, 3, 10, 4, 4, 3, 10, 2, 2, 5, 12, 2, 2, 3, 10, 4, 4, 3, 10, 2, 2, 5, 12, 2, 2, 14, 8, 2, 6, 15, 8, 1, 6, 3, 10, 4, 4, 3, 10, 2, 2, 5, 12, 2, 2, 3, 10, 4, 4, 3, 10, 2, 2, 5, 12, 2, 2, 12, 4, 3, 9, 13, 4, 1, 9, 12, 3, 1, 12, 12, 7, 1, 4, 2, 0, 18, 1, 8, 0, 6, 1, 10, 0, 10, 6, 10, 0, 5, 3, 15, 3, 5, 3, 18, 16, 2, 2, 18, 17, 2, 1, 3, 5, 4, 2, 3, 5, 2, 1, 5, 6, 2, 1, 11, 8, 3, 3, 12, 8, 1, 3, 11, 7, 3, 5, 12, 7, 1, 5, 3, 19, 15, 1, 8, 19, 5, 1, 8, 13, 3, 2, 8, 14, 3, 1, 2, 12, 8, 4, 2, 12, 4, 2, 6, 14, 4, 2, 16, 16, 2, 2, 16, 16, 1, 1, 17, 17, 1, 1, 7, 0, 3, 2, 8, 0, 1, 2, 6, 7, 2, 5, 7, 7, 1, 5, 18, 0, 2, 17, 19, 0, 1, 17, 16, 16, 1, 3, 16, 17, 1, 1, 14, 8, 3, 7, 15, 8, 1, 7, 10, 17, 2, 2, 10, 17, 1, 1, 11, 18, 1, 1, 4, 9, 1, 3, 4, 10, 1, 1, 18, 10, 2, 3, 18, 11, 2, 1, 12, 1, 3, 10, 13, 1, 1, 10, 8, 12, 9, 1, 11, 12, 3, 1, 5, 18, 2, 2, 5, 18, 1, 1, 6, 19, 1, 1, 19, 6, 1, 9, 19, 9, 1, 3, 4, 7, 2, 4, 4, 7, 1, 2, 5, 9, 1, 2, 1, 4, 6, 14, 3, 4, 2, 14, 10, 5, 9, 3, 13, 5, 3, 3, 18, 7, 2, 6, 18, 9, 2, 2, 5, 6, 2, 7, 6, 6, 1, 7, 10, 4, 6, 8, 13, 4, 3, 8, 0, 8, 2, 9, 0, 11, 2, 3, 0, 7, 5, 3, 0, 8, 5, 1, 8, 1, 7, 2, 8, 2, 7, 1, 7, 5, 3, 5, 8, 5, 1, 5, 19, 2, 1, 2, 19, 3, 1, 1, 6, 7, 10, 11, 11, 7, 5, 11, 9, 19, 6, 1, 11, 19, 2, 1, 3, 0, 12, 1, 7, 0, 4, 1, 4, 1, 6, 5, 6, 1, 2, 5, 6, 12, 12, 6, 10, 12, 4, 6, 16, 13, 2, 3, 16, 14, 2, 1, 7, 14, 4, 2, 7, 15, 4, 1, 7, 14, 2, 2, 7, 15, 2, 1, 3, 10, 2, 4, 3, 10, 1, 2, 4, 12, 1, 2, 0, 3, 2, 6, 0, 5, 2, 2, 1, 10, 2, 2, 1, 10, 1, 1, 2, 11, 1, 1, 16, 4, 4, 3, 16, 5, 4, 1, 5, 10, 2, 4, 5, 10, 1, 2, 6, 12, 1, 2, 5, 11, 13, 2, 5, 12, 13, 1, 10, 2, 3, 11, 11, 2, 1, 11, 10, 2, 4, 4, 10, 4, 4, 2, 8, 8, 6, 2, 10, 8, 2, 2, 11, 2, 3, 3, 12, 2, 1, 3, 6, 18, 14, 2, 6, 18, 7, 1, 13, 19, 7, 1, 17, 7, 1, 12, 17, 11, 1, 4, 10, 5, 10, 3, 10, 6, 10, 1, 6, 1, 3, 3, 7, 1, 1, 3, 13, 8, 3, 1, 14, 8, 1, 1, 10, 14, 2, 6, 10, 16, 2, 2, 4, 1, 12, 14, 8, 1, 4, 14, 14, 1, 6, 14, 16, 1, 2, 14, 3, 16, 2, 2, 3, 16, 1, 1, 4, 17, 1, 1, 0, 16, 2, 2, 0, 17, 2, 1, 15, 6, 4, 6, 15, 6, 2, 3, 17, 9, 2, 3, 12, 5, 2, 2, 12, 6, 2, 1, 7, 6, 6, 13, 9, 6, 2, 13, 1, 9, 6, 5, 3, 9, 2, 5, 0, 5, 3, 4, 0, 7, 3, 2, 4, 1, 16, 2, 4, 1, 8, 1, 12, 2, 8, 1, 1, 18, 4, 2, 1, 18, 2, 1, 3, 19, 2, 1, 7, 7, 3, 4, 8, 7, 1, 4, 3, 4, 9, 3, 6, 4, 3, 3, 4, 6, 6, 10, 6, 6, 2, 10, 9, 0, 8, 10, 13, 0, 4, 10, 8, 0, 8, 1, 12, 0, 4, 1, 6, 2, 8, 16, 6, 2, 4, 8, 10, 10, 4, 8, 14, 10, 2, 10, 14, 10, 1, 5, 15, 15, 1, 5, 12, 11, 1, 2, 12, 12, 1, 1, 16, 0, 3, 8, 17, 0, 1, 8, 14, 0, 6, 10, 17, 0, 3, 10, 16, 0, 3, 5, 17, 0, 1, 5, 4, 5, 11, 2, 4, 6, 11, 1, 1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 2, 3, 0, 1, 2, 1, 11, 6, 6, 11, 13, 6, 2, 11, 14, 0, 3, 1, 15, 0, 1, 1, 19, 7, 1, 2, 19, 8, 1, 1, 17, 0, 3, 9, 18, 0, 1, 9, 12, 7, 3, 4, 13, 7, 1, 4, 0, 1, 14, 2, 0, 1, 7, 1, 7, 2, 7, 1, 3, 1, 3, 2, 4, 1, 1, 2, 4, 0, 15, 2, 9, 0, 5, 2, 10, 2, 6, 1, 12, 2, 2, 1, 9, 4, 6, 11, 11, 4, 2, 11, 2, 16, 2, 4, 2, 18, 2, 2, 6, 17, 6, 3, 8, 17, 2, 3, 7, 9, 6, 2, 9, 9, 2, 2, 6, 8, 9, 2, 9, 8, 3, 2, 6, 6, 2, 10, 6, 6, 1, 5, 7, 11, 1, 5, 0, 11, 2, 3, 0, 12, 2, 1, 11, 15, 4, 1, 13, 15, 2, 1, 6, 17, 1, 2, 6, 18, 1, 1, 0, 0, 6, 20, 2, 0, 2, 20, 3, 10, 2, 2, 4, 10, 1, 2, 4, 7, 3, 5, 5, 7, 1, 5, 3, 12, 6, 2, 5, 12, 2, 2, 6, 15, 7, 4, 6, 17, 7, 2, 17, 16, 2, 2, 17, 16, 1, 1, 18, 17, 1, 1, 15, 1, 3, 16, 16, 1, 1, 16, 6, 16, 6, 3, 8, 16, 2, 3, 15, 14, 3, 2, 15, 15, 3, 1, 12, 16, 1, 2, 12, 17, 1, 1, 0, 2, 4, 4, 0, 2, 2, 2, 2, 4, 2, 2, 1, 1, 6, 4, 1, 1, 3, 2, 4, 3, 3, 2, 1, 18, 1, 2, 1, 19, 1, 1, 4, 7, 2, 3, 4, 8, 2, 1, 1, 0, 9, 14, 1, 7, 9, 7, 4, 9, 2, 6, 4, 9, 1, 3, 5, 12, 1, 3, 3, 9, 4, 3, 5, 9, 2, 3, 0, 9, 2, 4, 0, 11, 2, 2, 16, 6, 3, 10, 17, 6, 1, 10, 16, 11, 2, 1, 17, 11, 1, 1, 5, 7, 4, 4, 5, 9, 4, 2, 10, 11, 9, 2, 13, 11, 3, 2, 15, 10, 2, 2, 15, 10, 1, 1, 16, 11, 1, 1, 10, 6, 6, 14, 10, 13, 6, 7, 14, 7, 3, 5, 15, 7, 1, 5, 6, 11, 12, 3, 10, 11, 4, 3, 17, 16, 1, 2, 17, 17, 1, 1, 8, 5, 5, 4, 8, 7, 5, 2, 11, 6, 4, 2, 11, 7, 4, 1, 3, 4, 8, 2, 3, 4, 4, 1, 7, 5, 4, 1, 0, 8, 6, 6, 2, 8, 2, 6, 7, 4, 6, 2, 7, 5, 6, 1, 7, 3, 6, 3, 9, 3, 2, 3, 2, 17, 3, 3, 2, 18, 3, 1, 3, 10, 6, 1, 5, 10, 2, 1, 7, 2, 6, 2, 9, 2, 2, 2, 4, 11, 9, 1, 7, 11, 3, 1, 7, 7, 11, 12, 7, 13, 11, 6, 3, 2, 3, 4, 4, 2, 1, 4, 9, 7, 9, 3, 12, 7, 3, 3, 15, 11, 2, 6, 15, 11, 1, 3, 16, 14, 1, 3, 0, 5, 5, 3, 0, 6, 5, 1, 8, 1, 6, 12, 10, 1, 2, 12, 3, 7, 15, 13, 8, 7, 5, 13, 0, 9, 9, 9, 0, 12, 9, 3, 16, 0, 3, 8, 17, 0, 1, 8, 16, 2, 4, 2, 18, 2, 2, 2, 13, 0, 6, 5, 16, 0, 3, 5, 15, 1, 3, 2, 16, 1, 1, 2, 11, 8, 3, 2, 12, 8, 1, 2, 1, 8, 2, 12, 1, 8, 1, 6, 2, 14, 1, 6, 0, 1, 6, 12, 2, 1, 2, 12, 19, 17, 1, 3, 19, 18, 1, 1, 11, 3, 3, 10, 12, 3, 1, 10, 8, 1, 9, 8, 11, 1, 3, 8, 18, 16, 2, 2, 18, 16, 1, 1, 19, 17, 1, 1, 18, 16, 2, 2, 18, 16, 1, 1, 19, 17, 1, 1, 6, 13, 2, 6, 6, 15, 2, 2, 9, 14, 2, 2, 9, 15, 2, 1, 14, 10, 2, 4, 14, 10, 1, 2, 15, 12, 1, 2, 0, 15, 2, 2, 0, 15, 1, 1, 1, 16, 1, 1, 6, 7, 2, 2, 6, 7, 1, 1, 7, 8, 1, 1, 11, 18, 2, 2, 11, 18, 1, 1, 12, 19, 1, 1, 0, 0, 6, 4, 0, 0, 3, 2, 3, 2, 3, 2, 4, 1, 6, 6, 6, 1, 2, 6, 15, 13, 5, 4, 15, 15, 5, 2, 7, 17, 6, 1, 9, 17, 2, 1, 16, 19, 4, 1, 18, 19, 2, 1, 16, 16, 4, 4, 18, 16, 2, 4, 7, 8, 9, 4, 10, 8, 3, 4, 16, 18, 2, 2, 16, 18, 1, 1, 17, 19, 1, 1, 2, 9, 2, 4, 2, 9, 1, 2, 3, 11, 1, 2, 0, 3, 8, 4, 0, 3, 4, 2, 4, 5, 4, 2, 0, 1, 8, 1, 4, 1, 4, 1, 0, 5, 8, 9, 4, 5, 4, 9, 7, 18, 6, 2, 9, 18, 2, 2, 0, 4, 1, 12, 0, 8, 1, 4, 19, 13, 1, 6, 19, 15, 1, 2, 2, 8, 6, 8, 4, 8, 2, 8, 0, 0, 9, 17, 3, 0, 3, 17, 7, 9, 6, 8, 9, 9, 2, 8, 5, 10, 9, 4, 8, 10, 3, 4, 5, 0, 8, 3, 5, 1, 8, 1, 16, 6, 4, 4, 16, 6, 2, 2, 18, 8, 2, 2, 17, 4, 2, 8, 17, 4, 1, 4, 18, 8, 1, 4, 2, 16, 1, 3, 2, 17, 1, 1, 2, 16, 1, 3, 2, 17, 1, 1, 11, 0, 1, 3, 11, 1, 1, 1, 11, 2, 9, 7, 14, 2, 3, 7, 10, 2, 3, 6, 11, 2, 1, 6, 5, 9, 15, 2, 5, 10, 15, 1, 8, 16, 6, 2, 8, 17, 6, 1, 9, 16, 10, 2, 9, 16, 5, 1, 14, 17, 5, 1, 9, 17, 2, 2, 9, 17, 1, 1, 10, 18, 1, 1, 10, 15, 6, 4, 10, 15, 3, 2, 13, 17, 3, 2, 4, 5, 15, 12, 9, 5, 5, 12, 11, 13, 2, 3, 11, 14, 2, 1, 8, 13, 7, 3, 8, 14, 7, 1, 1, 12, 1, 2, 1, 13, 1, 1, 16, 18, 2, 2, 16, 18, 1, 1, 17, 19, 1, 1, 1, 19, 18, 1, 7, 19, 6, 1, 1, 17, 6, 1, 4, 17, 3, 1, 1, 3, 1, 12, 1, 9, 1, 6, 0, 9, 3, 6, 0, 11, 3, 2, 5, 4, 3, 10, 6, 4, 1, 10, 6, 17, 2, 1, 7, 17, 1, 1, 1, 0, 6, 12, 3, 0, 2, 12, 4, 7, 9, 2, 7, 7, 3, 2, 6, 11, 9, 1, 9, 11, 3, 1, 17, 10, 2, 10, 17, 15, 2, 5, 4, 10, 2, 10, 4, 10, 1, 5, 5, 15, 1, 5, 12, 3, 3, 12, 13, 3, 1, 12, 15, 3, 4, 6, 15, 3, 2, 3, 17, 6, 2, 3, 12, 8, 3, 3, 13, 8, 1, 3, 4, 14, 2, 4, 4, 16, 2, 2, 6, 16, 1, 3, 6, 17, 1, 1, 1, 1, 2, 3, 2, 1, 1, 3, 0, 2, 4, 1, 2, 2, 2, 1, 8, 17, 12, 3, 12, 17, 4, 3, 9, 16, 6, 4, 11, 16, 2, 4, 4, 6, 3, 6, 4, 9, 3, 3, 6, 2, 12, 9, 6, 5, 12, 3, 6, 0, 14, 20, 6, 0, 7, 10, 13, 10, 7, 10, 15, 16, 2, 2, 15, 16, 1, 1, 16, 17, 1, 1, 15, 16, 2, 2, 15, 16, 1, 1, 16, 17, 1, 1, 19, 8, 1, 3, 19, 9, 1, 1, 13, 4, 1, 2, 13, 5, 1, 1, 0, 4, 4, 2, 0, 5, 4, 1, 19, 5, 1, 6, 19, 7, 1, 2, 16, 0, 2, 1, 17, 0, 1, 1, 13, 1, 1, 3, 13, 2, 1, 1, 17, 17, 1, 3, 17, 18, 1, 1, 5, 4, 8, 8, 5, 4, 4, 4, 9, 8, 4, 4, 1, 2, 2, 2, 1, 2, 1, 1, 2, 3, 1, 1, 0, 0, 8, 6, 0, 0, 4, 3, 4, 3, 4, 3, 6, 3, 4, 2, 6, 4, 4, 1, 1, 0, 3, 3, 1, 1, 3, 1, 6, 1, 7, 2, 6, 2, 7, 1, 2, 6, 12, 6, 6, 6, 4, 6, 1, 16, 9, 2, 4, 16, 3, 2, 7, 15, 6, 4, 9, 15, 2, 4, 6, 15, 12, 1, 12, 15, 6, 1, 17, 17, 1, 3, 17, 18, 1, 1, 17, 15, 2, 2, 17, 15, 1, 1, 18, 16, 1, 1, 3, 13, 3, 3, 3, 14, 3, 1, 10, 17, 1, 3, 10, 18, 1, 1, 4, 0, 14, 8, 11, 0, 7, 8, 2, 0, 12, 2, 6, 0, 4, 2, 2, 0, 4, 3, 4, 0, 2, 3, 13, 1, 1, 2, 13, 2, 1, 1, 7, 5, 3, 6, 8, 5, 1, 6, 18, 2, 2, 2, 18, 2, 1, 1, 19, 3, 1, 1, 15, 1, 2, 14, 16, 1, 1, 14, 15, 6, 2, 2, 15, 6, 1, 1, 16, 7, 1, 1, 3, 1, 6, 3, 5, 1, 2, 3, 7, 16, 2, 2, 7, 16, 1, 1, 8, 17, 1, 1, 5, 17, 2, 2, 5, 17, 1, 1, 6, 18, 1, 1, 9, 10, 6, 10, 11, 10, 2, 10, 10, 17, 6, 3, 12, 17, 2, 3, 14, 5, 2, 10, 14, 10, 2, 5, 11, 12, 6, 2, 11, 13, 6, 1, 8, 1, 1, 3, 8, 2, 1, 1, 12, 15, 2, 2, 12, 15, 1, 1, 13, 16, 1, 1, 6, 8, 6, 4, 6, 8, 3, 2, 9, 10, 3, 2, 7, 5, 3, 5, 8, 5, 1, 5, 0, 5, 7, 3, 0, 6, 7, 1, 7, 9, 6, 6, 9, 9, 2, 6, 5, 7, 8, 8, 5, 11, 8, 4, 4, 9, 2, 6, 4, 9, 1, 3, 5, 12, 1, 3, 10, 11, 6, 1, 12, 11, 2, 1, 13, 6, 6, 11, 15, 6, 2, 11, 8, 17, 2, 2, 8, 17, 1, 1, 9, 18, 1, 1, 4, 12, 12, 1, 8, 12, 4, 1, 11, 17, 3, 2, 11, 18, 3, 1, 8, 17, 6, 1, 10, 17, 2, 1, 4, 1, 14, 6, 4, 3, 14, 2, 14, 2, 2, 12, 14, 8, 2, 6, 12, 13, 3, 2, 12, 14, 3, 1, 6, 1, 6, 1, 8, 1, 2, 1, 10, 6, 6, 1, 12, 6, 2, 1, 3, 19, 2, 1, 4, 19, 1, 1, 18, 16, 2, 2, 18, 16, 1, 1, 19, 17, 1, 1, 16, 11, 3, 7, 17, 11, 1, 7, 19, 5, 1, 6, 19, 8, 1, 3, 9, 8, 4, 3, 9, 9, 4, 1, 16, 8, 4, 4, 16, 8, 2, 2, 18, 10, 2, 2, 2, 8, 2, 2, 2, 8, 1, 1, 3, 9, 1, 1, 3, 5, 6, 4, 3, 5, 3, 2, 6, 7, 3, 2, 2, 3, 8, 16, 2, 3, 4, 8, 6, 11, 4, 8, 17, 17, 1, 3, 17, 18, 1, 1, 7, 2, 8, 11, 11, 2, 4, 11, 13, 3, 6, 14, 16, 3, 3, 14, 0, 9, 18, 2, 6, 9, 6, 2, 6, 10, 14, 3, 6, 11, 14, 1, 10, 9, 9, 3, 13, 9, 3, 3, 3, 5, 4, 6, 3, 5, 2, 3, 5, 8, 2, 3, 3, 7, 3, 7, 4, 7, 1, 7, 2, 8, 11, 6, 2, 10, 11, 2, 8, 9, 6, 3, 8, 10, 6, 1, 3, 3, 3, 11, 4, 3, 1, 11, 0, 19, 6, 1, 3, 19, 3, 1, 18, 18, 1, 2, 18, 19, 1, 1, 8, 0, 12, 6, 8, 0, 6, 3, 14, 3, 6, 3, 19, 5, 1, 3, 19, 6, 1, 1, 5, 8, 2, 1, 6, 8, 1, 1, 13, 11, 2, 1, 14, 11, 1, 1, 3, 6, 15, 13, 8, 6, 5, 13, 4, 3, 6, 2, 6, 3, 2, 2, 0, 18, 1, 2, 0, 19, 1, 1, 7, 8, 2, 6, 8, 8, 1, 6, 3, 0, 6, 19, 5, 0, 2, 19, 3, 1, 6, 5, 5, 1, 2, 5, 17, 14, 3, 6, 17, 16, 3, 2, 17, 13, 2, 6, 18, 13, 1, 6, 17, 18, 2, 2, 18, 18, 1, 2, 11, 14, 9, 4, 14, 14, 3, 4, 15, 8, 4, 6, 15, 8, 2, 3, 17, 11, 2, 3, 1, 16, 1, 3, 1, 17, 1, 1, 7, 0, 3, 14, 8, 0, 1, 14, 12, 0, 2, 1, 13, 0, 1, 1, 7, 9, 6, 5, 10, 9, 3, 5, 15, 5, 4, 9, 17, 5, 2, 9, 11, 0, 6, 6, 13, 0, 2, 6, 16, 15, 2, 2, 16, 15, 1, 1, 17, 16, 1, 1, 16, 15, 2, 2, 16, 15, 1, 1, 17, 16, 1, 1, 13, 2, 2, 18, 13, 11, 2, 9, 8, 4, 8, 10, 8, 9, 8, 5, 8, 3, 2, 3, 8, 4, 2, 1, 11, 1, 6, 9, 11, 4, 6, 3, 15, 4, 5, 6, 15, 6, 5, 2, 12, 18, 2, 2, 12, 18, 1, 1, 13, 19, 1, 1, 1, 17, 1, 3, 1, 18, 1, 1, 12, 19, 2, 1, 13, 19, 1, 1, 8, 10, 6, 6, 10, 10, 2, 6, 14, 2, 6, 5, 16, 2, 2, 5, 9, 5, 2, 6, 9, 7, 2, 2, 1, 15, 2, 2, 2, 15, 1, 2, 18, 17, 1, 3, 18, 18, 1, 1, 10, 14, 4, 6, 10, 16, 4, 2, 9, 7, 3, 2, 10, 7, 1, 2, 6, 9, 6, 2, 6, 9, 3, 1, 9, 10, 3, 1, 0, 2, 1, 12, 0, 6, 1, 4, 4, 0, 15, 1, 9, 0, 5, 1, 9, 0, 8, 2, 9, 0, 4, 1, 13, 1, 4, 1, 12, 2, 8, 1, 16, 2, 4, 1, 7, 1, 10, 6, 7, 3, 10, 2, 18, 6, 2, 3, 18, 7, 2, 1, 4, 12, 2, 2, 4, 12, 1, 1, 5, 13, 1, 1, 6, 6, 6, 2, 8, 6, 2, 2, 0, 9, 9, 6, 3, 9, 3, 6, 17, 18, 2, 2, 18, 18, 1, 2, 11, 2, 6, 16, 13, 2, 2, 16, 2, 4, 15, 13, 7, 4, 5, 13, 16, 2, 3, 10, 17, 2, 1, 10, 6, 10, 2, 1, 7, 10, 1, 1, 1, 1, 18, 16, 10, 1, 9, 16, 14, 4, 3, 15, 15, 4, 1, 15, 19, 13, 1, 2, 19, 14, 1, 1, 2, 6, 5, 8, 2, 10, 5, 4};$/;"	v
eye_stages_array	src/img/include/cascade.h	/^const uint8_t eye_stages_array[]={6, 12, 9, 16, 23, 27, 28, 36, 47, 48, 55, 32, 30, 44, 53, 51, 44, 72, 66, 69, 59, 88, 58, 93};$/;"	v
eye_stages_thresh_array	src/img/include/cascade.h	/^const int16_t eye_stages_thresh_array[]={-372, -321, -351, -329, -311, -330, -296, -313, -329, -286, -292, -288, -300, -265, -268, -284, -320, -286, -278, -266, -270, -250, -259, -250};$/;"	v
eye_tree_thresh_array	src/img/include/cascade.h	/^const int16_t eye_tree_thresh_array[]={531, -189, -66, -187, -220, 139, -889, 49, -73, 91, -374, 118, 32, 83, -48, -3, 0, -33, -483, -140, -88, -89, -117, -46, -92, -7, 0, 814, -147, -317, 0, 1, -76, 0, -75, -53, 0, 0, -13, 7, -103, 5, -30, -122, -514, 21, -33, -67, -8, -6, -20, -78, -50, 235, -39, -12, -17, -55, 0, -10, -289, 377, -36, 0, -12, -10, -196, 357, -69, -118, 10, -98, -134, -62, -1, 3, -43, -30, -437, 66, -84, 69, -23, 0, 32, -10, -91, -31, -4, 78, 23, -39, 45, -71, 125, -90, 0, -28, -28, -57, -196, 0, 4, -10, 0, 0, 1076, -96, -16, 0, -32, -6, -1, 0, 53, -53, 12, -24, -9, 64, 0, -114, 528, 99, -10, -14, 0, -66, -18, -89, -11, -18, 116, 340, -50, -19, -3, -80, 4, -106, -5, -204, -12, 19, 0, 0, -54, 9, -51, -11, 81, 19, -28, -53, -5, 11, 1, -59, -545, -41, -32, -58, -24, 44, 0, -23, -91, -20, 0, -2, 6, -49, 43, -126, 46, -50, -24, -4, -30, 11, 0, -20, 306, 82, 181, -3, -10, 0, -150, 12, -10, -57, 3, -29, -78, -20, -11, -101, 82, 7, 5, -44, 0, 15, -418, -212, -174, 1, 99, -97, -28, -2, 21, -54, -27, -17, -44, 1, -10, 5, -20, 108, -13, -12, 125, -39, 0, 20, 1, -35, 3, 4, -97, 0, 100, -583, -82, 0, -11, 0, -28, -153, -65, -12, 4, -6, 17, -44, -17, 30, 33, -136, 80, 90, -17, -3, 3, 37, -16, 0, -12, -90, -30, 3, -19, -62, 20, -7, -50, -53, -5, 24, 2, -7, -2, -24, -13, -249, -396, 16, -37, -19, -17, -39, -71, -27, 1, -9, -30, -21, -19, 6, -19, -5, 9, -1, 20, -37, -28, 4, -154, -27, 2, -17, -282, 25, 43, -257, 14, -32, -14, -38, 0, 7, -22, 30, -63, 117, 0, 214, -354, -172, 0, 21, -3, 0, 20, -6, 11, 9, -3, 8, 46, -4, 13, 0, -16, -6, 57, 672, 3, -7, -6, 7, -553, -16, -11, -5, -14, 170, -37, 25, -4, 47, -36, 2, 5, -44, 5, 9, 11, -27, -197, 62, -24, 27, -32, 15, -4, 14, 26, 0, -15, 15, -100, 193, 27, -5, -20, 14, 8, 120, -3, -443, -73, 25, -6, 3, 0, -85, -25, 44, 0, 0, 5, -3, 4, -4, -4, 31, -572, 8, -11, 21, -5, -15, 24, -21, 20, -2, 21, -60, -169, 3, -229, 4, 11, -30, -6, 18, 9, -347, -20, -8, -42, -55, -345, 10, 64, 265, 1, 5, -23, -605, -67, 12, -149, 0, -15, -16, 81, 3, -4, 64, -4, -449, -37, 60, -5, -17, 14, -15, 15, -8, -9, 4, 7, 24, -113, 192, -32, -52, 96, 65, 32, 23, 9, 18, -6, 10, 9, 23, 12, -355, 21, -81, 15, 42, -82, -21, -8, -1, 0, -1, 26, 45, -4, 9, -45, -1, 94, -9, -3, 6, 3, -84, -84, 88, 26, -36, -38, -8, -7, -55, -79, -13, 1, -31, -34, 113, -224, 10, 0, 20, -427, -2, 13, 21, -10, -11, -97, 82, -88, 11, 11, 13, -14, 7, -1, 0, -1, 82, 150, 5, -62, 19, 0, -14, 4, 0, 560, -48, 16, -1, -19, -1, 42, -3, 5, 70, 10, 5, 19, -25, -13, 13, -23, 0, -16, 5, -4, -13, 101, -31, 32, -44, -14, -127, 4, 13, -114, -94, -16, 12, -44, -74, 2, 44, -1, -14, -80, -44, -17, 6, 64, -45, 36, -3, -12, 25, 84, 408, -26, -249, -12, -40, -338, 20, 25, -13, -10, 3, -156, 0, 6, 5, 40, -6, 8, -14, 1, -2, -1, 28, 52, -6, 497, -205, 128, 7, -23, 0, -809, 0, 0, 41, -29, 993, 2, 14, 0, -2, -27, -108, 40, 132, -11, -45, 25, 356, 4, -3, -56, -310, -11, -16, 71, 90, -11, -41, -28, -15, -13, -32, 0, -13, -3, -2, -1, 5, -211, -62, 282, 5, -10, -6, -6, -27, -57, -9, 81, 10, -2, -71, -8, 10, -229, -6, -46, 95, -9, -118, -59, -21, 20, -17, 0, 1, -3, 0, -15, -164, 0, 0, 298, 41, 9, -14, -5, -39, -39, -39, -17, -39, -37, -35, -36, -58, 106, 0, 0, 28, -50, -15, 11, -31, 1, 13, -68, -26, 1, 61, 1, -1, 1, 33, -93, 0, -52, -4, 4, -183, 33, -47, 345, 58, 6, 40, -37, -1, 807, -29, 35, 36, 234, 15, -5, 4, -7, 44, 0, -22, -12, 26, 48, 55, -10, 6, 10, -31, 20, -11, 12, 12, 914, -391, 0, 0, -26, -4, -121, -53, -5, -14, -6, -25, -136, -93, -353, -8, 160, 14, 2, 2, -89, -13, 9, -1, 14, -89, 0, -6, 31, 15, 24, -7, 67, 19, -127, 2, 48, -30, -220, 63, 6, -1, 11, -269, 5, 3, 97, 112, -1, -5, -38, 31, 0, -6, 17, 0, -32, 700, -6, -43, -23, -76, -3, 43, 144, 3, 378, -12, -354, 0, -149, 10, -18, -21, 18, 59, 0, -24, -24, -45, -240, -18, -38, 5, 20, -31, -1594, -410, 3, -14, 34, 9, 30, 13, -320, 0, -39, -291, 1, -1, -16, 13, -22, -1, -5, -1, -29, -69, 122, 11, -7, 20, 336, -1, -7, -20, -34, -445, -39, -111, -26, -49, -687, -54, 314, 20, 13, -7, -1, 1, -1, 322, -3, 98, -6, -3, 1, 8, 109, -8, 23, 0, 0, 17, -8, 89, -60, -14, 7, -5, -16, -79, 53, -2, -54, 14, 25, 6, 1, -6, 14, -19, -47, -112, -216, -1222, -1, 0, 0, 8, -28, 33, 0, 6, -1, -126, -2, -48, 29, -8, 14, -551, -9, 17, -30, 2, 0, 27, 0, -832, 38, -9, 0, 61, 3, -17, 2, -68, -1, 1, -82, -59, -86, 86, 4, 0, -148, -37, -8, -93, 104, -10, -15, -68, 2, -150, 5, -34, 265, 124, 10, -28, -4, 0, -1, -7, -54, -7, -26, 0, 89, -112, 0, 287, -294, -441, 5, 279, -27, -2, -238, -25, -55, 5, 0, -317, 3, 4, -3, 341, -37, -1, 31, -510, 54, -27, -11, 3, -205, 30, -2, -7, -1, -290, -218, -82, 4, 0, 62, -852, 6, -216, -88, 0, 0, 0, -49, -72, -25, -3, -1, -69, 19, -42, -90, -28, -2, -9, -115, 8, -1, -68, 490, -1, -74, -1, 1, 3, 1764, 2, 0, -226};$/;"	v
eye_weights_array	src/img/include/cascade.h	/^const int8_t eye_weights_array[]={-1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 2, -1, 3, -1, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 2, -1, 2, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, -1, 3, -1, 2, -1, 2, -1, 2, -1, 2, -1, 3, -1, 2, -1, 2, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 2, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 2, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 2, 2, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 2, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, 2, -1, 2, 2, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, -1, 2, -1, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 2, -1, 2, 2, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, -1, 2, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, -1, 3, -1, 2, -1, 2, 2, -1, 2, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 2, -1, 2, 2, -1, 3, -1, 2, 2, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, 2, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 2, -1, 2, -1, 3, -1, 2, 2, -1, 2, 2, -1, 2, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 2, 2, -1, 2, -1, 3, -1, 3, -1, 2, 2, -1, 3, -1, 3, -1, 2, -1, 3, -1, 3, -1, 3, -1, 2, -1, 2, -1, 3, -1, 2, -1, 2};$/;"	v
eye_window_h	src/img/include/cascade.h	/^const int eye_window_h=20;$/;"	v
eye_window_w	src/img/include/cascade.h	/^const int eye_window_w=20;$/;"	v
fabs	src/img/apriltag.c	74;"	d	file:
fabs	src/img/dmtx.c	45;"	d	file:
fabs	src/img/lsd.c	39;"	d	file:
fabsf	src/img/apriltag.c	75;"	d	file:
fabsf	src/img/dmtx.c	46;"	d	file:
family	src/img/apriltag.c	/^    apriltag_family_t *family;$/;"	m	struct:apriltag_detection	file:
family	src/img/include/imlib.h	/^    uint8_t family, hamming;$/;"	m	struct:find_apriltags_list_lnk_data
family	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
fast9_corner_score	src/img/fast.c	/^static int fast9_corner_score(const byte* p, int bstart)$/;"	f	file:
fast9_detect	src/img/fast.c	/^static corner_t *fast9_detect(image_t *image, rectangle_t *roi, int *n_corners, int b)$/;"	f	file:
fast9_score	src/img/fast.c	/^static void fast9_score(image_t *image, corner_t *corners, int num_corners, int b)$/;"	f	file:
fast_atan2f	src/img/fmath.c	/^ inline float fast_atan2f(float y, float x)$/;"	f
fast_atanf	src/img/fmath.c	/^ inline float fast_atanf(float xx)$/;"	f
fast_cbrtf	src/img/fmath.c	/^ inline float fast_cbrtf(float x)$/;"	f
fast_ceilf	src/img/include/fmath.h	/^static inline int fast_ceilf(float x)$/;"	f
fast_detect	src/img/fast.c	/^void fast_detect(image_t *image, array_t *keypoints, int threshold, rectangle_t *roi)$/;"	f
fast_expf	src/img/fmath.c	/^ inline float fast_expf(float x)$/;"	f
fast_fabsf	src/img/include/fmath.h	/^static inline float fast_fabsf(float d)$/;"	f
fast_floorf	src/img/include/fmath.h	/^static inline int fast_floorf(float x)$/;"	f
fast_log	src/img/fmath.c	/^ inline float fast_log(float x)$/;"	f
fast_log2	src/img/fmath.c	/^ inline float fast_log2(float x)$/;"	f
fast_powf	src/img/fmath.c	/^ inline float fast_powf(float a, float b)$/;"	f
fast_roundf	src/img/include/fmath.h	/^static inline int fast_roundf(float x)$/;"	f
fast_sqrtf	src/img/include/fmath.h	/^static inline float fast_sqrtf(float x) $/;"	f
fb_alloc	src/fb_alloc.c	/^void *fb_alloc(uint64_t size)$/;"	f
fb_alloc0	src/fb_alloc.c	/^void *fb_alloc0(uint64_t size)$/;"	f
fb_alloc0_all	src/fb_alloc.c	/^void *fb_alloc0_all(uint64_t *size)$/;"	f
fb_alloc_addr_info_t	src/fb_alloc.c	/^}fb_alloc_addr_info_t __attribute__((aligned(8)));$/;"	t	typeref:struct:__anon1	file:
fb_alloc_all	src/fb_alloc.c	/^void *fb_alloc_all(uint64_t *size)$/;"	f
fb_alloc_fail	src/fb_alloc.c	/^NORETURN void fb_alloc_fail()$/;"	f
fb_alloc_fail_2	src/fb_alloc.c	/^NORETURN void fb_alloc_fail_2()$/;"	f
fb_alloc_free_till_mark	src/fb_alloc.c	/^void fb_alloc_free_till_mark()$/;"	f
fb_alloc_init0	src/fb_alloc.c	/^void fb_alloc_init0()$/;"	f
fb_alloc_init_once	src/fb_alloc.c	/^void fb_alloc_init_once()$/;"	f
fb_alloc_mark	src/fb_alloc.c	/^void fb_alloc_mark()$/;"	f
fb_avail	src/fb_alloc.c	/^uint64_t fb_avail()$/;"	f
fb_buffer_size	src/framebuffer.c	/^uint32_t fb_buffer_size()$/;"	f
fb_framebuffer	src/framebuffer.c	/^framebuffer_t *fb_framebuffer = &_fb_framebuffer0;$/;"	v
fb_free	src/fb_alloc.c	/^void fb_free()$/;"	f
fb_free_all	src/fb_alloc.c	/^void fb_free_all()$/;"	f
fb_update_jpeg_buffer	src/framebuffer.c	/^void fb_update_jpeg_buffer()$/;"	f
fdtbl_UV	src/img/jpeg.c	/^static float fdtbl_Y[64], fdtbl_UV[64];$/;"	v	file:
fdtbl_Y	src/img/jpeg.c	/^static float fdtbl_Y[64], fdtbl_UV[64];$/;"	v	file:
ffs_strerror	src/vfs_wrapper.c	/^const char *ffs_strerror(int res)$/;"	f
fft1d_alloc	src/img/fft.c	/^void fft1d_alloc(fft1d_controller_t *controller, uint8_t *buf, int len)$/;"	f
fft1d_controller	src/img/include/omv_fft.h	/^typedef struct fft1d_controller {$/;"	s
fft1d_controller_t	src/img/include/omv_fft.h	/^} __attribute__((aligned(8)))fft1d_controller_t;$/;"	t	typeref:struct:fft1d_controller
fft1d_dealloc	src/img/fft.c	/^void fft1d_dealloc()$/;"	f
fft1d_exp	src/img/fft.c	/^void fft1d_exp(fft1d_controller_t *controller)$/;"	f
fft1d_log	src/img/fft.c	/^void fft1d_log(fft1d_controller_t *controller)$/;"	f
fft1d_mag	src/img/fft.c	/^void fft1d_mag(fft1d_controller_t *controller)$/;"	f
fft1d_phase	src/img/fft.c	/^void fft1d_phase(fft1d_controller_t *controller)$/;"	f
fft1d_run	src/img/fft.c	/^void fft1d_run(fft1d_controller_t *controller)$/;"	f
fft1d_run_again	src/img/fft.c	/^void fft1d_run_again(fft1d_controller_t *controller)$/;"	f
fft1d_swap	src/img/fft.c	/^void fft1d_swap(fft1d_controller_t *controller)$/;"	f
fft2d_alloc	src/img/fft.c	/^void fft2d_alloc(fft2d_controller_t *controller, image_t *img, rectangle_t *r)$/;"	f
fft2d_controller	src/img/include/omv_fft.h	/^typedef struct fft2d_controller {$/;"	s
fft2d_controller_t	src/img/include/omv_fft.h	/^} __attribute__((aligned(8)))fft2d_controller_t;$/;"	t	typeref:struct:fft2d_controller
fft2d_dealloc	src/img/fft.c	/^void fft2d_dealloc()$/;"	f
fft2d_exp	src/img/fft.c	/^void fft2d_exp(fft2d_controller_t *controller)$/;"	f
fft2d_linpolar	src/img/fft.c	/^void fft2d_linpolar(fft2d_controller_t *controller)$/;"	f
fft2d_log	src/img/fft.c	/^void fft2d_log(fft2d_controller_t *controller)$/;"	f
fft2d_logpolar	src/img/fft.c	/^void fft2d_logpolar(fft2d_controller_t *controller)$/;"	f
fft2d_mag	src/img/fft.c	/^void fft2d_mag(fft2d_controller_t *controller)$/;"	f
fft2d_phase	src/img/fft.c	/^void fft2d_phase(fft2d_controller_t *controller)$/;"	f
fft2d_run	src/img/fft.c	/^void fft2d_run(fft2d_controller_t *controller)$/;"	f
fft2d_run_again	src/img/fft.c	/^void fft2d_run_again(fft2d_controller_t *controller)$/;"	f
fft2d_swap	src/img/fft.c	/^void fft2d_swap(fft2d_controller_t *controller)$/;"	f
fft_cos_table	src/img/fft.c	/^const static float fft_cos_table[512] = {$/;"	v	file:
fft_sin_table	src/img/fft.c	/^const static float fft_sin_table[512] = {$/;"	v	file:
fifo	src/img/include/collections.h	/^typedef struct fifo$/;"	s
fifo_alloc	src/img/collections.c	/^void fifo_alloc(fifo_t *ptr, size_t size, size_t data_len)$/;"	f
fifo_alloc_all	src/img/collections.c	/^void fifo_alloc_all(fifo_t *ptr, size_t *size, size_t data_len)$/;"	f
fifo_clear	src/img/collections.c	/^void fifo_clear(fifo_t *ptr)$/;"	f
fifo_dequeue	src/img/collections.c	/^void fifo_dequeue(fifo_t *ptr, void *data)$/;"	f
fifo_enqueue	src/img/collections.c	/^void fifo_enqueue(fifo_t *ptr, void *data)$/;"	f
fifo_free	src/img/collections.c	/^void fifo_free(fifo_t *ptr)$/;"	f
fifo_is_not_empty	src/img/collections.c	/^bool fifo_is_not_empty(fifo_t *ptr)$/;"	f
fifo_is_not_full	src/img/collections.c	/^bool fifo_is_not_full(fifo_t *ptr)$/;"	f
fifo_peek	src/img/collections.c	/^void fifo_peek(fifo_t *ptr, void *data)$/;"	f
fifo_poke	src/img/collections.c	/^void fifo_poke(fifo_t *ptr, void *data)$/;"	f
fifo_size	src/img/collections.c	/^size_t fifo_size(fifo_t *ptr)$/;"	f
fifo_t	src/img/include/collections.h	/^__attribute__((aligned(8)))fifo_t;$/;"	t	typeref:struct:fifo
file	src/img/picojpeg_util.c	/^   mp_obj_t file;$/;"	m	struct:__anon38	file:
file_buffer_off	src/vfs_wrapper.c	/^void file_buffer_off(mp_obj_t fp)$/;"	f
file_buffer_on	src/vfs_wrapper.c	/^void file_buffer_on(mp_obj_t fp)$/;"	f
file_close	src/vfs_wrapper.c	/^int file_close(mp_obj_t fp)$/;"	f
file_corrupted_raise	src/vfs_wrapper.c	/^int file_corrupted_raise(mp_obj_t fp)$/;"	f
file_eof	src/vfs_wrapper.c	/^bool file_eof(mp_obj_t fp)$/;"	f
file_info_t	src/img/picojpeg_util.c	/^}file_info_t;$/;"	t	typeref:struct:__anon38	file:
file_read	src/vfs_wrapper.c	/^int file_read(mp_obj_t fp, void *data, mp_uint_t size, mp_uint_t* size_out)$/;"	f
file_read_open	src/vfs_wrapper.c	/^int file_read_open(mp_obj_t* fp, const char *path)$/;"	f
file_read_open_raise	src/vfs_wrapper.c	/^int file_read_open_raise(mp_obj_t* fp, const char *path)$/;"	f
file_save_data	src/vfs_wrapper.c	/^mp_uint_t file_save_data(const char* path, uint8_t* data, mp_uint_t length, int* error_code)$/;"	f
file_seek	src/vfs_wrapper.c	/^int file_seek(mp_obj_t fp, mp_int_t offset, uint8_t whence)$/;"	f
file_seek_raise	src/vfs_wrapper.c	/^int file_seek_raise(mp_obj_t fp, mp_int_t offset, uint8_t whence)$/;"	f
file_size	src/vfs_wrapper.c	/^mp_uint_t file_size(mp_obj_t fp)$/;"	f
file_write	src/vfs_wrapper.c	/^int file_write(mp_obj_t fp, void *data, mp_uint_t size, mp_uint_t* size_out)$/;"	f
file_write_open	src/vfs_wrapper.c	/^int file_write_open(mp_obj_t* fp, const char *path)$/;"	f
file_write_open_raise	src/vfs_wrapper.c	/^int file_write_open_raise(mp_obj_t* fp, const char *path)$/;"	f
fillInBuf	src/img/picojpeg.c	/^static void fillInBuf(void)$/;"	f	file:
fill_similarity	src/img/selective_search.c	/^static inline float fill_similarity (region * ra, region * rb, int a, int b, int size)$/;"	f	file:
filter_gradients	src/img/eye.c	/^static void filter_gradients(array_t *gradients)$/;"	f	file:
finalNeg	src/img/dmtx.c	/^   DmtxPixelLoc    finalNeg;      \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
finalPos	src/img/dmtx.c	/^   DmtxPixelLoc    finalPos;      \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
findEOI	src/img/picojpeg.c	/^static uint8 findEOI(void)$/;"	f	file:
find_alignment_pattern	src/img/qrcode.c	/^static void find_alignment_pattern(struct quirc *q, int index)$/;"	f	file:
find_apriltags_list_lnk_data	src/img/include/imlib.h	/^typedef struct find_apriltags_list_lnk_data {$/;"	s
find_apriltags_list_lnk_data_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) find_apriltags_list_lnk_data_t;$/;"	t	typeref:struct:find_apriltags_list_lnk_data
find_barcodes_list_lnk_data	src/img/include/imlib.h	/^typedef struct find_barcodes_list_lnk_data {$/;"	s
find_barcodes_list_lnk_data_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) find_barcodes_list_lnk_data_t;$/;"	t	typeref:struct:find_barcodes_list_lnk_data
find_best_match	src/img/orb.c	/^static kp_t *find_best_match(kp_t *kp1, array_t *kpts, int *dist_out1, int *dist_out2, int *index)$/;"	f	file:
find_blobs_list_lnk_data	src/img/include/imlib.h	/^typedef struct find_blobs_list_lnk_data {$/;"	s
find_blobs_list_lnk_data_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) find_blobs_list_lnk_data_t;$/;"	t	typeref:struct:find_blobs_list_lnk_data
find_block_ncc	src/img/template.c	/^static float find_block_ncc(image_t *f, image_t *t, i_image_t *sum, int t_mean, uint32_t t_sumsq, int u, int v)$/;"	f	file:
find_circles	src/img/hough.c	/^static int find_circles(int core)$/;"	f	file:
find_circles_list_lnk_data	src/img/include/imlib.h	/^typedef struct find_circles_list_lnk_data {$/;"	s
find_circles_list_lnk_data_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) find_circles_list_lnk_data_t;$/;"	t	typeref:struct:find_circles_list_lnk_data
find_circles_param_init	src/img/hough.c	545;"	d	file:
find_circles_param_init2	src/img/hough.c	802;"	d	file:
find_circles_subproccess	src/img/hough.c	/^int find_circles_subproccess(int core)$/;"	f
find_datamatrices_list_lnk_data	src/img/include/imlib.h	/^typedef struct find_datamatrices_list_lnk_data {$/;"	s
find_datamatrices_list_lnk_data_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) find_datamatrices_list_lnk_data_t;$/;"	t	typeref:struct:find_datamatrices_list_lnk_data
find_gradients	src/img/eye.c	/^static void find_gradients(image_t *src, array_t *gradients, int x_off, int y_off, int box_w, int box_h)$/;"	f	file:
find_iris	src/img/eye.c	/^static void find_iris(image_t *src, array_t *gradients, int x_off, int y_off, int box_w, int box_h, point_t *e)$/;"	f	file:
find_leftmost_to_line	src/img/qrcode.c	/^static void find_leftmost_to_line(void *user_data, int y, int left, int right)$/;"	f	file:
find_lines_565	src/img/hough.c	/^static int find_lines_565(int ps)$/;"	f	file:
find_lines_565_init	src/img/hough.c	24;"	d	file:
find_lines_grayscale	src/img/hough.c	/^int find_lines_grayscale(int ps)$/;"	f
find_lines_grayscale_init	src/img/hough.c	37;"	d	file:
find_lines_list_lnk_data	src/img/include/imlib.h	/^typedef struct find_lines_list_lnk_data {$/;"	s
find_lines_list_lnk_data_t	src/img/include/imlib.h	/^} __attribute__((aligned(8)))find_lines_list_lnk_data_t;$/;"	t	typeref:struct:find_lines_list_lnk_data
find_one_corner	src/img/qrcode.c	/^static void find_one_corner(void *user_data, int y, int left, int right)$/;"	f	file:
find_other_corners	src/img/qrcode.c	/^static void find_other_corners(void *user_data, int y, int left, int right)$/;"	f	file:
find_qrcodes_list_lnk_data	src/img/include/imlib.h	/^typedef struct find_qrcodes_list_lnk_data {$/;"	s
find_qrcodes_list_lnk_data_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) find_qrcodes_list_lnk_data_t;$/;"	t	typeref:struct:find_qrcodes_list_lnk_data
find_rects_list_lnk_data	src/img/include/imlib.h	/^typedef struct find_rects_list_lnk_data {$/;"	s
find_rects_list_lnk_data_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) find_rects_list_lnk_data_t;$/;"	t	typeref:struct:find_rects_list_lnk_data
find_region_corners	src/img/qrcode.c	/^static void find_region_corners(struct quirc *q,$/;"	f	file:
finder	src/img/zbar.c	/^    signed finder : 5;          \/* finder pattern *\/$/;"	m	struct:databar_segment_s	file:
finder_hash	src/img/zbar.c	/^static const signed char finder_hash[0x20] = {$/;"	v	file:
finder_lines	zbar/qrdec.c	/^    qr_finder_lines finder_lines[2];$/;"	m	struct:qr_reader	file:
finder_scan	src/img/qrcode.c	/^static void finder_scan(struct quirc *q, int y)$/;"	f	file:
fit2raw	src/img/dmtx.c	/^   DmtxMatrix3     fit2raw;       \/* 3x3 transformation from fitted barcode grid to raw image *\/$/;"	m	struct:DmtxRegion_struct	file:
fit_line	src/img/apriltag.c	/^void fit_line(struct line_fit_pt *lfps, int sz, int i0, int i1, double *lineparm, double *err, double *mse)$/;"	f
fit_quad	src/img/apriltag.c	/^int fit_quad(apriltag_detector_t *td, image_u8_t *im, zarray_t *cluster, struct quad *quad, bool overrideMode)$/;"	f
fitness_all	src/img/qrcode.c	/^static int fitness_all(const struct quirc *q, int index)$/;"	f	file:
fitness_apat	src/img/qrcode.c	/^static int fitness_apat(const struct quirc *q, int index, int cx, int cy)$/;"	f	file:
fitness_capstone	src/img/qrcode.c	/^static int fitness_capstone(const struct quirc *q, int index, int x, int y)$/;"	f	file:
fitness_cell	src/img/qrcode.c	/^static int fitness_cell(const struct quirc *q, int index, int x, int y)$/;"	f	file:
fitness_ring	src/img/qrcode.c	/^static int fitness_ring(const struct quirc *q, int index, int cx, int cy,$/;"	f	file:
fixInBuffer	src/img/picojpeg.c	/^static void fixInBuffer(void)$/;"	f	file:
float32_t	src/img/apriltag.c	/^typedef float float32_t;$/;"	t	file:
flood_fill_call_back_t	src/img/include/imlib.h	/^typedef void (*flood_fill_call_back_t)(image_t *, int, int, int, void *);$/;"	t
flood_fill_seed	src/img/qrcode.c	/^static void flood_fill_seed(struct quirc *q, int x, int y, int from, int to,$/;"	f	file:
floor	src/img/apriltag.c	60;"	d	file:
floor	src/img/dmtx.c	31;"	d	file:
floor	src/img/lsd.c	33;"	d	file:
floorf	src/img/apriltag.c	61;"	d	file:
floorf	src/img/dmtx.c	32;"	d	file:
flowBegin	src/img/dmtx.c	/^   DmtxPointFlow   flowBegin;     \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
fltcmp	src/img/apriltag.c	/^static inline int fltcmp (float f1, float f2)$/;"	f	file:
flush	src/include/sensor.h	/^	int  (*flush)				(void);$/;"	m	struct:_sensor
fmax	src/img/apriltag.c	277;"	d	file:
fmaxf	src/img/apriltag.c	278;"	d	file:
fmin	src/img/apriltag.c	275;"	d	file:
fminf	src/img/apriltag.c	276;"	d	file:
font	src/img/font.c	/^struct font$/;"	s	file:
font_config	src/img/font.c	/^} font_config = {$/;"	v	typeref:struct:font
font_free	src/img/font.c	/^void font_free()$/;"	f
font_get_utf8_size	src/img/font.c	/^int font_get_utf8_size(const uint8_t pInput)$/;"	f
font_init	src/img/font.c	/^static inline void font_init(uint8_t width, uint8_t high, uint8_t index, uint8_t source_type, void *font_offset)$/;"	f	file:
font_load	src/img/font.c	/^void font_load(uint8_t index, uint8_t width, uint8_t high, uint8_t source_type, void *src_addr)$/;"	f
font_utf8_to_unicode	src/img/font.c	/^int font_utf8_to_unicode(const uint8_t* pInput, uint64_t *Unic)$/;"	f
format	src/img/include/imlib.h	/^    save_image_format_t format;$/;"	m	struct:img_read_settings
format	src/img/zbar.c	/^    uint32_t format;            \/* fourcc image format code *\/$/;"	m	struct:zbar_image_s	file:
format	zbar/image.c	/^    uint32_t magic, format;$/;"	m	struct:zimg_hdr_s	file:
format	zbar/image.h	/^    uint32_t format;                    \/* fourcc *\/$/;"	m	struct:zbar_format_def_s
format	zbar/image.h	/^    uint32_t format;            \/* fourcc image format code *\/$/;"	m	struct:zbar_image_s
format_syndromes	src/img/qrcode.c	/^static int format_syndromes(uint16_t u, uint8_t *s)$/;"	f	file:
fourcc	src/img/zbar.c	1026;"	d	file:
fourcc	zbar/image.h	41;"	d
fp	src/py/py_gif.c	/^    mp_obj_t fp;$/;"	m	struct:py_gif_obj	file:
fp	src/py/py_image.c	/^    mp_obj_t fp;$/;"	m	struct:py_imagereader_obj	file:
fp	src/py/py_image.c	/^    mp_obj_t fp;$/;"	m	struct:py_imagewriter_obj	file:
fp	src/py/py_mjpeg.c	/^    mp_obj_t fp;$/;"	m	struct:py_mjpeg_obj	file:
fpmask	zbar/qrdec.c	/^  unsigned       *fpmask;$/;"	m	struct:qr_sampling_grid	file:
fprintf	src/img/apriltag.c	47;"	d	file:
fprintf	src/img/dmtx.c	16;"	d	file:
fputc	src/img/dmtx.c	17;"	d	file:
framebuffer	src/include/framebuffer.h	/^typedef struct framebuffer {$/;"	s
framebuffer_t	src/include/framebuffer.h	/^} __attribute__((aligned(8))) framebuffer_t;$/;"	t	typeref:struct:framebuffer
framerate	src/include/sensor.h	/^    framerate_t framerate;      \/\/ Frame rate$/;"	m	struct:_sensor
framerate_t	src/include/sensor.h	/^} framerate_t;$/;"	t	typeref:enum:__anon50
frames	src/py/py_mjpeg.c	/^    uint32_t frames;$/;"	m	struct:py_mjpeg_obj	file:
framesize	src/include/sensor.h	/^    framesize_t framesize;      \/\/ Frame size$/;"	m	struct:_sensor
framesize_t	src/include/sensor.h	/^} framesize_t;$/;"	t	typeref:enum:__anon49
free	src/img/apriltag.c	48;"	d	file:
free	src/img/dmtx.c	19;"	d	file:
free	src/img/lsd.c	21;"	d	file:
free	src/img/zbar.c	17;"	d	file:
free	src/umm_malloc.c	/^    umm_ptr free;$/;"	m	union:umm_block_t::__anon58	file:
free_image_char	src/img/lsd.c	/^static void free_image_char(image_char i)$/;"	f	file:
free_image_double	src/img/lsd.c	/^static void free_image_double(image_double i)$/;"	f	file:
free_image_int	src/img/lsd.c	/^static void free_image_int(image_int i)$/;"	f	file:
free_ntuple_list	src/img/lsd.c	/^static void free_ntuple_list(ntuple_list in)$/;"	f	file:
frontalface_alpha1_array	src/img/include/cascade.h	/^const int16_t frontalface_alpha1_array[]={534, -477, -386, -223, -199, 142, -432, -378, -219, 318, -414, -497, -142, 68, -684, -277, -90, 237, 296, -107, 373, 286, -89, -155, 99, -259, -421, 118, -167, -357, -129, 93, -77, -103, 269, -416, 72, -259, -42, 388, 451, -80, -25, -103, 43, 227, -95, 16, -447, -240, -13, -468, 295, -400, -147, -373, -213, -80, -111, 381, -246, -626, 44, 124, 45, -501, 253, -660, 368, -126, -596, -216, -369, 46, 17, 100, 37, 63, -193, -93, -594, 108, 284, -851, -311, -123, -276, -307, -112, -47, 77, 319, -152, 72, 123, 68, -335, 116, -443, -49, -412, 190, -68, -15, -89, -268, 211, 52, 52, -332, -335, -269, -351, -9, -255, 370, -95, -147, 4, -20, -294, 95, 67, 193, 57, -323, 222, -355, 16, -137, -90, -150, -85, 178, 220, 49, -228, -322, -220, -191, -323, -251, 164, -61, -87, 281, 402, -70, -280, 78, 66, -315, 104, -24, -105, 64, -240, 318, -83, 89, 14, -262, 263, 55, -408, -263, -378, -61, 74, -59, -309, 62, -350, 54, 83, -72, -591, 73, -69, -392, 19, 36, -282, 3, -88, 51, -104, -569, -73, -227, -285, -258, 66, -146, -141, -329, 446, -269, 145, 334, -118, -106, 92, -228, 75, -203, 39, 8, -100, 22, 141, -473, -123, -115, -216, 90, 47, -320, -208, -237, 144, 205, -217, -103, -391, 161, 150, -65, 74, -101, 53, 112, 240, 2, -259, -96, -206, -270, 51, -97, 54, -262, -263, -53, 225, 267, 35, -425, 204, -245, 50, -265, -315, -194, -99, -183, 141, -114, -279, 214, -65, 80, -268, 41, -176, 63, -129, 10, 36, -229, -116, 86, -202, -584, 100, 8, -277, -481, 37, -260, 39, -197, -29, 17, -450, 245, 119, 181, -281, -279, -67, -56, 47, -237, 502, 54, -300, -287, -43, 211, -295, -268, -279, 108, -235, -408, -169, 49, -162, -48, -27, -276, 87, 121, 249, -556, -164, -377, 108, 6, 40, -103, -510, -159, 259, -262, -291, -145, 78, -440, 59, -311, 83, -81, -28, 101, 0, 192, -212, -152, 40, 8, -133, -136, 51, 11, -233, 23, 54, -69, -26, 16, -237, 34, 50, -292, 43, -121, -553, 11, -8, -337, 94, -65, -19, -201, 435, 198, -382, -546, 145, 173, 63, 3, -2, 115, -243, -515, 101, -63, -14, 11, -125, -76, -153, -7, 95, -255, 36, -54, -337, 126, 108, -7, -202, -576, -65, -57, -73, -8, 152, -122, 58, -66, -153, 181, -143, -182, -285, -104, -97, -179, -139, -25, 216, 67, 39, -509, -82, 152, 5, -112, -228, 54, 3, 257, -376, -208, 29, 33, -301, 161, 47, -238, 9, 93, 50, -429, -787, 54, -293, 214, -71, 45, 246, 2, -136, 210, -50, -6, -347, -165, 215, 49, -186, -92, 14, 120, -290, 251, -72, -163, 95, -334, -523, 198, 44, -384, 73, 354, -57, -406, -305, -39, 66, -22, 192, 31, -93, -19, 200, -229, 211, 4, 289, -147, -5, -139, -313, 37, -71, -62, -219, 177, -42, 112, -250, -231, -202, -77, -230, -107, 117, 233, -376, -268, 74, -329, -219, 41, 40, 5, -42, -249, 252, 121, -245, -134, 43, -290, 66, 50, -13, 272, -47, -7, 255, -7, 0, -391, 8, 196, 41, -250, 118, 65, -206, -336, 51, 249, -48, -174, 48, -60, 63, -266, 131, 414, 764, 154, -158, 169, -287, -275, 207, -5, 173, 14, -33, -96, -149, -77, 151, 248, 233, -154, 11, -239, 46, -330, -11, -3, -68, -131, 106, -63, -57, 16, 48, -242, 94, 246, -785, 58, 0, 243, -25, 2, 165, -9, 177, -103, -165, 250, -26, 156, -260, -105, -149, -237, 30, -148, -98, 301, -220, -191, 235, 68, -72, -157, 147, 83, 22, 88, 60, -190, -231, -88, -239, -136, 235, -181, -222, -58, -77, 68, -302, -139, -69, -233, -112, 6, 202, 205, -51, -11, -231, 90, -50, -358, 0, -125, -312, 95, -75, -368, -577, 96, -75, -255, 12, 38, -3, -36, -4, -443, -61, 1, 9, 19, -434, 161, -85, 58, 49, 23, -446, -61, 301, 35, -139, -55, 16, 175, 445, 78, -54, -203, 95, -3, 310, -5, -271, -8, 9, -20, -491, 123, -50, 50, -49, 463, 199, 39, -42, -26, -9, -14, 71, 32, 5, 48, 18, 12, -69, 13, 97, 39, 6, 41, -157, -217, -208, -93, -304, 84, -130, -268, -129, -254, -24, 59, -26, 0, -167, 72, 39, -74, 349, 312, -209, -312, 30, -299, -273, -92, 125, 150, -19, 70, -1, 210, 33, -232, 2, 455, 146, -82, 49, 17, -99, -6, -491, -328, -103, -186, 148, 234, -132, 61, 42, -349, -437, -80, 38, 190, -104, 208, 84, -321, 353, -9, -47, -114, 173, -3, 86, -271, 37, -62, 33, -268, -387, 35, 73, -69, 47, 83, 29, -283, 205, -67, 4, 3, -78, -411, 19, -1, -61, 490, -64, -177, 46, -7, 16, 2, 38, 99, -397, 55, -12, -65, -46, 139, -177, 75, 236, -203, 84, -351, 16, 92, -39, 34, 27, -2, 0, -120, -2, -88, 383, -254, -147, -8, 102, 46, 139, 174, -230, -144, 92, -142, -274, -183, -120, 54, 171, -244, 208, 315, -78, 54, -231, 57, -101, 47, 39, 55, -378, -43, 9, 85, 1, 115, 39, -333, -62, 7, -57, 52, 175, -2, -51, 121, -283, 259, 106, 54, -296, 90, -393, 51, -6, 43, -306, -279, 71, -11, -67, 154, 97, 33, 30, -87, -43, 156, -124, -1030, -100, -22, 293, -5, 9, 144, -44, 323, 171, -105, -234, 0, -95, -108, -42, 38, 352, -86, 195, -177, -3, -26, 273, 47, -56, 65, -2, -73, -9, 84, -89, -368, -302, 566, -478, -196, -161, 218, -8, -49, 527, -29, -4, -10, -170, -14, 156, -146, 14, 44, -171, 75, -72, -27, -13, 115, -520, 43, -5, 77, -79, -460, -13, 53, -51, -244, -36, -279, 26, 15, -343, 12, -262, 21, -37, 168, -232, -127, -108, -122, 130, -59, 103, 115, -217, -238, -327, 149, -13, -222, -19, -63, -287, -371, 137, 17, 292, -63, -10, 150, 39, 43, -38, -102, 71, 0, 105, -365, -64, 11, -240, -69, -264, 161, 41, -64, -74, -2, 28, -49, 79, -1, -117, -3, -19, -68, 46, -48, -37, -134, -98, -1, -148, 5, -166, -86, 38, -64, -28, -249, 97, -266, -1410, 244, 2, 57, 42, -221, -721, -331, -208, 168, 1, 78, 65, -367, -43, -166, -13, -235, 137, -139, 39, -62, -130, -55, 29, -3, 311, -64, 57, 64, -83, -14, 0, -78, -62, 120, 98, -12, 54, -43, 29, -11, -103, -84, -185, -40, 49, 210, -110, -7, 28, 557, -12, -83, 294, -99, -429, -249, 53, -42, 60, -237, -188, 36, 2, -304, 622, 183, 40, -208, 238, -144, -202, -362, 97, -104, -61, -223, 39, -293, 39, 10, 111, 111, -24, -97, 228, 220, 153, -406, 43, 130, -110, -80, 270, -183, 63, -176, -151, 11, -157, -78, -351, -143, 1, 400, -404, -397, 44, -334, -353, -181, -10, 147, -126, -125, -154, 60, -20, -308, 59, -207, 157, -75, -156, -136, -329, -43, -28, 261, -200, -225, 29, -207, -18, -329, 121, -15, 44, -51, -17, -326, 31, 3, 158, -92, 134, -43, -304, 214, 90, -225, -36, -74, -8, 177, -165, -7, -2, 217, -531, -219, 98, -441, 140, -9, 149, -3, 38, 132, -5, -220, -116, 33, 33, -64, 5, -100, 21, -46, -158, -12, 45, -215, -48, -203, -60, -14, 67, -171, 172, 77, 37, -47, 48, 115, 34, -53, 82, -51, 40, -160, 42, -64, 39, 145, 146, -98, 56, -73, -166, -74, 116, -131, 4, 100, 304, -174, -217, -282, -50, -104, -75, -334, 60, 74, -620, 225, 205, 37, -208, -181, -186, 43, 708, 29, -1, 59, -79, -12, -297, -69, -138, 46, 160, 61, -240, -19, 10, 43, -8, 24, -101, -58, -70, -27, -12, 38, -5, -205, -53, 51, -46, 127, 299, -16, -59, -210, 155, -10, -294, -2, 96, -25, 171, 40, 97, 38, -174, 65, -7, -90, -9, -6, 27, 119, -72, -5, -83, -313, -4, 167, -133, -200, 0, -13, 4, -159, 45, 11, 116, 85, -598, -169, 117, -68, -47, -6, -8, 1, 108, -5, -8, 28, 74, 30, 37, -137, -15, -115, 310, -590, -183, 18, -313, 34, -7, 34, -37, 49, -95, 207, 214, -242, 11, -497, -54, 153, -56, 161, -59, 46, -178, 88, -224, 60, -15, -50, 247, -15, -116, 29, 463, 59, 126, 155, 102, -217, -202, -172, 9, 35, -35, 35, -51, -119, -241, 83, 70, 60, -147, -156, -144, -205, -207, 35, -42, 369, 34, -86, -29, -254, -123, 9, -278, 244, -265, 230, -259, 157, -21, 16, -239, -215, 155, -7, 33, -289, 194, 76, 5, -218, -15, 91, 0, -8, 151, 152, -300, -4, 41, -57, 70, -194, -58, 49, 42, 328, -138, 162, -127, -303, 5, 7, -53, 0, -56, -2, 114, -52, -196, -361, 49, 215, 32, -119, 132, -7, 62, 250, 51, -65, 43, -219, 143, -65, 1, -154, 107, 58, 23, -68, -185, -89, 29, -2, 52, 148, 4, -84, 351, 0, -3, 96, -703, 121, -148, -2, 89, 364, 61, -2, -4, -231, -54, 50, -23, -141, 47, 496, -67, -140, -655, -63, 41, 56, 79, -244, 32, -15, 10, -11, 10, 7, 264, -17, -152, -16, 14, -1, 37, -45, -152, -276, 199, -16, -4, -14, 87, -67, -33, 7, 6, 115, -50, -138, -3, 17, 174, -52, 182, -94, -220, -69, -88, -81, -176, -53, -126, 343, 11, -182, 257, -3, -209, 138, -86, -306, -227, 42, 160, -72, -163, -196, 116, -195, 11, -12, -5, -245, -179, -72, -64, -178, 117, 46, -161, -263, 88, -74, -113, 45, -2, 423, -1, 0, -158, 180, 100, -6, 120, 82, -314, 11, -42, 86, -218, 14, 133, 160, -157, -216, -16, -45, -7, -62, -60, 100, -68, 44, -277, 184, -304, 161, 338, -86, -65, 36, -298, -101, 126, 479, -227, -298, -171, -122, 30, -19, -51, 236, -68, -138, 4, -3, -45, 53, 5, -4, -48, 104, -52, -434, -7, -51, -115, 60, -46, -70, -118, 106, 37, 192, -48, 90, -164, 4, 270, 76, -55, 61, -8, -1, 19, 20, -35, -476, -47, 36, 411, -207, -356, 8, -141, 5, 113, 46, -16, 51, -81, 222, 163, 44, 61, 138, 612, 40, 0, -29, -269, -51, -54, 28, -439, 165, -2, 50, -221, 35, 86, -640, 129, -750, -153, 86, -283, 114, -266, 8, 135, -137, -128, -84, -81, 27, -36, 241, -139, 3, -80, -1, -195, 61, -24, -202, -26, -103, 52, 0, -1, -93, -365, -10, 67, -214, -125, -48, 59, -9, -456, -55, -45, -2, 77, -243, 8, 250, -5, -14, 167, 6, -1, 87, -1, -134, -149, 5, -93, 9, -37, -55, -277, -39, 11, -396, 42, -197, 28, 283, 70, -206, 36, 50, -12, -42, -32, -8, -16, -93, 30, -133, 166, 44, -50, -130, -17, -104, -54, -127, -52, 46, 3, -53, 63, -488, -182, -43, 48, 1, 43, -578, 616, -69, 80, -371, -4, -59, 36, -56, -29, 6, 45, -37, -134, 225, -123, -54, -18, -63, 2, -45, 33, -11, 44, -289, -57, 116, -38, -174, 166, 114, -22, -119, 74, -309, -11, -68, -33, 497, 39, -182, 235, -57, -185, 319, -370, -200, -218, -38, 140, 93, -8, -157, -16, -87, -77, 19, -249, 47, -15, 83, -75, -310, 33, -169, 42, -13, 51, -201, 73, 442, 4, -19, 81, 196, 47, -60, 44, -11, 205, -209, 38, -186, 145, 10, -507, 128, 102, -196, 221, -143, 10, -49, 47, -12, 362, 337, 12, -53, -319, 66, 58, -220, 80, 64, 68, -138, 183, -149, -190, 45, -275, 6, -115, -69, -125, 106, 41, -282, 166, 107, 90, -74, -338, -224, 66, -253, 162, 6, -144, 0, -24, -167, -119, -271, 129, -78, -285, -222, 168, -58, 46, -84, -30, 98, -228, 137, -14, -390, 19, -50, -163, 21, -110, 102, 135, -99, 224, -298, 279, 35, 34, -3, 45, -135, -28, 100, -65, -6, 202, -122, -44, 0, 4, 51, 47, -15, -83, -159, -8, 50, 52, -145, 191, 217, 42, -340, -15, 195, 57, -407, 30, -335, 0, 167, 18, -172, 85, 116, -11, 68, -212, -172, -18, 7, 34, -152, 103, -278, 74, 167, -501, -58, 40, -99, 439, -97, -791, -35, -16, -144, 64, -670, 15, 239, 35, -3, 15, 182, 37, -95, -60, -7, 47, -39, 38, -42, -18, -5, -46, -116, 68, -39, 17, 70, -787, -374, 226, 35, -263, 19, 30, 172, 54, 114, 9, -50, 34, 215, 44, -45, -36, 267, 28, -201, -155, -3, -523, -107, 6, -44, -56, -17, 330, -297, 17, -45, 56, 158, -118, -32, -77, -57, 64, 74, 49, -193, 21, -68, 34, -103, 41, 79, -68, 39, 293, -182, 106, -341, 36, -12, 163, -55, -206, -81, -164, -117, 117, 93, 6, 44, -246, -181, 18, -191, 174, -32, 18, 244, -72, 98, 0, 217, -236, -139, -1, 184, 49, 29, -13, -27, -46, 42, 52, 239, 0, 0, 185, 256, -11, 3, -241, -111, -45, 148, -5, -36, 249, -21, -529, 112, 73, -146, 88, 143, -37, 61, 110, 5, 46, 38, -50, 0, 323, 166, -264, -122, -53, 132, -54, 46, -37, -72, -114, 10, 101, 563, -71, 87, 73, 163, 20, -114, -251, 58, 214, 29, -9, -346, -45, 32, 205, 41, 39, -471, -206, -35, -6, -188, -116, 53, 102, -5, -127, 45, 11, 44, -118, 13, 38, 35, -73, -77, -251, 12, 60, 120, -53, 42, -144, -911, -9, -144, -7, -136, -56, 36, -88, 245, 445, 355, 13, -23, 9, 243, -34, 58, -56, 329, -1012, 96, -6, 43, -239, 33, -292, 126, -79, -97, -47, -151, -39, 82, -40, 193, -226, 61, -479, 33, -6, 119, 102, -400, -492, 34, 261, -24, 28, 154, -48, 29, -71, 185, -49, 39, -14, -412, -15, 41, -45, 1190, -43, 233, 56, -230, -96, -97, -46, -57, 181, 122, -47, 10, -59, -117, 85, -42, 57, 38, -380, -49, 34, -277, -151, -125, 152, -302, -156, -292, -421, -79, -177, -183, 57, 264, 115, -218, 148, -96, -67, -7, 52, 171, 44, -214, -8, 107, 17, -40, -181, -41, 99, 4, 12, -69, 216, 39, -237, 132, 35, -230, 50, 24, -15, 62, 156, 232, -80, -170, 15, 204, 48, 150, -65, -3, 52, -274, -148, -169, -123, 147, -13, 31, 28, -444, 34, -120, 178, 431, 203, -259, 36, 129, -40, -139, -44, 64, 238, -8, 89, 17, 36, -263, -50, -198, 33, -39, 38, -182, 284, 238, -50, 107, -132, -11, 13, -60, -226, -52, 34, -44, 14, 40, 182, -40, -88, -142, -924, 132, -22, 7, 60, -10, 117, -195, -957, -163, 49, -41, 5, -434, 303, -104, 39, 125, -62, -12, 111, 48, -112, -52, 79, -79, 35, -130, 122, 115, 33, -10, -88, 1, 20, 297, -82, -46, 0, -37, -101, -46, 37, -15, 87, 79, -9, -45, -258, -137, 123, 67, 9, -153, 39, -37, 3, -4, 91, 306, -158, -467, -7680, -61, -8, -39, -15, -165, 278, -66, 35, -53, 37, 7, 323, -32, -175, -122, -120, 65, -123, -61, 194, -89, -202, 120, 171, 63, -55, 71, 14, -255, -305, 38, -363, -72, 121, -15, -219, 42, -300, 67, 9, -10, 73, -360, -54, 86, -64, 10, 135, 64, 1, -127, 21, -133, -161, 329, 213, 28, -345, -346, 103, -67, 150, -42, 3, -4, -61, -137, 192, -41, -44, 59, 64, 33, -214, 603, 48, 37, -11, 45, -252, -41, -61, 36, -266, 50, -232, -7, -255, 187, 71, 1, -51, 165, -47, -74, -17, -3, -53, -91, 277, 54, 132, -112, 8, 3, 87, 84, -64, 35, -3, 48, 89, -9, -109, 170, -125, 33, -14, -147, 249, 45, -207, 71, -34, -17, -46, -40, 74, 113, -49, -2, -108, -218, 214, 25, -47, 64, -90, 41, -37, -54, -182, 8, -69, 92, -12, 33, -275, 6, -66, -454, 76, 50, -110, -130, 199, -161, -11, 30, -4, 22, 10, -486, -15, 227, -56, 147, -138, -20, -51, 106, -7, -30, 84, -5, -112, 30, 234, 28, -36, 51, 83, 40, -19, 29, -42, 57, -49, 29, -229, 91, -117, 60, -7, -130, -138, -227, 206, 3, -11, 18, -50, -1391, 114, -3, -38, 118, -422, -9, 88, 31, -15, 4, -70, -45, -82, 32, -127, 11, -10, 0, -391, 9, 25, 159, -238, -103, 24, 95, -59, 10, -127, 8, -128, 9, -16, 124, 34, -113, 7, 3, 3, 74, -103, 84, -136, -369, -202, -68, -139, 5, -127, -202, 204, -84, -69, -135, -144, -44, -23, -14, 60, 45, -109, 148, 8, 17, -321, 136, 298, 100, -188, -36, 30, -362, 113, -356, 131, -14, -20, -221, 133, -41, -43, -1, 162, -86, -8, 165, 13, 167, 49, -238, -174, 3, 257, -59, -185, -56, 42, -61, 130, 231, 35, -169, 205, -85, -142, -15, 87, 71, 300, 209, -47, 83, 50, -239, 6, -54, 189, -49, 178, 100, -18, 244, -13, 19, 13, 184, 36, 10, 137, -11, 8, -66, 40, -187, 21, -90, 72, -215, 38, -48, 113, -14, -79, 420, -199, -59, -92, 199, 302, -120, 56, -9, 107, -42, 40, -1, -7, -58, -15, -76, 56, 311, 3, -382, -98, -54, 0, -159, -108, 6, 33, 301, 8, -81, 216, 94, -133, -15, 202, -299, 10, -91, 53, -48, 65, 8, -253, -34, 86, -46, -251, -8, 298, 163, -59, -56, 41, -43, 66, -196, -69, 19, -9, -45, 48, 180, 17, 192, 49, -12, -114, 166, -14, -39, -156, -12, 28, -204, -48, -34, 124};$/;"	v
frontalface_alpha2_array	src/img/include/cascade.h	/^const int16_t frontalface_alpha2_array[]={-567, 339, 272, 301, 322, -479, 112, 113, 218, -402, 302, 179, 442, -558, 116, 137, 238, -169, -76, 347, -50, -135, 292, 197, -387, 375, 256, -408, 212, 108, 269, -344, 371, 310, -117, 39, -400, 59, 327, -77, -13, 393, 239, 246, -757, -112, 102, -677, 72, 59, 275, 25, -274, 196, 353, 132, 149, 299, 244, -35, 70, 60, -343, -230, -418, 46, -97, 63, -75, 161, 13, 99, 25, -322, -609, -70, -291, -324, 69, 181, 9, -12, -89, 54, 277, 359, 189, 96, 323, 117, -245, 11, 138, -381, -134, -409, 39, -184, 17, 174, 19, -55, 335, 312, 217, 76, -83, -214, -171, 35, 19, 49, 17, 199, 31, 3, 135, 100, -542, 252, 24, -37, -148, -43, -163, 64, -69, 60, -323, 77, 135, 61, 132, -3, -66, -151, 267, 141, 163, 136, 92, 92, -128, 218, 292, -46, -80, 267, 50, -340, -179, 57, -131, 158, 121, -175, 29, -14, 211, -45, -396, 61, -81, -211, 13, 33, 9, 126, -146, 163, 16, -255, 9, -266, -138, 113, 0, -165, 205, 54, -270, -219, 16, 162, 144, -385, 96, 31, 173, 243, 125, 127, -320, 152, 77, 57, -25, 47, -119, -67, 106, 151, -117, 36, -249, 46, -339, -536, 131, -328, -118, 11, 88, 109, 42, -120, -427, 9, 59, 25, -48, -97, 50, 129, 59, -81, -3, 266, -213, 116, -384, -98, -27, -430, 61, 119, 45, 18, -395, 96, -317, 13, 58, 314, -11, -55, -486, 1, -21, 16, -195, 210, 75, 148, 229, 129, -180, 181, 68, -98, 66, -150, 43, -224, 60, -144, 98, -355, -273, 50, 111, -114, 57, -1, -133, -386, 47, 0, -568, 15, -303, 31, 181, -269, 49, -64, -54, -71, 62, 14, 50, 269, -440, 15, 7, -123, 41, 10, 82, -67, 38, 10, 39, -108, 47, 0, 79, -166, 39, 391, 166, 9, -25, -87, -4, -7, 42, 0, -45, -327, -388, 83, 38, 284, -157, 101, 73, 115, -174, 15, -442, 31, -207, 172, 215, -121, 242, -80, 45, 63, -109, -409, 96, 63, -369, -348, 69, -208, -191, 207, 220, -253, 39, -180, -103, 18, -184, 67, 37, -275, 311, 3, -39, 180, 85, 19, 12, -62, 31, -6, -30, -68, -165, -317, 260, -92, 52, -5, -75, 277, 311, -272, 43, 132, 63, -592, -83, 18, -441, 260, 38, -74, -86, -600, 39, -7, 60, 236, 79, -693, -8, 58, -267, 196, 71, -65, 280, 135, 103, 189, 188, 97, 93, 203, -84, -247, -271, 34, 154, -54, -375, 52, 26, -102, -411, -34, 2, 66, -183, -421, 6, -26, -137, 51, -258, -70, -136, 53, -9, -182, 4, -16, 203, -175, -55, 319, 37, -3, 276, 291, -1, 61, -52, -312, 13, 74, -171, 4, 6, 7, 151, 67, -85, 40, -6, -11, -114, 36, -97, 16, 203, 29, -1, 104, -98, 196, -57, -372, 66, 124, -56, 37, -51, 69, -48, 40, -419, 61, -1, -115, 112, 64, 6, 0, 389, -55, 5, 164, 147, 336, 74, 136, -114, -70, 52, 17, -133, 11, 47, -176, -215, -349, 66, 16, -4, -83, 51, 57, -274, 9, -183, -136, 249, -60, 117, -682, 6, -555, 191, 2, 254, -63, -156, 7, -34, -133, 38, 0, -157, -53, 122, 28, -383, 208, -17, 12, -1, -47, 24, -69, 40, -60, 50, 5, -4, -444, -14, -197, 171, 79, 65, 105, 4, -53, 10, 43, 209, 6, -87, 0, 64, -366, 85, 33, -79, 181, 49, -227, -70, 6, -44, -51, 29, -116, 100, -51, 52, -261, -23, -493, -17, 47, 56, -47, 95, -68, 147, 258, 144, 79, -286, 84, 134, -8, 30, 53, -72, -179, 187, 39, -87, -33, -245, -119, -134, 55, 16, 55, 12, 44, -56, 46, 14, 134, 143, -179, 11, 66, 148, 50, 54, 197, -63, -9, 282, 184, 11, -96, 286, 49, -297, 42, -3, -21, 152, 34, -8, 4, 136, 41, -192, -167, -314, 110, -305, 36, 138, 144, -203, 379, -7, 8, 76, -97, -135, 538, -10, 91, -45, -332, 35, 100, -184, 16, -42, -42, 187, 52, -75, 103, -44, 178, 0, 137, -191, 85, -9, 4, 186, -125, 197, 17, -47, -410, 304, 100, -412, 138, -81, -263, -202, -214, -160, 402, 98, 134, -72, -78, -223, -51, 20, 145, 114, 173, 49, -182, 29, 51, 93, 32, 147, -134, 122, -398, 48, -114, -54, 133, 7, -57, 37, 4, -252, 5, 50, 97, -37, -71, 154, -96, 264, -57, -303, 11, 274, -44, -18, 102, -311, -182, 46, -395, 42, -4, 60, 14, -4, -54, 47, -101, -657, -3, 42, 84, -124, -57, 48, -53, -153, -5, 15, -394, 95, 35, -4, -313, 0, -3, -317, 131, -181, 0, 37, -119, -106, 111, -243, -78, -506, -2, -8, 99, 150, -242, 54, -7, 297, -285, 53, -40, 46, 11, -191, -428, 195, -226, -630, -76, 41, -95, 152, 141, 104, -60, 40, -87, 24, 8, -13, -5, 234, -73, 136, -113, -655, -283, 145, 32, 223, 53, 14, -2, 43, -355, 0, -106, 4, -50, 132, 180, -171, 91, 48, 67, 68, -276, -71, 61, -63, 1, 181, -368, 12, -114, 88, -343, -132, -186, -6, 49, -224, -61, -320, -21, -124, 46, 159, 236, 198, -278, -59, 158, 258, 11, 1, 4, -73, -42, -2, -75, -7, -182, -388, -99, -5, 37, -105, 105, 141, 4, -75, -118, -132, 53, 367, -10, 34, 27, 57, 96, -50, 149, -171, -19, 298, 11, -55, 51, 10, 91, 49, 62, 325, -551, -41, 54, -50, 55, -255, 125, -44, -191, 139, -129, -245, 43, -336, 3, 61, 39, -3, 16, -11, 39, 13, 1, -341, 95, -38, 65, -267, 101, 8, 96, -53, 45, -165, -253, 8, 0, 120, 146, -487, -2, -13, -314, -277, -94, 60, 39, -486, 5, 156, 47, 550, 33, -132, 316, -8, 411, -1, 243, 495, -178, 78, 146, 148, 110, -51, 281, 14, -85, 57, 15, 47, -66, 182, 19, 232, 185, 53, -3, -29, -196, 10, 151, 83, -65, -143, -134, 75, 64, -120, -289, -67, -4, 40, -179, 59, 116, 36, -65, -453, 138, 85, -298, -638, 245, -65, -258, 49, -256, 106, 100, -92, 237, 85, 23, 62, -322, 43, -224, 33, 56, -129, 117, 142, 4, -43, 1, 28, -47, 210, -88, -356, 0, 29, -6, 30, -53, 136, -79, -13, -3, 107, 10, 162, 2, -16, 21, -102, 131, 35, 160, -698, -276, 8, 112, -61, -78, 66, -501, 189, 67, 43, -66, -73, -451, -6, 263, -319, -439, 52, 52, 51, 427, -90, -46, 31, -296, -1198, -37, 87, 78, 6, 55, 40, -2, -176, 311, -105, -4, 49, -107, 200, -8, 16, -48, -202, 150, -75, 106, 43, 6, -106, 91, 220, 25, -177, 9, -177, -247, 0, -83, 185, 77, -26, -55, -40, -5, -97, -69, 67, 142, 7, 16, -53, 16, 71, -226, 40, 108, 40, 31, 210, -43, 37, -7, -177, -6, 37, 9, 205, -63, 50, 34, 47, -89, 53, -3, -116, 3, 8, 69, 44, 17, 30, 284, 117, -47, 36, 2, -282, 0, 89, -7, -37, -634, -112, 180, 157, -6, -275, -181, 8, 44, 3, 287, 44, -46, -61, 0, 66, 66, 150, -55, 39, -290, 318, -48, 31, 2, -29, -14, -10, -276, 0, -216, -203, -54, 109, 0, 57, -98, -203, 104, 203, 29, 320, 197, 40, -471, -39, 0, 43, 1, 63, -469, -98, 5, -3, -72, -360, 204, -21, -56, -330, 139, -41, 136, -43, 10, -264, 81, -418, -51, -172, 231, -327, 193, 57, 79, -98, 70, -310, -79, -52, 52, 9, 40, 302, 84, 106, 45, -114, -28, -10, -12, -52, -290, 4, 57, 10, -285, -37, -1014, -252, -191, 77, 134, -1, 60, 20, -171, -53, -267, 0, 157, -217, -130, -325, 696, 39, 35, 87, 123, -514, -28, -298, 36, 157, -192, 256, -8, -47, 74, 152, 45, -54, 154, -6, 145, -69, 63, -52, -194, -65, -73, 8, -68, -293, 76, -339, 180, -115, -15, 112, 180, 61, 29, -280, 19, 29, 42, -218, 107, -166, 39, -87, 202, -57, -1, -15, 51, -57, 63, 186, 73, -285, 170, -67, 48, -281, -750, -70, -160, -94, 49, -498, 47, -39, 28, 5, 252, -11, -301, -239, -383, 400, -173, 27, 7, -43, 33, -133, 33, 124, 2, 138, -5, 127, -56, 4, 18, -2, -73, -571, 104, -51, 69, 22, -280, -37, -108, -52, 7, -55, 36, -3, 32, -162, -120, 499, -542, 126, 195, 101, -162, -147, -175, 70, 62, 69, 29, 61, -169, 107, -48, -234, 100, 113, 0, 43, -205, 46, -53, 56, -48, 37, -60, 55, -154, 39, 3, -23, -358, -126, -3, 0, -75, 51, 12, 38, -67, 266, -301, -14, -62, 43, -273, -342, 116, -95, 4, 60, -82, -261, -44, 61, -53, 44, -8, 257, -153, 96, -183, 82, -198, -15, 147, 32, -13, -162, -46, -543, 22, 4, -282, -98, -43, -98, 90, -233, -5, 0, 88, 89, 10, -13, -82, 2560, 85, 45, 42, -394, -255, 3, -51, 277, 50, 17, -215, 93, -70, 27, -59, 44, -214, -44, -37, 3, -194, 195, -2, 56, -91, 66, 7, -171, -37, 53, 12, 33, 102, -182, -74, 0, -2, -301, -475, 99, -284, 252, -177, 17, -639, 38, -547, 200, -184, -349, 186, 49, -10, 0, -465, 53, -362, -30, 66, 44, -156, 77, -58, 53, 17, 133, -126, 20, 128, -149, 153, 55, 156, 129, 105, 24, 60, 46, 10, -209, 57, -50, 206, 5, -19, 108, 39, 2, -232, -66, 68, 25, 57, -67, 35, -185, 131, -277, 37, 7, 64, 119, 33, -61, -157, 8, 44, -70, 61, 36, -61, -242, 24, -220, 98, 7, 12, -61, 64, -59, -52, -10, 154, 229, -69, 5, 163, -59, 8, 8, 42, -508, 97, -235, 58, 138, -32, 82, -155, -7, 7, -11, 2, -38, 43, 121, -89, -10, 40, -51, 22, -1, 36, 1, 38, -115, 71, 172, 23, 85, 35, -174, 138, 201, -122, -156, 106, 189, -34, 157, 37, -279, 57, 14, -54, 158, 64, 10, 0, -86, 2, 123, -44, 2, 81, -44, -2, 121, -68, -261, 146, -107, 737, 534, 36, 138, -400, -37, 33, -14, 147, 5, 95, -58, -104, -433, -117, 39, 8, -47, -122, -67, 13, -34, -173, -187, 78, -8, 83, 111, -1218, -15, -8, -196, -21, -6, -570, -61, 32, -50, 35, 7, -36, -12, -17, -10, 209, -48, 155, 112, 140, 118, -251, 182, -55, 64, -276, 131, -318, 52, -89, 52, 5, 140, 68, -261, -223, 205, 58, 36, -489, -83, 0, 42, 213, -18, -295, 38, 129, 74, -228, -11, -5, 247, -44, 70, -455, -6, -180, 84, -77, 148, 11, 48, -176, 39, -153, 96, 132, 36, 302, 234, -14, -256, -1, -431, -39, -47, -4, -65, -79, 107, 237, 103, -253, 65, 30, -263, 8, 0, -87, 38, 7, 47, 20, 57, 16, 56, -111, 97, 102, -68, -17, 40, 198, -154, -158, -181, -18, 21, 70, -15, -15, 129, 78, -128, 100, 51, -136, -160, 363, 40, -42, 38, 108, 37, 68, 110, 177, -86, -346, -15, -10, 60, -54, 53, -2, 11, -60, 70, 19, -5, -10, 128, 67, 81, -35, -7, -3, 11, 81, 43, -37, 31, -6, 42, 288, 9, -52, 138, 0, 107, 32, 55, -105, 28, -76, 63, -59, 39, -13, -595, -2, -171, -324, 3, -6, -7, -36, 96, -867, 4, -45, -79, 84, -46, -289, 17, -4, -47, -4, 3, -106, 30, -50, -6, -6, 16, 0, 125, 130, -41, -289, 22, -37, 219, 86, 30, -62, -75, 0, -36, -72, -72, 156, -105, 75, 36, -175, 31, -262, 54, 124, 80, -76, -255, 5, -7, -68, -96, 105, 33, 0, -54, -2, -14, -187, 42, -238, 64, 17, 41, -5, -39, 188, 46, -3, -9, 108, -252, 54, 76, -62, 36, -52, 102, -13, 318, 153, 40, -116, 57, -61, 10, 36, 21, -8, 13, -86, -104, -209, -83, 11, 56, -56, 45, -223, 5, 13, 88, -167, 150, -82, -60, -411, 38, 3, 142, -96, -109, 11, 11, -45, -76, -12, 47, -46, -16, -15, -361, -13, 113, -47, 208, 0, 14, -51, 58, -66, 33, 4, 36, -143, -75, 3, 0, -10, -64, -46, 37, 87, -258, 21, 15, 21, 30, 486, 66, 11, -10, -18, 220, -40, -654, -181, 422, -44, -20, 25, 68, -217, -143, 248, -281, 210, 73, -200, 52, 16, -45, 283, 178, -64, 29, -13, 11, -88, 29, -112, -186, -46, 9, -53, 71, 139, -28, -42, -201, 170, 41, -40, -1149, 3, 33, -187, 35, 20, 107, 165, 36, -599, 21, -13, 188, 178, -52, -45, 48, 839, 60, 76, -34, -74, -174, -3, 278, 50, -145, 36, -142, -58, 50, -87, 23, 0, 6, -12, -131, -305, 9, 126, 102, 176, 65, 79, -70, -69, -226, -139, 6, 54, -174, 60, -54, 172, -206, 4, 120, -15, -260, 1, 0, 63, -240, 2, -91, -417, -434, 132, 243, -296, -84, 0, -198, 190, -47, 8, -327, 170, -5, 59, 219, 7, -247, 132, -46, 81, -15, 5, -74, 59, -66, 15, 419, -114, -60, 206, -84, -363, 149, 99, -40, 2, -8, 41, 139, -3, 194, -189, 393, 52, 13, 75, -72, 22, 64, 4, -64, 22, -104, 44, -9, -206, -44, -503, -263, 31, 190, -113, -44, -31, -85, 37, -7, 84, -213, 45, 17, -96, -53, 116, 19, -72, -141, -53, 17, 193, -81, -291, 48, 42, -5, 135, -71, 16, 130, -371, 6, 30, -261, 47, -212, 36, 122, -156, 30, 16, -36, 16, -138, 100, -138, 9, 586, -153, 95, 12, -18, -11, -204, -161, -10, -404, -12, -8, 43, 41, 144, 30, 237, -41, 260, 8, -2, -29, -17, -172, -190, -6, -54, 36, -17, -579, -38, 106, -106, 15, 118, -338, 49, 19, 117, -127, -394, 29, -375, -28, 146, 24, 222, 14, -71, 75, 155, 100, 150, 163, -37, -74, 134, -228, 113, 45, -76, 409, -136, -107, 33, 251, -144, -2, 34, 24, -10, -7, 57, -7, 32, 65, 39, 0, -141, -44, 10, -3, -4, 35, 60, -331, -47, -50, -83, -1, 151, -60, 187, 279, 43, 257, -13, -240, 139, 103, 8, -89, 43, -51, -126, -4, -42, -106, 181, -78, 6, -42, 51, 1, 224, -44, -155, -49, 41, -196, -29, -9, 47, 1, 31, -49, 62, -99, -7680, -16, -179, 15, 0, -36, 0, -4, -107, -52, 45, 7, 77, -67, 18, -219, -12, -115, -119, -11, 73, -2, -902, 375, -333, -2, 21, -43, 64, -62, 51, -272, 127, 106, 34, 149, -805, 177, 77, -81, 14, 235, 51, 5, 33, -49, 40, -141, -11, -241, -1, -5, 28, 2, -21, 290, 195, -15, 23, 21, -281, -51, 36, -315, 3, -82, 58, 130, 18, 40, -45, 14, -18, -50, -220, -290, 40, -157, 178, -38, 44, 158, 108, 320, 36, 152, -201, -364, 7, -57, 81, 166, 28, 5, 8, -65, 232, 2, -245, 350, 55, -226, 16, -38, 32, -16, 28, 93, 70, 276, 52, 6, 14, 53, -400, 134, -335, -130, 16, 787, 99, 115, 109, -170, 71, 113, -64, 88, 8, -15, -62, -123, 184, -87, -210, 48, -7, -138, -10, 39, -56, 155, -3, -70, -10, -14, -140, 123, -84, 32, 138, 11, 106, 176, -58, -55, -185, 47, -118, 61, 8, 19, -47, -7680, -12, 40, -64, 47, -49, 58, -170, 165, 89, 53, -45, 78, 256, -16, -78, -240, -6, 21, -79, -216, -342, -155, -9, 83, 75, -384, -11, -37, -9, 153, -9, 14, -67, 91, 131, 0, 157, 46, -493, 157, 113, 62, -38, -46, -48, 58, -132, 89, -55, -73, 67, -127, -197, -82, -57, 131, 12, 1, 17, -485, -365, 46, -42, -71, -4, -1, 650, 73, 167, 69, -64, 14, 119, 65, 18, 43, -45, 611, 159, -16, 27, -234, 381, 50, 0, 267, 69, 14, -247, -89, -13, 71, 53, 29, -57, -25, 20, 41, -44, 32, -284, -1234, -163, 628, -130, 28, -362, 10, 85, 11, 0, 91, 112, -11, -235, 51, -59, 68, 12, -724, -40, -510, 334, -11, -52, -244, -541, -412, 179, -102, 113, -403, -10, -3, 6, -16, -215, 41, 1, 34, -41, 141, -275, 299, 97, 28, -47, 47, 243, 9, -16, 107, -54, -544, -380, 82, 48, 71, 68, -155, 5, 124, -238, 87, -15, 164, -101, -117, 55, 108, -162, -77, 103, -199, 41, -204, 65, -181, 189, -62, -33, 35, 229, -220, 218, -75, 49, -65, 55, -11, 48, 80, 42, -159, 49, -3, -8, 53, 47, 13, 49, 244, 63, -419, -23, -91, 51, -48, 209, -117, 36, -52, 13, -56, 36, 458, -483, -14, -26, -12, -23, -365, 82, -8, -4, 279, 79, -176, -1, 32, 100, -51, 232, -50, -132, -8, 32, -162, 16, 79, 43, 90, -190, 106, 0, -42, -133, 0, 15, 37, 33, -350, -1, -79, 21, -45, 36, -60, -5, -5, 118, 102, 7, 111, 17, -53, 92, -39, 71, -93, 106, -43, -167, -117, 18, -257, 108, 67, -266, -5, 400, 37, 0, -9, -223, 152, -14, -348, 65, -36, 43, 73, 52, -39, 19, 20, -94, -236, 20, 183, -224, -151, 123, 86, 80, 45, -75, -36, 142, -16, 50, 75, 171, 0, 30, -129, -55, -38, 102, 29, 21, -48, 40, -273, 13, -15, 169, 15, -63, 101, -24, -117, 37, 404, 19, 120, 30, -214, 20, -45, 32, 69, -110, 150, -9, -5, 36, -106, 53, 162, -131, -45, 175, -40, -62, -225, 45, -42, 88, 221, 30, -230, -277, -8, 55, 430, 0};$/;"	v
frontalface_n_stages	src/img/include/cascade.h	/^const int frontalface_n_stages=25;$/;"	v
frontalface_num_rectangles_array	src/img/include/cascade.h	/^const int8_t frontalface_num_rectangles_array[]={2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 3, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 3, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 3, 2, 3, 3, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 3, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 2, 3, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 3, 2, 2, 3, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 3, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 2, 2, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 2, 3, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 3, 3, 2, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 3, 2, 3, 3, 3, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 3, 3, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 3, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 3, 3, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 3, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 3, 2, 2, 2, 3, 2, 2, 3, 3, 3, 2, 2, 3, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 3, 2, 3, 3, 2, 3, 2, 2, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3};$/;"	v
frontalface_rectangles_array	src/img/include/cascade.h	/^const int8_t frontalface_rectangles_array[]={6, 4, 12, 9, 6, 7, 12, 3, 6, 4, 12, 7, 10, 4, 4, 7, 3, 9, 18, 9, 3, 12, 18, 3, 8, 18, 9, 6, 8, 20, 9, 2, 3, 5, 4, 19, 5, 5, 2, 19, 6, 5, 12, 16, 6, 13, 12, 8, 5, 8, 12, 6, 5, 11, 12, 3, 11, 14, 4, 10, 11, 19, 4, 5, 4, 0, 7, 6, 4, 3, 7, 3, 6, 6, 12, 6, 6, 8, 12, 2, 6, 4, 12, 7, 10, 4, 4, 7, 1, 8, 19, 12, 1, 12, 19, 4, 0, 2, 24, 3, 8, 2, 8, 3, 9, 9, 6, 15, 9, 14, 6, 5, 5, 6, 14, 10, 5, 11, 14, 5, 5, 0, 14, 9, 5, 3, 14, 3, 13, 11, 9, 6, 16, 11, 3, 6, 7, 5, 6, 10, 9, 5, 2, 10, 10, 8, 6, 10, 12, 8, 2, 10, 2, 5, 4, 9, 4, 5, 2, 9, 18, 0, 6, 11, 20, 0, 2, 11, 0, 6, 24, 13, 8, 6, 8, 13, 9, 6, 6, 9, 11, 6, 2, 9, 7, 18, 10, 6, 7, 20, 10, 2, 5, 7, 14, 12, 5, 13, 14, 6, 0, 3, 24, 3, 8, 3, 8, 3, 5, 8, 15, 6, 5, 11, 15, 3, 9, 6, 5, 14, 9, 13, 5, 7, 9, 5, 6, 10, 11, 5, 2, 10, 6, 6, 3, 12, 6, 12, 3, 6, 3, 21, 18, 3, 9, 21, 6, 3, 5, 6, 13, 6, 5, 8, 13, 2, 18, 1, 6, 15, 18, 1, 3, 15, 1, 1, 6, 15, 4, 1, 3, 15, 0, 8, 24, 15, 8, 8, 8, 15, 5, 6, 14, 12, 5, 6, 7, 6, 12, 12, 7, 6, 2, 12, 21, 12, 2, 16, 21, 4, 8, 1, 4, 10, 10, 1, 2, 10, 2, 13, 20, 10, 2, 13, 10, 10, 0, 1, 6, 13, 2, 1, 2, 13, 20, 2, 4, 13, 20, 2, 2, 13, 0, 5, 22, 19, 11, 5, 11, 19, 18, 4, 6, 9, 20, 4, 2, 9, 0, 3, 6, 11, 2, 3, 2, 11, 12, 1, 4, 9, 12, 1, 2, 9, 0, 6, 19, 3, 0, 7, 19, 1, 12, 1, 4, 9, 12, 1, 2, 9, 8, 1, 4, 9, 10, 1, 2, 9, 5, 5, 14, 14, 12, 5, 7, 7, 5, 12, 7, 7, 1, 10, 18, 2, 1, 11, 18, 1, 17, 13, 4, 11, 17, 13, 2, 11, 0, 4, 6, 9, 0, 7, 6, 3, 6, 4, 12, 9, 6, 7, 12, 3, 6, 5, 12, 6, 10, 5, 4, 6, 0, 1, 24, 5, 8, 1, 8, 5, 4, 10, 18, 6, 4, 12, 18, 2, 2, 17, 12, 6, 2, 17, 6, 3, 8, 20, 6, 3, 19, 3, 4, 13, 19, 3, 2, 13, 1, 3, 4, 13, 3, 3, 2, 13, 0, 1, 24, 23, 8, 1, 8, 23, 1, 7, 8, 12, 1, 11, 8, 4, 14, 7, 3, 14, 14, 14, 3, 7, 3, 12, 16, 6, 3, 12, 8, 3, 11, 15, 8, 3, 6, 6, 12, 6, 6, 8, 12, 2, 8, 7, 6, 12, 8, 13, 6, 6, 15, 15, 9, 6, 15, 17, 9, 2, 1, 17, 18, 3, 1, 18, 18, 1, 4, 4, 16, 12, 4, 10, 16, 6, 0, 1, 4, 20, 2, 1, 2, 20, 3, 0, 18, 2, 3, 1, 18, 1, 1, 5, 20, 14, 1, 5, 10, 7, 11, 12, 10, 7, 5, 8, 14, 12, 5, 12, 14, 4, 3, 14, 7, 9, 3, 17, 7, 3, 14, 15, 9, 6, 14, 17, 9, 2, 1, 15, 9, 6, 1, 17, 9, 2, 11, 6, 8, 10, 15, 6, 4, 5, 11, 11, 4, 5, 5, 5, 14, 14, 5, 5, 7, 7, 12, 12, 7, 7, 6, 0, 12, 5, 10, 0, 4, 5, 9, 0, 6, 9, 9, 3, 6, 3, 9, 6, 6, 9, 11, 6, 2, 9, 7, 0, 6, 9, 9, 0, 2, 9, 10, 6, 6, 9, 12, 6, 2, 9, 8, 6, 6, 9, 10, 6, 2, 9, 3, 8, 18, 4, 9, 8, 6, 4, 6, 0, 12, 9, 6, 3, 12, 3, 0, 0, 24, 6, 8, 0, 8, 6, 4, 7, 16, 12, 4, 11, 16, 4, 11, 6, 6, 6, 11, 6, 3, 6, 0, 20, 24, 3, 8, 20, 8, 3, 11, 6, 4, 9, 11, 6, 2, 9, 4, 13, 15, 4, 9, 13, 5, 4, 11, 6, 4, 9, 11, 6, 2, 9, 9, 6, 4, 9, 11, 6, 2, 9, 9, 12, 6, 12, 9, 18, 6, 6, 1, 22, 18, 2, 1, 23, 18, 1, 10, 7, 4, 10, 10, 12, 4, 5, 6, 7, 8, 10, 6, 12, 8, 5, 7, 6, 10, 6, 7, 8, 10, 2, 0, 14, 10, 4, 0, 16, 10, 2, 6, 18, 18, 2, 6, 19, 18, 1, 1, 1, 22, 3, 1, 2, 22, 1, 6, 16, 18, 3, 6, 17, 18, 1, 2, 4, 6, 15, 5, 4, 3, 15, 20, 4, 4, 10, 20, 4, 2, 10, 0, 4, 4, 10, 2, 4, 2, 10, 2, 16, 20, 6, 12, 16, 10, 3, 2, 19, 10, 3, 0, 12, 8, 9, 4, 12, 4, 9, 12, 0, 6, 9, 14, 0, 2, 9, 5, 10, 6, 6, 8, 10, 3, 6, 11, 8, 12, 6, 17, 8, 6, 3, 11, 11, 6, 3, 0, 8, 12, 6, 0, 8, 6, 3, 6, 11, 6, 3, 12, 0, 6, 9, 14, 0, 2, 9, 6, 0, 6, 9, 8, 0, 2, 9, 8, 14, 9, 6, 8, 16, 9, 2, 0, 16, 9, 6, 0, 18, 9, 2, 10, 8, 6, 10, 12, 8, 2, 10, 3, 19, 12, 3, 9, 19, 6, 3, 2, 10, 20, 2, 2, 11, 20, 1, 2, 9, 18, 12, 2, 9, 9, 6, 11, 15, 9, 6, 3, 0, 18, 24, 3, 0, 9, 24, 5, 6, 14, 10, 5, 6, 7, 5, 12, 11, 7, 5, 9, 5, 10, 12, 14, 5, 5, 6, 9, 11, 5, 6, 4, 5, 12, 12, 4, 5, 6, 6, 10, 11, 6, 6, 4, 14, 18, 3, 4, 15, 18, 1, 6, 13, 8, 8, 6, 17, 8, 4, 3, 16, 18, 6, 3, 19, 18, 3, 0, 0, 6, 6, 3, 0, 3, 6, 6, 6, 12, 18, 10, 6, 4, 18, 6, 1, 4, 14, 8, 1, 2, 14, 3, 2, 19, 2, 3, 3, 19, 1, 1, 8, 22, 13, 12, 8, 11, 13, 8, 9, 11, 4, 8, 11, 11, 2, 0, 12, 15, 10, 5, 12, 5, 10, 12, 16, 12, 6, 16, 16, 4, 6, 0, 16, 12, 6, 4, 16, 4, 6, 19, 1, 5, 12, 19, 5, 5, 4, 0, 2, 24, 4, 8, 2, 8, 4, 6, 8, 12, 4, 6, 10, 12, 2, 7, 5, 9, 6, 10, 5, 3, 6, 9, 17, 6, 6, 9, 20, 6, 3, 0, 7, 22, 15, 0, 12, 22, 5, 4, 1, 17, 9, 4, 4, 17, 3, 7, 5, 6, 10, 9, 5, 2, 10, 18, 1, 6, 8, 18, 1, 3, 8, 0, 1, 6, 7, 3, 1, 3, 7, 18, 0, 6, 22, 18, 0, 3, 22, 0, 0, 6, 22, 3, 0, 3, 22, 16, 7, 8, 16, 16, 7, 4, 16, 2, 10, 19, 6, 2, 12, 19, 2, 9, 9, 6, 12, 9, 13, 6, 4, 2, 15, 17, 6, 2, 17, 17, 2, 14, 7, 3, 14, 14, 14, 3, 7, 5, 6, 8, 10, 5, 6, 4, 5, 9, 11, 4, 5, 15, 8, 9, 11, 18, 8, 3, 11, 0, 8, 9, 11, 3, 8, 3, 11, 8, 6, 10, 18, 8, 15, 10, 9, 7, 7, 3, 14, 7, 14, 3, 7, 0, 14, 24, 8, 8, 14, 8, 8, 1, 10, 18, 14, 10, 10, 9, 14, 14, 12, 6, 6, 14, 15, 6, 3, 7, 0, 10, 16, 7, 0, 5, 8, 12, 8, 5, 8, 10, 0, 9, 6, 13, 0, 3, 6, 4, 3, 16, 4, 12, 3, 8, 4, 10, 0, 9, 6, 13, 0, 3, 6, 1, 1, 20, 4, 1, 1, 10, 2, 11, 3, 10, 2, 10, 0, 9, 6, 13, 0, 3, 6, 5, 0, 9, 6, 8, 0, 3, 6, 8, 18, 10, 6, 8, 20, 10, 2, 6, 3, 6, 9, 8, 3, 2, 9, 7, 3, 12, 6, 7, 5, 12, 2, 0, 10, 18, 3, 0, 11, 18, 1, 1, 10, 22, 3, 1, 11, 22, 1, 5, 11, 8, 8, 9, 11, 4, 8, 12, 11, 6, 6, 12, 11, 3, 6, 6, 11, 6, 6, 9, 11, 3, 6, 7, 10, 11, 6, 7, 12, 11, 2, 0, 13, 24, 4, 0, 13, 12, 2, 12, 15, 12, 2, 2, 4, 22, 12, 13, 4, 11, 6, 2, 10, 11, 6, 2, 0, 20, 17, 12, 0, 10, 17, 14, 0, 2, 24, 14, 0, 1, 24, 8, 0, 2, 24, 9, 0, 1, 24, 14, 1, 2, 22, 14, 1, 1, 22, 8, 1, 2, 22, 9, 1, 1, 22, 17, 6, 3, 18, 18, 6, 1, 18, 6, 14, 9, 6, 6, 16, 9, 2, 13, 14, 9, 4, 13, 16, 9, 2, 3, 18, 18, 3, 3, 19, 18, 1, 9, 4, 8, 18, 13, 4, 4, 9, 9, 13, 4, 9, 0, 17, 18, 3, 0, 18, 18, 1, 0, 2, 12, 4, 6, 2, 6, 4, 6, 8, 14, 6, 6, 11, 14, 3, 7, 5, 6, 6, 10, 5, 3, 6, 10, 5, 6, 16, 10, 13, 6, 8, 1, 4, 9, 16, 4, 4, 3, 16, 5, 0, 18, 9, 5, 3, 18, 3, 9, 15, 5, 8, 9, 19, 5, 4, 20, 0, 4, 9, 20, 0, 2, 9, 2, 0, 18, 3, 2, 1, 18, 1, 5, 22, 19, 2, 5, 23, 19, 1, 0, 0, 4, 9, 2, 0, 2, 9, 5, 6, 19, 18, 5, 12, 19, 6, 0, 1, 6, 9, 2, 1, 2, 9, 6, 5, 14, 12, 13, 5, 7, 6, 6, 11, 7, 6, 0, 1, 20, 2, 0, 2, 20, 1, 1, 2, 22, 3, 1, 3, 22, 1, 2, 8, 7, 9, 2, 11, 7, 3, 2, 12, 22, 4, 13, 12, 11, 2, 2, 14, 11, 2, 0, 12, 22, 4, 0, 12, 11, 2, 11, 14, 11, 2, 9, 7, 6, 11, 11, 7, 2, 11, 7, 1, 9, 6, 10, 1, 3, 6, 11, 2, 4, 10, 11, 7, 4, 5, 6, 4, 12, 12, 6, 10, 12, 6, 18, 1, 6, 15, 18, 6, 6, 5, 3, 15, 18, 3, 3, 16, 18, 1, 18, 5, 6, 9, 18, 8, 6, 3, 1, 5, 16, 6, 1, 5, 8, 3, 9, 8, 8, 3, 11, 0, 6, 9, 13, 0, 2, 9, 0, 4, 24, 14, 0, 4, 12, 7, 12, 11, 12, 7, 13, 0, 4, 13, 13, 0, 2, 13, 7, 0, 4, 13, 9, 0, 2, 13, 11, 6, 6, 9, 13, 6, 2, 9, 8, 7, 6, 9, 10, 7, 2, 9, 13, 17, 9, 6, 13, 19, 9, 2, 2, 18, 14, 6, 2, 18, 7, 3, 9, 21, 7, 3, 3, 18, 18, 4, 12, 18, 9, 2, 3, 20, 9, 2, 0, 20, 15, 4, 5, 20, 5, 4, 9, 15, 15, 9, 14, 15, 5, 9, 4, 4, 16, 4, 4, 6, 16, 2, 7, 6, 10, 6, 7, 8, 10, 2, 0, 14, 15, 10, 5, 14, 5, 10, 7, 9, 10, 14, 12, 9, 5, 7, 7, 16, 5, 7, 7, 6, 6, 9, 9, 6, 2, 9, 3, 6, 18, 3, 3, 7, 18, 1, 0, 10, 18, 3, 0, 11, 18, 1, 3, 16, 18, 4, 12, 16, 9, 2, 3, 18, 9, 2, 4, 6, 14, 6, 4, 6, 7, 3, 11, 9, 7, 3, 13, 0, 2, 18, 13, 0, 1, 18, 9, 0, 2, 18, 10, 0, 1, 18, 5, 7, 15, 10, 10, 7, 5, 10, 1, 20, 21, 4, 8, 20, 7, 4, 10, 5, 5, 18, 10, 14, 5, 9, 0, 2, 24, 6, 0, 2, 12, 3, 12, 5, 12, 3, 1, 1, 22, 8, 12, 1, 11, 4, 1, 5, 11, 4, 4, 0, 15, 9, 4, 3, 15, 3, 0, 0, 24, 19, 8, 0, 8, 19, 2, 21, 18, 3, 11, 21, 9, 3, 9, 7, 10, 4, 9, 7, 5, 4, 5, 7, 10, 4, 10, 7, 5, 4, 17, 8, 6, 16, 20, 8, 3, 8, 17, 16, 3, 8, 1, 15, 20, 4, 1, 15, 10, 2, 11, 17, 10, 2, 14, 15, 10, 6, 14, 17, 10, 2, 3, 0, 16, 9, 3, 3, 16, 3, 15, 6, 7, 15, 15, 11, 7, 5, 9, 1, 6, 13, 11, 1, 2, 13, 17, 2, 6, 14, 17, 2, 3, 14, 3, 14, 12, 10, 3, 14, 6, 5, 9, 19, 6, 5, 7, 6, 10, 6, 7, 8, 10, 2, 1, 2, 6, 14, 4, 2, 3, 14, 10, 4, 5, 12, 10, 8, 5, 4, 0, 17, 24, 5, 8, 17, 8, 5, 15, 7, 5, 12, 15, 11, 5, 4, 3, 1, 6, 12, 3, 1, 3, 6, 6, 7, 3, 6, 12, 13, 6, 6, 12, 16, 6, 3, 6, 13, 6, 6, 6, 16, 6, 3, 14, 6, 3, 16, 14, 14, 3, 8, 1, 12, 13, 6, 1, 14, 13, 2, 13, 1, 4, 9, 13, 1, 2, 9, 7, 0, 9, 6, 10, 0, 3, 6, 12, 2, 6, 9, 12, 2, 3, 9, 6, 2, 6, 9, 9, 2, 3, 9, 6, 18, 12, 6, 6, 20, 12, 2, 7, 6, 6, 9, 9, 6, 2, 9, 7, 7, 12, 3, 7, 7, 6, 3, 8, 3, 8, 21, 8, 10, 8, 7, 7, 4, 10, 12, 7, 8, 10, 4, 0, 1, 6, 9, 0, 4, 6, 3, 15, 2, 2, 20, 15, 2, 1, 20, 0, 3, 6, 9, 0, 6, 6, 3, 15, 3, 2, 21, 15, 3, 1, 21, 7, 0, 2, 23, 8, 0, 1, 23, 15, 8, 9, 4, 15, 10, 9, 2, 0, 8, 9, 4, 0, 10, 9, 2, 8, 14, 9, 6, 8, 16, 9, 2, 0, 14, 9, 6, 0, 16, 9, 2, 3, 10, 18, 4, 9, 10, 6, 4, 0, 0, 24, 19, 8, 0, 8, 19, 9, 1, 8, 12, 9, 7, 8, 6, 10, 6, 4, 10, 12, 6, 2, 10, 7, 9, 10, 12, 12, 9, 5, 6, 7, 15, 5, 6, 5, 0, 3, 19, 6, 0, 1, 19, 14, 0, 6, 10, 16, 0, 2, 10, 2, 0, 6, 12, 2, 0, 3, 6, 5, 6, 3, 6, 0, 11, 24, 2, 0, 12, 24, 1, 4, 9, 13, 4, 4, 11, 13, 2, 9, 8, 6, 9, 9, 11, 6, 3, 0, 12, 16, 4, 0, 14, 16, 2, 18, 12, 6, 9, 18, 15, 6, 3, 0, 12, 6, 9, 0, 15, 6, 3, 8, 7, 10, 4, 8, 7, 5, 4, 8, 7, 6, 9, 10, 7, 2, 9, 11, 0, 6, 9, 13, 0, 2, 9, 7, 0, 6, 9, 9, 0, 2, 9, 12, 3, 6, 15, 14, 3, 2, 15, 6, 3, 6, 15, 8, 3, 2, 15, 15, 2, 9, 4, 15, 4, 9, 2, 5, 10, 6, 7, 8, 10, 3, 7, 9, 14, 6, 10, 9, 19, 6, 5, 7, 13, 5, 8, 7, 17, 5, 4, 14, 5, 3, 16, 14, 13, 3, 8, 2, 17, 18, 3, 2, 18, 18, 1, 5, 18, 19, 3, 5, 19, 19, 1, 9, 0, 6, 9, 11, 0, 2, 9, 12, 4, 3, 18, 13, 4, 1, 18, 9, 4, 3, 18, 10, 4, 1, 18, 3, 3, 18, 9, 9, 3, 6, 9, 6, 1, 6, 14, 8, 1, 2, 14, 12, 16, 9, 6, 12, 19, 9, 3, 1, 3, 20, 16, 1, 3, 10, 8, 11, 11, 10, 8, 12, 5, 6, 12, 15, 5, 3, 6, 12, 11, 3, 6, 1, 2, 22, 16, 1, 2, 11, 8, 12, 10, 11, 8, 10, 14, 5, 10, 10, 19, 5, 5, 3, 21, 18, 3, 3, 22, 18, 1, 10, 14, 6, 10, 12, 14, 2, 10, 0, 2, 24, 4, 8, 2, 8, 4, 6, 4, 12, 9, 6, 7, 12, 3, 6, 6, 12, 5, 10, 6, 4, 5, 5, 8, 14, 12, 5, 12, 14, 4, 4, 14, 8, 10, 4, 14, 4, 5, 8, 19, 4, 5, 11, 6, 5, 14, 11, 13, 5, 7, 7, 6, 3, 16, 7, 14, 3, 8, 3, 7, 18, 8, 9, 7, 6, 8, 2, 3, 20, 2, 2, 4, 20, 1, 3, 12, 19, 6, 3, 14, 19, 2, 8, 6, 6, 9, 10, 6, 2, 9, 16, 6, 6, 14, 16, 6, 3, 14, 7, 9, 6, 12, 9, 9, 2, 12, 18, 6, 6, 18, 21, 6, 3, 9, 18, 15, 3, 9, 0, 6, 6, 18, 0, 6, 3, 9, 3, 15, 3, 9, 18, 2, 6, 9, 18, 5, 6, 3, 3, 18, 15, 6, 3, 20, 15, 2, 18, 2, 6, 9, 18, 5, 6, 3, 0, 2, 6, 9, 0, 5, 6, 3, 5, 10, 18, 2, 5, 11, 18, 1, 6, 0, 12, 6, 6, 2, 12, 2, 10, 0, 6, 9, 12, 0, 2, 9, 8, 0, 6, 9, 10, 0, 2, 9, 15, 12, 9, 6, 15, 14, 9, 2, 3, 6, 13, 6, 3, 8, 13, 2, 15, 12, 9, 6, 15, 14, 9, 2, 2, 5, 6, 15, 5, 5, 3, 15, 8, 8, 9, 6, 11, 8, 3, 6, 8, 6, 3, 14, 8, 13, 3, 7, 15, 12, 9, 6, 15, 14, 9, 2, 4, 12, 10, 4, 9, 12, 5, 4, 13, 1, 4, 19, 13, 1, 2, 19, 7, 1, 4, 19, 9, 1, 2, 19, 18, 9, 6, 9, 18, 12, 6, 3, 1, 21, 18, 3, 1, 22, 18, 1, 14, 13, 10, 9, 14, 16, 10, 3, 1, 13, 22, 4, 1, 13, 11, 2, 12, 15, 11, 2, 4, 6, 16, 6, 12, 6, 8, 3, 4, 9, 8, 3, 1, 0, 18, 22, 1, 0, 9, 11, 10, 11, 9, 11, 10, 7, 8, 14, 14, 7, 4, 7, 10, 14, 4, 7, 0, 4, 6, 20, 0, 4, 3, 10, 3, 14, 3, 10, 15, 0, 6, 9, 17, 0, 2, 9, 3, 0, 6, 9, 5, 0, 2, 9, 15, 12, 6, 12, 18, 12, 3, 6, 15, 18, 3, 6, 3, 12, 6, 12, 3, 12, 3, 6, 6, 18, 3, 6, 15, 12, 9, 6, 15, 14, 9, 2, 0, 12, 9, 6, 0, 14, 9, 2, 4, 14, 19, 3, 4, 15, 19, 1, 2, 13, 19, 3, 2, 14, 19, 1, 14, 15, 10, 6, 14, 17, 10, 2, 6, 0, 10, 12, 6, 0, 5, 6, 11, 6, 5, 6, 17, 1, 6, 12, 20, 1, 3, 6, 17, 7, 3, 6, 1, 1, 6, 12, 1, 1, 3, 6, 4, 7, 3, 6, 16, 14, 6, 9, 16, 17, 6, 3, 7, 3, 9, 12, 7, 9, 9, 6, 12, 1, 4, 12, 12, 7, 4, 6, 4, 0, 14, 8, 4, 4, 14, 4, 10, 6, 6, 9, 12, 6, 2, 9, 2, 10, 18, 3, 8, 10, 6, 3, 15, 15, 9, 6, 15, 17, 9, 2, 0, 1, 21, 23, 7, 1, 7, 23, 6, 9, 17, 4, 6, 11, 17, 2, 1, 0, 11, 18, 1, 6, 11, 6, 6, 15, 13, 6, 6, 17, 13, 2, 0, 15, 9, 6, 0, 17, 9, 2, 8, 7, 15, 4, 13, 7, 5, 4, 9, 12, 6, 9, 9, 15, 6, 3, 6, 8, 18, 3, 12, 8, 6, 3, 0, 14, 24, 4, 8, 14, 8, 4, 16, 10, 3, 12, 16, 16, 3, 6, 0, 3, 24, 3, 0, 4, 24, 1, 14, 17, 10, 6, 14, 19, 10, 2, 1, 13, 18, 3, 7, 13, 6, 3, 5, 0, 18, 9, 5, 3, 18, 3, 4, 3, 16, 9, 4, 6, 16, 3, 16, 5, 3, 12, 16, 11, 3, 6, 0, 7, 18, 4, 6, 7, 6, 4, 10, 6, 6, 9, 12, 6, 2, 9, 9, 8, 6, 10, 11, 8, 2, 10, 9, 15, 6, 9, 11, 15, 2, 9, 3, 1, 18, 21, 12, 1, 9, 21, 6, 8, 12, 7, 6, 8, 6, 7, 8, 5, 6, 9, 10, 5, 2, 9, 0, 2, 24, 4, 8, 2, 8, 4, 14, 7, 5, 12, 14, 11, 5, 4, 5, 7, 5, 12, 5, 11, 5, 4, 9, 6, 6, 9, 11, 6, 2, 9, 0, 1, 6, 17, 3, 1, 3, 17, 3, 1, 19, 9, 3, 4, 19, 3, 3, 18, 12, 6, 3, 18, 6, 3, 9, 21, 6, 3, 20, 4, 4, 19, 20, 4, 2, 19, 0, 16, 10, 7, 5, 16, 5, 7, 8, 7, 10, 12, 13, 7, 5, 6, 8, 13, 5, 6, 6, 7, 10, 12, 6, 7, 5, 6, 11, 13, 5, 6, 9, 2, 9, 6, 12, 2, 3, 6, 1, 20, 21, 4, 8, 20, 7, 4, 9, 12, 9, 6, 9, 14, 9, 2, 7, 2, 9, 6, 10, 2, 3, 6, 13, 0, 4, 14, 13, 0, 2, 14, 7, 0, 4, 14, 9, 0, 2, 14, 14, 15, 9, 6, 14, 17, 9, 2, 2, 8, 18, 5, 8, 8, 6, 5, 18, 3, 6, 11, 20, 3, 2, 11, 6, 5, 11, 14, 6, 12, 11, 7, 18, 4, 6, 9, 18, 7, 6, 3, 7, 6, 9, 6, 7, 8, 9, 2, 18, 4, 6, 9, 18, 7, 6, 3, 0, 4, 6, 9, 0, 7, 6, 3, 9, 4, 9, 4, 9, 6, 9, 2, 0, 22, 19, 2, 0, 23, 19, 1, 17, 14, 6, 9, 17, 17, 6, 3, 1, 14, 6, 9, 1, 17, 6, 3, 14, 11, 4, 9, 14, 11, 2, 9, 6, 11, 4, 9, 8, 11, 2, 9, 3, 9, 18, 7, 9, 9, 6, 7, 9, 12, 6, 10, 9, 17, 6, 5, 12, 0, 6, 9, 14, 0, 2, 9, 6, 0, 6, 9, 8, 0, 2, 9, 6, 17, 18, 3, 6, 18, 18, 1, 1, 17, 18, 3, 1, 18, 18, 1, 10, 6, 11, 12, 10, 12, 11, 6, 5, 6, 14, 6, 5, 6, 7, 3, 12, 9, 7, 3, 5, 4, 15, 4, 5, 6, 15, 2, 0, 0, 22, 2, 0, 1, 22, 1, 0, 0, 24, 24, 8, 0, 8, 24, 1, 15, 18, 4, 10, 15, 9, 4, 6, 8, 12, 9, 6, 11, 12, 3, 4, 12, 7, 12, 4, 16, 7, 4, 1, 2, 22, 6, 12, 2, 11, 3, 1, 5, 11, 3, 5, 20, 14, 3, 12, 20, 7, 3, 0, 0, 24, 16, 12, 0, 12, 8, 0, 8, 12, 8, 3, 13, 18, 4, 3, 13, 9, 2, 12, 15, 9, 2, 2, 10, 22, 2, 2, 11, 22, 1, 6, 3, 11, 8, 6, 7, 11, 4, 14, 5, 6, 6, 14, 8, 6, 3, 0, 7, 24, 6, 0, 9, 24, 2, 14, 0, 10, 10, 19, 0, 5, 5, 14, 5, 5, 5, 0, 0, 10, 10, 0, 0, 5, 5, 5, 5, 5, 5, 0, 1, 24, 4, 12, 1, 12, 2, 0, 3, 12, 2, 0, 17, 18, 3, 0, 18, 18, 1, 5, 15, 16, 6, 13, 15, 8, 3, 5, 18, 8, 3, 3, 15, 16, 6, 3, 15, 8, 3, 11, 18, 8, 3, 6, 16, 18, 3, 6, 17, 18, 1, 0, 13, 21, 10, 0, 18, 21, 5, 13, 0, 6, 24, 15, 0, 2, 24, 7, 4, 6, 11, 9, 4, 2, 11, 9, 5, 9, 6, 12, 5, 3, 6, 1, 4, 2, 20, 1, 14, 2, 10, 13, 0, 6, 24, 15, 0, 2, 24, 5, 0, 6, 24, 7, 0, 2, 24, 16, 7, 6, 14, 19, 7, 3, 7, 16, 14, 3, 7, 4, 7, 4, 12, 6, 7, 2, 12, 0, 5, 24, 14, 8, 5, 8, 14, 5, 13, 10, 6, 5, 15, 10, 2, 12, 0, 6, 9, 14, 0, 2, 9, 2, 7, 6, 14, 2, 7, 3, 7, 5, 14, 3, 7, 15, 2, 9, 15, 18, 2, 3, 15, 0, 2, 6, 9, 2, 2, 2, 9, 12, 2, 10, 14, 17, 2, 5, 7, 12, 9, 5, 7, 11, 6, 2, 18, 12, 6, 1, 18, 9, 5, 15, 6, 14, 5, 5, 6, 8, 6, 6, 10, 10, 6, 2, 10, 12, 0, 6, 9, 14, 0, 2, 9, 3, 3, 9, 7, 6, 3, 3, 7, 6, 7, 14, 3, 6, 7, 7, 3, 7, 7, 8, 6, 11, 7, 4, 6, 12, 7, 7, 12, 12, 13, 7, 6, 10, 6, 4, 18, 10, 6, 2, 9, 12, 15, 2, 9, 16, 14, 6, 9, 16, 17, 6, 3, 4, 0, 6, 13, 6, 0, 2, 13, 2, 2, 21, 3, 9, 2, 7, 3, 5, 4, 5, 12, 5, 8, 5, 4, 10, 3, 4, 10, 10, 8, 4, 5, 8, 4, 5, 8, 8, 8, 5, 4, 6, 0, 11, 9, 6, 3, 11, 3, 6, 6, 12, 5, 10, 6, 4, 5, 0, 0, 24, 5, 8, 0, 8, 5, 1, 10, 23, 6, 1, 12, 23, 2, 3, 21, 18, 3, 9, 21, 6, 3, 3, 6, 21, 6, 3, 8, 21, 2, 0, 5, 6, 12, 2, 5, 2, 12, 10, 2, 4, 15, 10, 7, 4, 5, 8, 7, 8, 10, 8, 12, 8, 5, 5, 7, 15, 12, 10, 7, 5, 12, 0, 17, 10, 6, 0, 19, 10, 2, 14, 18, 9, 6, 14, 20, 9, 2, 9, 6, 6, 16, 9, 14, 6, 8, 14, 18, 9, 6, 14, 20, 9, 2, 1, 18, 9, 6, 1, 20, 9, 2, 15, 9, 9, 6, 15, 11, 9, 2, 0, 9, 9, 6, 0, 11, 9, 2, 17, 3, 6, 9, 19, 3, 2, 9, 2, 17, 18, 3, 2, 18, 18, 1, 3, 15, 21, 6, 3, 17, 21, 2, 9, 17, 6, 6, 9, 20, 6, 3, 18, 3, 6, 9, 18, 6, 6, 3, 0, 3, 6, 9, 0, 6, 6, 3, 4, 0, 16, 10, 12, 0, 8, 5, 4, 5, 8, 5, 2, 0, 10, 16, 2, 0, 5, 8, 7, 8, 5, 8, 14, 0, 10, 5, 14, 0, 5, 5, 0, 0, 10, 5, 5, 0, 5, 5, 18, 3, 6, 10, 18, 3, 3, 10, 5, 11, 12, 6, 5, 11, 6, 3, 11, 14, 6, 3, 21, 0, 3, 18, 22, 0, 1, 18, 6, 0, 6, 9, 8, 0, 2, 9, 8, 8, 9, 7, 11, 8, 3, 7, 7, 12, 8, 10, 7, 12, 4, 5, 11, 17, 4, 5, 21, 0, 3, 18, 22, 0, 1, 18, 10, 6, 4, 9, 12, 6, 2, 9, 15, 0, 9, 6, 15, 2, 9, 2, 0, 2, 24, 3, 0, 3, 24, 1, 11, 7, 6, 9, 13, 7, 2, 9, 7, 6, 6, 10, 9, 6, 2, 10, 12, 1, 6, 12, 14, 1, 2, 12, 6, 4, 12, 12, 6, 10, 12, 6, 14, 3, 2, 21, 14, 3, 1, 21, 6, 1, 12, 8, 6, 5, 12, 4, 3, 0, 18, 8, 3, 4, 18, 4, 3, 0, 18, 3, 3, 1, 18, 1, 0, 13, 24, 4, 12, 13, 12, 2, 0, 15, 12, 2, 10, 5, 4, 9, 12, 5, 2, 9, 11, 1, 6, 9, 13, 1, 2, 9, 6, 2, 6, 22, 8, 2, 2, 22, 16, 10, 8, 14, 20, 10, 4, 7, 16, 17, 4, 7, 3, 4, 16, 15, 3, 9, 16, 5, 16, 10, 8, 14, 20, 10, 4, 7, 16, 17, 4, 7, 0, 10, 8, 14, 0, 10, 4, 7, 4, 17, 4, 7, 10, 14, 11, 6, 10, 17, 11, 3, 0, 7, 24, 9, 8, 7, 8, 9, 13, 1, 4, 16, 13, 1, 2, 16, 7, 1, 4, 16, 9, 1, 2, 16, 5, 5, 16, 8, 13, 5, 8, 4, 5, 9, 8, 4, 0, 9, 6, 9, 0, 12, 6, 3, 6, 16, 18, 3, 6, 17, 18, 1, 3, 12, 6, 9, 3, 15, 6, 3, 8, 14, 9, 6, 8, 16, 9, 2, 2, 13, 8, 10, 2, 13, 4, 5, 6, 18, 4, 5, 15, 5, 3, 18, 15, 11, 3, 6, 3, 5, 18, 3, 3, 6, 18, 1, 17, 5, 6, 11, 19, 5, 2, 11, 1, 5, 6, 11, 3, 5, 2, 11, 19, 1, 4, 9, 19, 1, 2, 9, 1, 1, 4, 9, 3, 1, 2, 9, 4, 15, 18, 9, 4, 15, 9, 9, 6, 9, 12, 4, 6, 11, 12, 2, 15, 2, 9, 6, 15, 4, 9, 2, 0, 2, 9, 6, 0, 4, 9, 2, 15, 0, 6, 17, 17, 0, 2, 17, 3, 0, 6, 17, 5, 0, 2, 17, 8, 17, 9, 4, 8, 19, 9, 2, 6, 5, 3, 18, 6, 11, 3, 6, 5, 2, 14, 12, 5, 8, 14, 6, 10, 2, 3, 12, 10, 8, 3, 6, 10, 7, 14, 15, 10, 12, 14, 5, 0, 7, 14, 15, 0, 12, 14, 5, 15, 0, 9, 6, 15, 2, 9, 2, 0, 0, 9, 6, 0, 2, 9, 2, 12, 6, 6, 14, 14, 6, 2, 14, 9, 7, 6, 9, 11, 7, 2, 9, 12, 6, 6, 15, 14, 6, 2, 15, 6, 6, 6, 15, 8, 6, 2, 15, 15, 3, 8, 9, 15, 3, 4, 9, 0, 0, 9, 21, 3, 0, 3, 21, 11, 9, 8, 12, 11, 13, 8, 4, 6, 7, 10, 12, 6, 7, 5, 6, 11, 13, 5, 6, 10, 6, 4, 18, 12, 6, 2, 9, 10, 15, 2, 9, 0, 0, 6, 9, 0, 3, 6, 3, 3, 14, 18, 3, 3, 15, 18, 1, 3, 14, 8, 10, 3, 14, 4, 5, 7, 19, 4, 5, 0, 12, 24, 4, 12, 12, 12, 2, 0, 14, 12, 2, 0, 2, 3, 20, 1, 2, 1, 20, 12, 16, 10, 8, 17, 16, 5, 4, 12, 20, 5, 4, 2, 16, 10, 8, 2, 16, 5, 4, 7, 20, 5, 4, 7, 0, 10, 9, 7, 3, 10, 3, 0, 0, 24, 3, 8, 0, 8, 3, 3, 8, 15, 4, 3, 10, 15, 2, 6, 5, 12, 6, 10, 5, 4, 6, 5, 13, 14, 6, 5, 16, 14, 3, 11, 14, 4, 10, 11, 19, 4, 5, 0, 6, 6, 7, 3, 6, 3, 7, 18, 0, 6, 6, 18, 0, 3, 6, 3, 1, 18, 3, 3, 2, 18, 1, 9, 6, 14, 18, 9, 12, 14, 6, 0, 0, 6, 6, 3, 0, 3, 6, 13, 11, 6, 6, 13, 11, 3, 6, 0, 20, 24, 3, 8, 20, 8, 3, 13, 11, 6, 7, 13, 11, 3, 7, 4, 12, 10, 6, 4, 14, 10, 2, 13, 11, 6, 6, 13, 11, 3, 6, 5, 11, 6, 7, 8, 11, 3, 7, 7, 4, 11, 12, 7, 8, 11, 4, 6, 15, 10, 4, 6, 17, 10, 2, 14, 0, 6, 9, 16, 0, 2, 9, 4, 0, 6, 9, 6, 0, 2, 9, 11, 2, 4, 15, 11, 7, 4, 5, 0, 0, 20, 3, 0, 1, 20, 1, 13, 18, 10, 6, 13, 20, 10, 2, 2, 7, 6, 11, 5, 7, 3, 11, 10, 14, 10, 9, 10, 17, 10, 3, 8, 2, 4, 9, 10, 2, 2, 9, 14, 3, 10, 4, 14, 3, 5, 4, 6, 6, 12, 6, 6, 6, 6, 3, 12, 9, 6, 3, 8, 8, 8, 10, 12, 8, 4, 5, 8, 13, 4, 5, 7, 4, 4, 16, 7, 12, 4, 8, 8, 8, 9, 4, 8, 10, 9, 2, 5, 2, 14, 9, 5, 5, 14, 3, 3, 16, 19, 8, 3, 20, 19, 4, 0, 0, 10, 8, 5, 0, 5, 8, 5, 2, 16, 18, 5, 2, 8, 18, 0, 11, 24, 11, 8, 11, 8, 11, 3, 3, 18, 5, 3, 3, 9, 5, 1, 16, 18, 3, 1, 17, 18, 1, 5, 17, 18, 3, 5, 18, 18, 1, 1, 13, 9, 6, 1, 15, 9, 2, 1, 9, 23, 10, 1, 14, 23, 5, 3, 7, 18, 3, 3, 8, 18, 1, 6, 8, 12, 3, 6, 8, 6, 3, 6, 2, 3, 22, 7, 2, 1, 22, 14, 17, 10, 6, 14, 19, 10, 2, 1, 18, 10, 6, 1, 20, 10, 2, 11, 3, 6, 12, 13, 3, 2, 12, 10, 6, 4, 9, 12, 6, 2, 9, 11, 0, 6, 9, 13, 0, 2, 9, 7, 0, 6, 9, 9, 0, 2, 9, 12, 10, 9, 6, 15, 10, 3, 6, 2, 11, 6, 9, 5, 11, 3, 9, 14, 5, 3, 19, 15, 5, 1, 19, 6, 6, 9, 6, 6, 8, 9, 2, 14, 5, 3, 19, 15, 5, 1, 19, 0, 3, 6, 9, 0, 6, 6, 3, 5, 21, 18, 3, 5, 22, 18, 1, 1, 10, 18, 4, 7, 10, 6, 4, 13, 4, 8, 10, 17, 4, 4, 5, 13, 9, 4, 5, 7, 8, 9, 6, 10, 8, 3, 6, 12, 9, 9, 8, 15, 9, 3, 8, 0, 6, 5, 12, 0, 10, 5, 4, 7, 6, 14, 6, 14, 6, 7, 3, 7, 9, 7, 3, 7, 5, 3, 19, 8, 5, 1, 19, 8, 4, 15, 20, 13, 4, 5, 20, 1, 4, 15, 20, 6, 4, 5, 20, 13, 10, 6, 6, 13, 10, 3, 6, 5, 10, 6, 6, 8, 10, 3, 6, 14, 2, 6, 14, 17, 2, 3, 7, 14, 9, 3, 7, 4, 2, 6, 14, 4, 2, 3, 7, 7, 9, 3, 7, 12, 4, 6, 7, 12, 4, 3, 7, 9, 4, 6, 9, 11, 4, 2, 9, 11, 4, 8, 10, 11, 4, 4, 10, 5, 4, 8, 10, 9, 4, 4, 10, 8, 18, 10, 6, 8, 20, 10, 2, 1, 18, 21, 6, 1, 20, 21, 2, 9, 2, 12, 6, 9, 2, 6, 6, 3, 2, 12, 6, 9, 2, 6, 6, 12, 5, 12, 6, 18, 5, 6, 3, 12, 8, 6, 3, 8, 8, 6, 9, 8, 11, 6, 3, 2, 7, 20, 6, 2, 9, 20, 2, 0, 5, 12, 6, 0, 5, 6, 3, 6, 8, 6, 3, 14, 14, 8, 10, 18, 14, 4, 5, 14, 19, 4, 5, 2, 14, 8, 10, 2, 14, 4, 5, 6, 19, 4, 5, 2, 11, 20, 13, 2, 11, 10, 13, 6, 9, 12, 5, 12, 9, 6, 5, 5, 6, 16, 6, 13, 6, 8, 3, 5, 9, 8, 3, 1, 19, 9, 4, 1, 21, 9, 2, 7, 5, 12, 5, 11, 5, 4, 5, 3, 5, 14, 12, 3, 5, 7, 6, 10, 11, 7, 6, 9, 4, 9, 6, 12, 4, 3, 6, 2, 6, 19, 3, 2, 7, 19, 1, 18, 10, 6, 9, 18, 13, 6, 3, 3, 7, 18, 2, 3, 8, 18, 1, 20, 2, 4, 18, 22, 2, 2, 9, 20, 11, 2, 9, 2, 18, 20, 3, 2, 19, 20, 1, 1, 9, 22, 3, 1, 10, 22, 1, 0, 2, 4, 18, 0, 2, 2, 9, 2, 11, 2, 9, 19, 0, 4, 23, 19, 0, 2, 23, 0, 3, 6, 19, 3, 3, 3, 19, 18, 2, 6, 9, 20, 2, 2, 9, 0, 5, 10, 6, 0, 7, 10, 2, 7, 0, 12, 12, 13, 0, 6, 6, 7, 6, 6, 6, 0, 3, 24, 6, 0, 3, 12, 3, 12, 6, 12, 3, 10, 14, 4, 10, 10, 19, 4, 5, 8, 9, 4, 15, 8, 14, 4, 5, 4, 11, 17, 6, 4, 14, 17, 3, 2, 5, 18, 8, 2, 5, 9, 4, 11, 9, 9, 4, 7, 6, 14, 6, 14, 6, 7, 3, 7, 9, 7, 3, 3, 6, 14, 6, 3, 6, 7, 3, 10, 9, 7, 3, 16, 5, 3, 18, 17, 5, 1, 18, 5, 5, 3, 18, 6, 5, 1, 18, 10, 10, 14, 4, 10, 12, 14, 2, 4, 10, 9, 4, 4, 12, 9, 2, 2, 0, 18, 9, 2, 3, 18, 3, 6, 3, 12, 8, 10, 3, 4, 8, 1, 1, 8, 5, 5, 1, 4, 5, 12, 7, 7, 8, 12, 11, 7, 4, 0, 12, 22, 4, 0, 14, 22, 2, 15, 6, 4, 15, 15, 11, 4, 5, 5, 7, 7, 8, 5, 11, 7, 4, 8, 18, 9, 4, 8, 20, 9, 2, 1, 2, 22, 4, 1, 4, 22, 2, 17, 3, 6, 17, 19, 3, 2, 17, 8, 2, 8, 18, 8, 11, 8, 9, 17, 0, 6, 12, 20, 0, 3, 6, 17, 6, 3, 6, 7, 0, 6, 9, 9, 0, 2, 9, 15, 5, 9, 12, 15, 11, 9, 6, 2, 22, 18, 2, 2, 23, 18, 1, 10, 10, 12, 6, 16, 10, 6, 3, 10, 13, 6, 3, 0, 1, 4, 11, 2, 1, 2, 11, 20, 0, 4, 10, 20, 0, 2, 10, 1, 3, 6, 17, 3, 3, 2, 17, 15, 15, 9, 6, 15, 17, 9, 2, 0, 13, 8, 9, 0, 16, 8, 3, 16, 8, 6, 12, 16, 12, 6, 4, 2, 8, 6, 12, 2, 12, 6, 4, 10, 2, 4, 15, 10, 7, 4, 5, 1, 5, 19, 3, 1, 6, 19, 1, 11, 8, 9, 7, 14, 8, 3, 7, 3, 8, 12, 9, 3, 11, 12, 3, 3, 6, 18, 3, 3, 7, 18, 1, 10, 0, 4, 12, 10, 6, 4, 6, 3, 9, 18, 14, 3, 9, 9, 14, 0, 0, 4, 9, 2, 0, 2, 9, 12, 5, 4, 18, 12, 5, 2, 18, 8, 5, 4, 18, 10, 5, 2, 18, 10, 5, 6, 10, 12, 5, 2, 10, 9, 4, 4, 11, 11, 4, 2, 11, 4, 16, 18, 3, 4, 17, 18, 1, 0, 16, 20, 3, 0, 17, 20, 1, 9, 9, 6, 12, 9, 13, 6, 4, 8, 13, 8, 8, 8, 17, 8, 4, 13, 10, 3, 12, 13, 16, 3, 6, 5, 9, 14, 14, 5, 9, 7, 7, 12, 16, 7, 7, 0, 0, 24, 10, 12, 0, 12, 5, 0, 5, 12, 5, 1, 11, 18, 2, 1, 12, 18, 1, 19, 5, 5, 12, 19, 9, 5, 4, 0, 5, 5, 12, 0, 9, 5, 4, 16, 6, 8, 18, 20, 6, 4, 9, 16, 15, 4, 9, 0, 6, 8, 18, 0, 6, 4, 9, 4, 15, 4, 9, 12, 5, 12, 12, 18, 5, 6, 6, 12, 11, 6, 6, 7, 6, 6, 9, 9, 6, 2, 9, 9, 13, 6, 11, 11, 13, 2, 11, 0, 5, 12, 12, 0, 5, 6, 6, 6, 11, 6, 6, 1, 2, 23, 3, 1, 3, 23, 1, 1, 15, 19, 3, 1, 16, 19, 1, 13, 17, 11, 4, 13, 19, 11, 2, 0, 13, 8, 5, 4, 13, 4, 5, 12, 10, 10, 4, 12, 10, 5, 4, 4, 6, 9, 9, 4, 9, 9, 3, 15, 14, 9, 6, 15, 16, 9, 2, 1, 12, 9, 6, 1, 14, 9, 2, 3, 10, 20, 8, 13, 10, 10, 4, 3, 14, 10, 4, 2, 0, 9, 18, 5, 0, 3, 18, 13, 11, 9, 10, 16, 11, 3, 10, 1, 2, 8, 5, 5, 2, 4, 5, 3, 4, 21, 6, 10, 4, 7, 6, 7, 0, 10, 14, 7, 0, 5, 7, 12, 7, 5, 7, 12, 17, 12, 4, 12, 19, 12, 2, 0, 6, 23, 4, 0, 8, 23, 2, 13, 10, 8, 10, 17, 10, 4, 5, 13, 15, 4, 5, 0, 16, 18, 3, 0, 17, 18, 1, 15, 16, 9, 4, 15, 18, 9, 2, 0, 16, 9, 4, 0, 18, 9, 2, 13, 11, 6, 6, 13, 11, 3, 6, 5, 11, 6, 6, 8, 11, 3, 6, 0, 3, 24, 6, 12, 3, 12, 3, 0, 6, 12, 3, 2, 4, 18, 3, 2, 5, 18, 1, 0, 0, 24, 4, 12, 0, 12, 2, 0, 2, 12, 2, 1, 16, 18, 3, 1, 17, 18, 1, 15, 15, 9, 6, 15, 17, 9, 2, 0, 15, 9, 6, 0, 17, 9, 2, 6, 17, 18, 3, 6, 18, 18, 1, 8, 8, 6, 10, 10, 8, 2, 10, 10, 6, 6, 9, 12, 6, 2, 9, 8, 8, 5, 8, 8, 12, 5, 4, 12, 8, 6, 8, 12, 12, 6, 4, 6, 5, 6, 11, 8, 5, 2, 11, 13, 6, 8, 9, 13, 9, 8, 3, 1, 7, 21, 6, 1, 9, 21, 2, 15, 5, 3, 12, 15, 11, 3, 6, 6, 9, 11, 12, 6, 13, 11, 4, 13, 8, 10, 8, 18, 8, 5, 4, 13, 12, 5, 4, 5, 8, 12, 3, 11, 8, 6, 3, 6, 11, 18, 4, 12, 11, 6, 4, 0, 0, 22, 22, 0, 11, 22, 11, 11, 2, 6, 8, 11, 6, 6, 4, 9, 0, 6, 9, 11, 0, 2, 9, 10, 0, 6, 9, 12, 0, 2, 9, 8, 3, 6, 14, 8, 3, 3, 7, 11, 10, 3, 7, 3, 10, 18, 8, 9, 10, 6, 8, 10, 0, 3, 14, 10, 7, 3, 7, 4, 3, 16, 20, 4, 13, 16, 10, 9, 4, 6, 10, 11, 4, 2, 10, 5, 0, 16, 4, 5, 2, 16, 2, 2, 5, 18, 4, 8, 5, 6, 4, 13, 0, 6, 9, 15, 0, 2, 9, 8, 4, 8, 5, 12, 4, 4, 5, 12, 10, 10, 4, 12, 10, 5, 4, 2, 10, 10, 4, 7, 10, 5, 4, 7, 11, 12, 5, 11, 11, 4, 5, 3, 10, 8, 10, 3, 10, 4, 5, 7, 15, 4, 5, 11, 12, 9, 8, 14, 12, 3, 8, 0, 21, 24, 3, 8, 21, 8, 3, 3, 20, 18, 4, 9, 20, 6, 4, 1, 15, 9, 6, 1, 17, 9, 2, 11, 17, 10, 4, 11, 19, 10, 2, 9, 12, 4, 12, 9, 18, 4, 6, 9, 6, 9, 6, 12, 6, 3, 6, 1, 13, 6, 9, 1, 16, 6, 3, 6, 16, 12, 4, 6, 18, 12, 2, 1, 5, 20, 3, 1, 6, 20, 1, 8, 1, 9, 9, 8, 4, 9, 3, 2, 19, 9, 4, 2, 21, 9, 2, 11, 1, 4, 18, 11, 7, 4, 6, 7, 2, 8, 12, 7, 2, 4, 6, 11, 8, 4, 6, 11, 10, 9, 8, 14, 10, 3, 8, 5, 11, 12, 5, 9, 11, 4, 5, 11, 9, 9, 6, 14, 9, 3, 6, 5, 10, 6, 9, 7, 10, 2, 9, 4, 7, 5, 12, 4, 11, 5, 4, 2, 0, 21, 6, 9, 0, 7, 6, 7, 6, 10, 6, 7, 8, 10, 2, 9, 0, 6, 15, 11, 0, 2, 15, 2, 2, 18, 2, 2, 3, 18, 1, 8, 17, 8, 6, 8, 20, 8, 3, 3, 0, 18, 2, 3, 1, 18, 1, 8, 0, 9, 6, 11, 0, 3, 6, 0, 17, 18, 3, 0, 18, 18, 1, 6, 7, 12, 5, 10, 7, 4, 5, 0, 3, 6, 9, 2, 3, 2, 9, 20, 2, 4, 9, 20, 2, 2, 9, 0, 2, 4, 9, 2, 2, 2, 9, 0, 1, 24, 4, 12, 1, 12, 2, 0, 3, 12, 2, 0, 16, 9, 6, 0, 18, 9, 2, 14, 13, 9, 6, 14, 15, 9, 2, 0, 15, 19, 3, 0, 16, 19, 1, 1, 5, 22, 12, 12, 5, 11, 6, 1, 11, 11, 6, 5, 13, 6, 6, 8, 13, 3, 6, 4, 2, 20, 3, 4, 3, 20, 1, 8, 14, 6, 10, 10, 14, 2, 10, 6, 12, 16, 6, 14, 12, 8, 3, 6, 15, 8, 3, 2, 13, 8, 9, 2, 16, 8, 3, 11, 8, 6, 14, 14, 8, 3, 7, 11, 15, 3, 7, 2, 12, 16, 6, 2, 12, 8, 3, 10, 15, 8, 3, 5, 16, 16, 8, 5, 20, 16, 4, 9, 1, 4, 12, 9, 7, 4, 6, 8, 2, 8, 10, 12, 2, 4, 5, 8, 7, 4, 5, 6, 6, 12, 6, 6, 6, 6, 3, 12, 9, 6, 3, 10, 7, 6, 9, 12, 7, 2, 9, 0, 0, 8, 12, 0, 0, 4, 6, 4, 6, 4, 6, 18, 8, 6, 9, 18, 11, 6, 3, 2, 12, 6, 6, 5, 12, 3, 6, 3, 21, 21, 3, 10, 21, 7, 3, 2, 0, 16, 6, 2, 3, 16, 3, 13, 6, 7, 6, 13, 9, 7, 3, 6, 4, 4, 14, 6, 11, 4, 7, 9, 7, 6, 9, 11, 7, 2, 9, 7, 8, 6, 14, 7, 8, 3, 7, 10, 15, 3, 7, 18, 8, 4, 16, 18, 16, 4, 8, 9, 14, 6, 10, 11, 14, 2, 10, 6, 11, 12, 5, 10, 11, 4, 5, 0, 12, 23, 3, 0, 13, 23, 1, 13, 0, 6, 12, 15, 0, 2, 12, 0, 10, 12, 5, 4, 10, 4, 5, 13, 2, 10, 4, 13, 4, 10, 2, 5, 0, 6, 12, 7, 0, 2, 12, 11, 6, 9, 6, 14, 6, 3, 6, 4, 6, 9, 6, 7, 6, 3, 6, 6, 11, 18, 13, 12, 11, 6, 13, 0, 11, 18, 13, 6, 11, 6, 13, 12, 16, 12, 6, 16, 16, 4, 6, 0, 6, 21, 3, 0, 7, 21, 1, 12, 16, 12, 6, 16, 16, 4, 6, 5, 7, 6, 14, 5, 14, 6, 7, 5, 10, 19, 2, 5, 11, 19, 1, 5, 4, 14, 4, 5, 6, 14, 2, 3, 18, 18, 4, 9, 18, 6, 4, 7, 0, 4, 9, 9, 0, 2, 9, 13, 3, 11, 4, 13, 5, 11, 2, 2, 0, 9, 6, 5, 0, 3, 6, 19, 1, 4, 23, 19, 1, 2, 23, 1, 1, 4, 23, 3, 1, 2, 23, 5, 16, 18, 3, 5, 17, 18, 1, 0, 3, 11, 4, 0, 5, 11, 2, 2, 16, 20, 3, 2, 17, 20, 1, 5, 3, 13, 4, 5, 5, 13, 2, 1, 9, 22, 15, 1, 9, 11, 15, 3, 4, 14, 3, 10, 4, 7, 3, 8, 7, 10, 4, 8, 7, 5, 4, 6, 7, 10, 4, 11, 7, 5, 4, 10, 4, 6, 9, 12, 4, 2, 9, 1, 12, 9, 6, 4, 12, 3, 6, 8, 3, 8, 10, 12, 3, 4, 5, 8, 8, 4, 5, 3, 6, 16, 6, 3, 6, 8, 3, 11, 9, 8, 3, 5, 6, 14, 6, 5, 9, 14, 3, 4, 3, 9, 6, 4, 5, 9, 2, 6, 3, 18, 2, 6, 4, 18, 1, 7, 6, 9, 6, 10, 6, 3, 6, 0, 1, 24, 3, 0, 2, 24, 1, 0, 17, 10, 6, 0, 19, 10, 2, 3, 18, 18, 3, 3, 19, 18, 1, 2, 5, 6, 16, 2, 5, 3, 8, 5, 13, 3, 8, 7, 6, 11, 6, 7, 8, 11, 2, 5, 2, 12, 22, 5, 13, 12, 11, 10, 7, 4, 10, 10, 12, 4, 5, 9, 0, 4, 18, 9, 6, 4, 6, 18, 8, 6, 9, 18, 11, 6, 3, 4, 7, 15, 10, 9, 7, 5, 10, 10, 5, 6, 9, 12, 5, 2, 9, 9, 9, 6, 10, 11, 9, 2, 10, 11, 14, 6, 10, 13, 14, 2, 10, 7, 14, 6, 10, 9, 14, 2, 10, 4, 8, 16, 9, 4, 11, 16, 3, 2, 11, 20, 3, 2, 12, 20, 1, 13, 0, 4, 13, 13, 0, 2, 13, 7, 0, 4, 13, 9, 0, 2, 13, 3, 1, 18, 7, 9, 1, 6, 7, 1, 11, 6, 9, 1, 14, 6, 3, 8, 18, 9, 6, 8, 20, 9, 2, 3, 9, 15, 6, 3, 11, 15, 2, 5, 10, 19, 2, 5, 11, 19, 1, 8, 6, 7, 16, 8, 14, 7, 8, 9, 14, 9, 6, 9, 16, 9, 2, 0, 7, 8, 12, 0, 11, 8, 4, 6, 4, 18, 3, 6, 5, 18, 1, 0, 16, 12, 6, 4, 16, 4, 6, 13, 13, 9, 4, 13, 15, 9, 2, 5, 8, 14, 14, 5, 8, 7, 7, 12, 15, 7, 7, 1, 16, 22, 6, 12, 16, 11, 3, 1, 19, 11, 3, 9, 0, 6, 9, 11, 0, 2, 9, 9, 5, 10, 10, 14, 5, 5, 5, 9, 10, 5, 5, 5, 5, 10, 10, 5, 5, 5, 5, 10, 10, 5, 5, 4, 6, 16, 6, 12, 6, 8, 3, 4, 9, 8, 3, 0, 7, 6, 9, 0, 10, 6, 3, 16, 10, 8, 14, 20, 10, 4, 7, 16, 17, 4, 7, 9, 12, 6, 12, 9, 18, 6, 6, 8, 10, 8, 12, 12, 10, 4, 6, 8, 16, 4, 6, 8, 0, 4, 9, 10, 0, 2, 9, 10, 4, 8, 16, 14, 4, 4, 8, 10, 12, 4, 8, 7, 10, 10, 6, 7, 12, 10, 2, 5, 6, 14, 14, 12, 6, 7, 7, 5, 13, 7, 7, 2, 11, 20, 2, 2, 12, 20, 1, 18, 8, 4, 16, 18, 16, 4, 8, 1, 11, 12, 10, 1, 11, 6, 5, 7, 16, 6, 5, 6, 9, 12, 4, 6, 11, 12, 2, 9, 12, 6, 7, 12, 12, 3, 7, 10, 4, 8, 16, 14, 4, 4, 8, 10, 12, 4, 8, 6, 4, 8, 16, 6, 4, 4, 8, 10, 12, 4, 8, 8, 9, 9, 6, 11, 9, 3, 6, 1, 5, 16, 12, 1, 5, 8, 6, 9, 11, 8, 6, 9, 9, 6, 8, 9, 9, 3, 8, 6, 0, 3, 18, 7, 0, 1, 18, 17, 9, 5, 14, 17, 16, 5, 7, 2, 9, 5, 14, 2, 16, 5, 7, 7, 4, 10, 6, 7, 7, 10, 3, 1, 3, 23, 18, 1, 9, 23, 6, 1, 1, 21, 3, 8, 1, 7, 3, 9, 6, 6, 9, 11, 6, 2, 9, 3, 18, 12, 6, 3, 18, 6, 3, 9, 21, 6, 3, 16, 8, 8, 16, 20, 8, 4, 8, 16, 16, 4, 8, 0, 19, 24, 4, 8, 19, 8, 4, 16, 8, 8, 16, 20, 8, 4, 8, 16, 16, 4, 8, 0, 8, 8, 16, 0, 8, 4, 8, 4, 16, 4, 8, 8, 12, 8, 10, 8, 17, 8, 5, 5, 7, 5, 8, 5, 11, 5, 4, 4, 1, 19, 2, 4, 2, 19, 1, 0, 12, 24, 9, 8, 12, 8, 9, 6, 0, 13, 8, 6, 4, 13, 4, 0, 0, 24, 3, 0, 1, 24, 1, 20, 3, 4, 11, 20, 3, 2, 11, 8, 6, 6, 9, 10, 6, 2, 9, 6, 11, 12, 8, 12, 11, 6, 4, 6, 15, 6, 4, 0, 8, 12, 6, 0, 8, 6, 3, 6, 11, 6, 3, 6, 17, 18, 3, 6, 18, 18, 1, 0, 14, 9, 6, 0, 16, 9, 2, 20, 3, 4, 9, 20, 3, 2, 9, 0, 3, 4, 9, 2, 3, 2, 9, 15, 0, 9, 19, 18, 0, 3, 19, 0, 0, 9, 19, 3, 0, 3, 19, 13, 11, 6, 8, 13, 11, 3, 8, 5, 11, 6, 8, 8, 11, 3, 8, 5, 11, 19, 3, 5, 12, 19, 1, 3, 20, 18, 4, 9, 20, 6, 4, 6, 6, 16, 6, 6, 8, 16, 2, 6, 0, 9, 6, 9, 0, 3, 6, 10, 3, 4, 14, 10, 10, 4, 7, 1, 5, 15, 12, 1, 11, 15, 6, 11, 12, 8, 5, 11, 12, 4, 5, 5, 0, 6, 9, 7, 0, 2, 9, 12, 0, 6, 9, 14, 0, 2, 9, 5, 5, 12, 8, 5, 5, 6, 4, 11, 9, 6, 4, 13, 12, 11, 6, 13, 14, 11, 2, 0, 13, 21, 3, 0, 14, 21, 1, 8, 1, 8, 12, 12, 1, 4, 6, 8, 7, 4, 6, 1, 0, 6, 12, 1, 0, 3, 6, 4, 6, 3, 6, 2, 2, 21, 2, 2, 3, 21, 1, 2, 2, 19, 3, 2, 3, 19, 1, 17, 10, 6, 14, 20, 10, 3, 7, 17, 17, 3, 7, 1, 10, 6, 14, 1, 10, 3, 7, 4, 17, 3, 7, 7, 6, 14, 14, 14, 6, 7, 7, 7, 13, 7, 7, 0, 12, 9, 6, 0, 14, 9, 2, 15, 14, 8, 9, 15, 17, 8, 3, 1, 1, 22, 4, 1, 1, 11, 2, 12, 3, 11, 2, 9, 11, 9, 6, 9, 13, 9, 2, 0, 15, 18, 3, 0, 16, 18, 1, 16, 14, 7, 9, 16, 17, 7, 3, 4, 3, 16, 4, 12, 3, 8, 4, 7, 6, 12, 5, 7, 6, 6, 5, 9, 6, 4, 9, 11, 6, 2, 9, 12, 1, 4, 10, 12, 1, 2, 10, 8, 1, 4, 10, 10, 1, 2, 10, 15, 15, 6, 9, 15, 18, 6, 3, 3, 15, 6, 9, 3, 18, 6, 3, 15, 1, 3, 19, 16, 1, 1, 19, 1, 3, 6, 9, 3, 3, 2, 9, 15, 0, 3, 19, 16, 0, 1, 19, 6, 3, 12, 4, 12, 3, 6, 4, 10, 5, 4, 9, 10, 5, 2, 9, 6, 0, 3, 19, 7, 0, 1, 19, 11, 1, 3, 12, 11, 7, 3, 6, 6, 7, 10, 5, 11, 7, 5, 5, 11, 3, 3, 18, 12, 3, 1, 18, 9, 3, 6, 12, 11, 3, 2, 12, 3, 7, 19, 3, 3, 8, 19, 1, 2, 7, 18, 3, 2, 8, 18, 1, 3, 13, 18, 4, 12, 13, 9, 2, 3, 15, 9, 2, 3, 5, 6, 9, 5, 5, 2, 9, 4, 1, 20, 4, 14, 1, 10, 2, 4, 3, 10, 2, 0, 1, 20, 4, 0, 1, 10, 2, 10, 3, 10, 2, 10, 15, 6, 6, 10, 15, 3, 6, 0, 2, 24, 8, 8, 2, 8, 8, 5, 5, 18, 3, 5, 6, 18, 1, 8, 15, 6, 6, 11, 15, 3, 6, 11, 12, 8, 5, 11, 12, 4, 5, 5, 12, 8, 5, 9, 12, 4, 5, 5, 0, 14, 6, 5, 2, 14, 2, 10, 2, 4, 15, 10, 7, 4, 5, 10, 7, 5, 12, 10, 11, 5, 4, 7, 9, 8, 14, 7, 9, 4, 7, 11, 16, 4, 7, 1, 5, 22, 6, 12, 5, 11, 3, 1, 8, 11, 3, 0, 5, 6, 6, 0, 8, 6, 3, 12, 17, 9, 4, 12, 19, 9, 2, 2, 18, 19, 3, 2, 19, 19, 1, 12, 17, 9, 4, 12, 19, 9, 2, 1, 17, 18, 3, 1, 18, 18, 1, 12, 17, 9, 4, 12, 19, 9, 2, 0, 0, 24, 3, 0, 1, 24, 1, 5, 0, 14, 4, 5, 2, 14, 2, 6, 14, 9, 6, 6, 16, 9, 2, 14, 13, 6, 9, 14, 16, 6, 3, 5, 20, 13, 4, 5, 22, 13, 2, 9, 9, 6, 12, 9, 13, 6, 4, 1, 10, 21, 3, 8, 10, 7, 3, 8, 8, 9, 6, 11, 8, 3, 6, 3, 10, 9, 7, 6, 10, 3, 7, 12, 10, 10, 8, 17, 10, 5, 4, 12, 14, 5, 4, 0, 15, 24, 3, 8, 15, 8, 3, 8, 5, 9, 6, 8, 7, 9, 2, 4, 13, 6, 9, 4, 16, 6, 3, 12, 17, 9, 4, 12, 19, 9, 2, 9, 12, 6, 6, 9, 15, 6, 3, 9, 9, 14, 10, 16, 9, 7, 5, 9, 14, 7, 5, 1, 9, 14, 10, 1, 9, 7, 5, 8, 14, 7, 5, 8, 7, 9, 17, 11, 7, 3, 17, 3, 4, 6, 20, 3, 4, 3, 10, 6, 14, 3, 10, 7, 8, 10, 4, 7, 8, 5, 4, 10, 7, 4, 9, 12, 7, 2, 9, 10, 15, 6, 9, 12, 15, 2, 9, 3, 8, 6, 16, 3, 8, 3, 8, 6, 16, 3, 8, 12, 17, 9, 4, 12, 19, 9, 2, 3, 17, 9, 4, 3, 19, 9, 2, 10, 1, 9, 6, 13, 1, 3, 6, 5, 7, 4, 10, 5, 12, 4, 5, 7, 5, 12, 6, 11, 5, 4, 6, 6, 4, 9, 8, 9, 4, 3, 8, 12, 16, 10, 8, 17, 16, 5, 4, 12, 20, 5, 4, 2, 16, 10, 8, 2, 16, 5, 4, 7, 20, 5, 4, 0, 0, 24, 4, 12, 0, 12, 2, 0, 2, 12, 2, 0, 6, 9, 6, 0, 8, 9, 2, 0, 4, 24, 6, 12, 4, 12, 3, 0, 7, 12, 3, 5, 0, 11, 4, 5, 2, 11, 2, 1, 1, 22, 4, 12, 1, 11, 2, 1, 3, 11, 2, 9, 6, 6, 18, 9, 15, 6, 9, 2, 9, 20, 4, 2, 11, 20, 2, 5, 2, 14, 14, 5, 9, 14, 7, 4, 2, 16, 6, 4, 5, 16, 3, 2, 3, 19, 3, 2, 4, 19, 1, 7, 1, 10, 4, 7, 3, 10, 2, 0, 9, 4, 15, 0, 14, 4, 5, 2, 10, 21, 3, 2, 11, 21, 1, 3, 0, 6, 6, 6, 0, 3, 6, 6, 4, 14, 9, 6, 7, 14, 3, 9, 1, 6, 9, 11, 1, 2, 9, 15, 8, 9, 9, 15, 11, 9, 3, 8, 0, 4, 21, 8, 7, 4, 7, 3, 22, 19, 2, 3, 23, 19, 1, 2, 15, 20, 3, 2, 16, 20, 1, 19, 0, 4, 13, 19, 0, 2, 13, 1, 7, 8, 8, 1, 11, 8, 4, 14, 14, 6, 9, 14, 17, 6, 3, 4, 14, 6, 9, 4, 17, 6, 3, 14, 5, 4, 10, 14, 5, 2, 10, 6, 5, 4, 10, 8, 5, 2, 10, 14, 5, 6, 6, 14, 8, 6, 3, 4, 5, 6, 6, 4, 8, 6, 3, 0, 2, 24, 21, 8, 2, 8, 21, 1, 2, 6, 13, 3, 2, 2, 13, 20, 0, 4, 21, 20, 0, 2, 21, 0, 4, 4, 20, 2, 4, 2, 20, 8, 16, 9, 6, 8, 18, 9, 2, 7, 0, 6, 9, 9, 0, 2, 9, 16, 12, 7, 9, 16, 15, 7, 3, 5, 21, 14, 3, 12, 21, 7, 3, 11, 5, 6, 9, 11, 5, 3, 9, 10, 5, 4, 10, 12, 5, 2, 10, 10, 6, 6, 9, 12, 6, 2, 9, 7, 5, 6, 9, 10, 5, 3, 9, 14, 14, 10, 4, 14, 16, 10, 2, 5, 5, 14, 14, 5, 5, 7, 7, 12, 12, 7, 7, 12, 8, 12, 6, 18, 8, 6, 3, 12, 11, 6, 3, 6, 6, 12, 12, 6, 6, 6, 6, 12, 12, 6, 6, 11, 13, 6, 10, 13, 13, 2, 10, 1, 10, 20, 8, 1, 10, 10, 4, 11, 14, 10, 4, 15, 13, 9, 6, 15, 15, 9, 2, 9, 0, 6, 9, 9, 3, 6, 3, 10, 1, 5, 14, 10, 8, 5, 7, 3, 4, 16, 6, 3, 6, 16, 2, 16, 3, 8, 9, 16, 6, 8, 3, 7, 13, 6, 10, 9, 13, 2, 10, 15, 13, 9, 6, 15, 15, 9, 2, 0, 13, 9, 6, 0, 15, 9, 2, 13, 16, 9, 6, 13, 18, 9, 2, 2, 16, 9, 6, 2, 18, 9, 2, 5, 16, 18, 3, 5, 17, 18, 1, 1, 16, 18, 3, 1, 17, 18, 1, 5, 0, 18, 3, 5, 1, 18, 1, 1, 1, 19, 2, 1, 2, 19, 1, 14, 2, 6, 11, 16, 2, 2, 11, 4, 15, 15, 6, 9, 15, 5, 6, 14, 2, 6, 11, 16, 2, 2, 11, 4, 2, 6, 11, 6, 2, 2, 11, 18, 2, 6, 9, 18, 5, 6, 3, 1, 2, 22, 4, 1, 2, 11, 2, 12, 4, 11, 2, 2, 0, 21, 12, 9, 0, 7, 12, 0, 12, 18, 3, 0, 13, 18, 1, 12, 2, 6, 9, 14, 2, 2, 9, 3, 10, 18, 3, 3, 11, 18, 1, 16, 3, 8, 9, 16, 6, 8, 3, 3, 7, 18, 3, 3, 8, 18, 1, 9, 11, 6, 9, 11, 11, 2, 9, 9, 8, 6, 9, 11, 8, 2, 9, 15, 0, 2, 18, 15, 0, 1, 18, 7, 0, 2, 18, 8, 0, 1, 18, 17, 3, 7, 9, 17, 6, 7, 3, 3, 18, 9, 6, 3, 20, 9, 2, 3, 18, 21, 3, 3, 19, 21, 1, 0, 3, 7, 9, 0, 6, 7, 3, 2, 7, 22, 3, 2, 8, 22, 1, 0, 3, 24, 16, 0, 3, 12, 8, 12, 11, 12, 8, 13, 17, 9, 4, 13, 19, 9, 2, 5, 5, 12, 8, 5, 5, 6, 4, 11, 9, 6, 4, 5, 6, 14, 6, 12, 6, 7, 3, 5, 9, 7, 3, 5, 16, 14, 6, 5, 16, 7, 3, 12, 19, 7, 3, 18, 2, 6, 9, 18, 5, 6, 3, 0, 2, 6, 9, 0, 5, 6, 3, 3, 4, 20, 10, 13, 4, 10, 5, 3, 9, 10, 5, 2, 13, 9, 8, 5, 13, 3, 8, 2, 1, 21, 15, 9, 1, 7, 15, 5, 12, 14, 8, 12, 12, 7, 8, 6, 7, 12, 4, 6, 7, 6, 4, 6, 5, 9, 6, 9, 5, 3, 6, 13, 11, 6, 6, 13, 11, 3, 6, 5, 11, 6, 6, 8, 11, 3, 6, 6, 4, 18, 2, 6, 5, 18, 1, 0, 2, 6, 11, 2, 2, 2, 11, 18, 0, 6, 15, 20, 0, 2, 15, 0, 0, 6, 13, 2, 0, 2, 13, 12, 0, 6, 9, 14, 0, 2, 9, 6, 0, 6, 9, 8, 0, 2, 9, 0, 2, 24, 4, 8, 2, 8, 4, 3, 13, 18, 4, 12, 13, 9, 4, 9, 7, 10, 4, 9, 7, 5, 4, 5, 8, 12, 3, 11, 8, 6, 3, 4, 14, 19, 3, 4, 15, 19, 1, 10, 0, 4, 20, 10, 10, 4, 10, 8, 15, 9, 6, 8, 17, 9, 2, 2, 9, 15, 4, 7, 9, 5, 4, 8, 4, 12, 7, 12, 4, 4, 7, 0, 10, 6, 9, 0, 13, 6, 3, 18, 5, 6, 9, 18, 8, 6, 3, 0, 18, 16, 6, 0, 18, 8, 3, 8, 21, 8, 3, 9, 18, 14, 6, 16, 18, 7, 3, 9, 21, 7, 3, 1, 20, 20, 4, 1, 20, 10, 2, 11, 22, 10, 2, 2, 8, 20, 6, 12, 8, 10, 3, 2, 11, 10, 3, 7, 8, 6, 9, 9, 8, 2, 9, 8, 5, 12, 8, 12, 5, 4, 8, 4, 5, 12, 8, 8, 5, 4, 8, 10, 6, 6, 9, 12, 6, 2, 9, 2, 0, 6, 16, 4, 0, 2, 16, 15, 4, 6, 12, 15, 8, 6, 4, 3, 4, 6, 12, 3, 8, 6, 4, 15, 12, 9, 6, 15, 14, 9, 2, 4, 0, 15, 22, 4, 11, 15, 11, 15, 12, 9, 6, 15, 14, 9, 2, 0, 12, 9, 6, 0, 14, 9, 2, 15, 15, 9, 6, 15, 17, 9, 2, 0, 15, 9, 6, 0, 17, 9, 2, 10, 0, 8, 10, 14, 0, 4, 5, 10, 5, 4, 5, 1, 0, 4, 16, 3, 0, 2, 16, 7, 6, 10, 6, 7, 8, 10, 2, 10, 12, 4, 10, 10, 17, 4, 5, 8, 4, 10, 6, 8, 6, 10, 2, 3, 22, 18, 2, 12, 22, 9, 2, 7, 7, 11, 6, 7, 9, 11, 2, 0, 0, 12, 10, 0, 0, 6, 5, 6, 5, 6, 5, 10, 1, 12, 6, 16, 1, 6, 3, 10, 4, 6, 3, 7, 16, 9, 4, 7, 18, 9, 2, 5, 7, 15, 16, 10, 7, 5, 16, 5, 10, 12, 13, 11, 10, 6, 13, 6, 2, 12, 6, 12, 2, 6, 3, 6, 5, 6, 3, 3, 9, 12, 9, 3, 12, 12, 3, 16, 2, 8, 6, 16, 5, 8, 3, 0, 2, 8, 6, 0, 5, 8, 3, 0, 3, 24, 11, 0, 3, 12, 11, 0, 13, 8, 10, 0, 13, 4, 5, 4, 18, 4, 5, 10, 14, 4, 10, 10, 19, 4, 5, 10, 2, 4, 21, 10, 9, 4, 7, 4, 4, 15, 9, 4, 7, 15, 3, 0, 1, 24, 6, 8, 1, 8, 6, 9, 6, 5, 16, 9, 14, 5, 8, 3, 21, 18, 3, 9, 21, 6, 3, 6, 5, 3, 12, 6, 11, 3, 6, 11, 6, 4, 9, 11, 6, 2, 9, 5, 6, 9, 8, 8, 6, 3, 8, 4, 3, 20, 2, 4, 4, 20, 1, 2, 10, 18, 3, 8, 10, 6, 3, 7, 15, 10, 6, 7, 17, 10, 2, 1, 4, 4, 18, 1, 4, 2, 9, 3, 13, 2, 9, 13, 0, 6, 9, 15, 0, 2, 9, 5, 0, 6, 9, 7, 0, 2, 9, 11, 0, 6, 9, 13, 0, 2, 9, 6, 7, 9, 6, 9, 7, 3, 6, 3, 0, 18, 2, 3, 1, 18, 1, 0, 10, 20, 4, 0, 10, 10, 2, 10, 12, 10, 2, 10, 2, 4, 12, 10, 8, 4, 6, 6, 5, 6, 12, 6, 5, 3, 6, 9, 11, 3, 6, 6, 0, 18, 22, 15, 0, 9, 11, 6, 11, 9, 11, 0, 0, 18, 22, 0, 0, 9, 11, 9, 11, 9, 11, 18, 2, 6, 11, 20, 2, 2, 11, 0, 2, 6, 11, 2, 2, 2, 11, 11, 0, 6, 9, 13, 0, 2, 9, 0, 0, 20, 3, 0, 1, 20, 1, 2, 2, 20, 2, 2, 3, 20, 1, 1, 10, 18, 2, 1, 11, 18, 1, 18, 7, 6, 9, 18, 10, 6, 3, 0, 0, 22, 9, 0, 3, 22, 3, 17, 3, 6, 9, 17, 6, 6, 3, 0, 7, 6, 9, 0, 10, 6, 3, 0, 6, 24, 6, 0, 8, 24, 2, 0, 2, 6, 10, 2, 2, 2, 10, 10, 6, 6, 9, 12, 6, 2, 9, 7, 0, 6, 9, 9, 0, 2, 9, 15, 0, 6, 9, 17, 0, 2, 9, 3, 0, 6, 9, 5, 0, 2, 9, 15, 17, 9, 6, 15, 19, 9, 2, 0, 17, 18, 3, 0, 18, 18, 1, 15, 14, 9, 6, 15, 16, 9, 2, 0, 15, 23, 6, 0, 17, 23, 2, 5, 15, 18, 3, 5, 16, 18, 1, 0, 14, 9, 6, 0, 16, 9, 2, 9, 8, 8, 10, 13, 8, 4, 5, 9, 13, 4, 5, 3, 7, 15, 6, 8, 7, 5, 6, 9, 8, 8, 10, 13, 8, 4, 5, 9, 13, 4, 5, 5, 0, 6, 12, 8, 0, 3, 12, 9, 8, 8, 10, 13, 8, 4, 5, 9, 13, 4, 5, 8, 5, 6, 9, 10, 5, 2, 9, 10, 6, 4, 18, 12, 6, 2, 9, 10, 15, 2, 9, 5, 7, 12, 4, 11, 7, 6, 4, 9, 8, 8, 10, 13, 8, 4, 5, 9, 13, 4, 5, 7, 8, 8, 10, 7, 8, 4, 5, 11, 13, 4, 5, 11, 10, 6, 14, 14, 10, 3, 7, 11, 17, 3, 7, 9, 5, 6, 19, 12, 5, 3, 19, 6, 12, 12, 6, 12, 12, 6, 3, 6, 15, 6, 3, 1, 9, 18, 6, 1, 9, 9, 3, 10, 12, 9, 3, 16, 14, 8, 10, 20, 14, 4, 5, 16, 19, 4, 5, 0, 9, 22, 8, 0, 9, 11, 4, 11, 13, 11, 4, 8, 18, 12, 6, 14, 18, 6, 3, 8, 21, 6, 3, 0, 6, 20, 18, 0, 6, 10, 9, 10, 15, 10, 9, 3, 6, 20, 12, 13, 6, 10, 6, 3, 12, 10, 6, 0, 16, 10, 8, 0, 16, 5, 4, 5, 20, 5, 4, 6, 16, 18, 3, 6, 17, 18, 1, 0, 11, 19, 3, 0, 12, 19, 1, 14, 6, 6, 9, 14, 9, 6, 3, 1, 7, 22, 4, 1, 7, 11, 2, 12, 9, 11, 2, 13, 6, 7, 12, 13, 10, 7, 4, 4, 7, 11, 9, 4, 10, 11, 3, 12, 10, 10, 8, 17, 10, 5, 4, 12, 14, 5, 4, 2, 12, 9, 7, 5, 12, 3, 7, 16, 14, 6, 9, 16, 17, 6, 3, 3, 12, 6, 12, 3, 16, 6, 4, 14, 13, 6, 6, 14, 16, 6, 3, 8, 0, 6, 9, 10, 0, 2, 9, 9, 1, 6, 23, 11, 1, 2, 23, 0, 16, 9, 6, 0, 18, 9, 2, 4, 17, 18, 3, 4, 18, 18, 1, 5, 2, 13, 14, 5, 9, 13, 7, 15, 0, 8, 12, 19, 0, 4, 6, 15, 6, 4, 6, 0, 0, 8, 12, 0, 0, 4, 6, 4, 6, 4, 6, 8, 2, 8, 7, 8, 2, 4, 7, 1, 1, 6, 9, 3, 1, 2, 9, 14, 8, 6, 12, 17, 8, 3, 6, 14, 14, 3, 6, 4, 8, 6, 12, 4, 8, 3, 6, 7, 14, 3, 6, 16, 5, 5, 15, 16, 10, 5, 5, 3, 5, 5, 15, 3, 10, 5, 5, 18, 4, 6, 9, 18, 7, 6, 3, 1, 7, 6, 15, 1, 12, 6, 5, 11, 15, 12, 8, 17, 15, 6, 4, 11, 19, 6, 4, 0, 2, 24, 4, 0, 2, 12, 2, 12, 4, 12, 2, 15, 1, 2, 19, 15, 1, 1, 19, 7, 1, 2, 19, 8, 1, 1, 19, 22, 1, 2, 20, 22, 1, 1, 20, 0, 1, 2, 20, 1, 1, 1, 20, 18, 11, 6, 12, 20, 11, 2, 12, 0, 11, 6, 12, 2, 11, 2, 12, 3, 6, 18, 14, 3, 13, 18, 7, 6, 10, 7, 8, 6, 14, 7, 4, 7, 9, 12, 12, 7, 13, 12, 4, 2, 18, 18, 5, 11, 18, 9, 5, 4, 21, 20, 3, 4, 22, 20, 1, 9, 12, 6, 12, 9, 12, 3, 6, 12, 18, 3, 6, 4, 6, 18, 3, 4, 7, 18, 1, 3, 6, 18, 3, 3, 7, 18, 1, 18, 4, 6, 9, 18, 7, 6, 3, 2, 12, 9, 6, 2, 14, 9, 2, 4, 14, 18, 4, 13, 14, 9, 2, 4, 16, 9, 2, 7, 7, 6, 14, 7, 7, 3, 7, 10, 14, 3, 7, 7, 13, 12, 6, 13, 13, 6, 3, 7, 16, 6, 3, 6, 7, 12, 9, 10, 7, 4, 9, 12, 12, 6, 6, 12, 12, 3, 6, 0, 2, 4, 10, 0, 7, 4, 5, 8, 0, 9, 6, 11, 0, 3, 6, 2, 9, 12, 6, 2, 12, 12, 3, 13, 10, 6, 9, 13, 13, 6, 3, 5, 10, 6, 9, 5, 13, 6, 3, 9, 15, 9, 6, 9, 17, 9, 2, 5, 16, 12, 6, 5, 19, 12, 3, 3, 2, 20, 3, 3, 3, 20, 1, 2, 5, 12, 6, 6, 5, 4, 6, 11, 0, 3, 24, 12, 0, 1, 24, 3, 16, 15, 4, 8, 16, 5, 4, 9, 12, 6, 12, 9, 18, 6, 6, 1, 15, 12, 8, 1, 15, 6, 4, 7, 19, 6, 4, 15, 10, 8, 14, 19, 10, 4, 7, 15, 17, 4, 7, 1, 9, 8, 14, 1, 9, 4, 7, 5, 16, 4, 7, 9, 11, 9, 10, 9, 16, 9, 5, 6, 7, 12, 6, 6, 9, 12, 2, 10, 15, 6, 9, 12, 15, 2, 9, 7, 8, 9, 7, 10, 8, 3, 7, 10, 4, 8, 10, 14, 4, 4, 5, 10, 9, 4, 5, 4, 6, 6, 9, 4, 9, 6, 3, 0, 6, 24, 12, 8, 6, 8, 12, 3, 7, 6, 14, 6, 7, 3, 14, 19, 8, 5, 8, 19, 12, 5, 4, 0, 8, 5, 8, 0, 12, 5, 4, 17, 3, 6, 6, 17, 6, 6, 3, 1, 3, 6, 6, 1, 6, 6, 3, 18, 2, 6, 9, 18, 5, 6, 3, 0, 2, 6, 9, 0, 5, 6, 3, 3, 3, 18, 6, 3, 5, 18, 2, 2, 3, 9, 6, 2, 5, 9, 2, 9, 3, 10, 8, 14, 3, 5, 4, 9, 7, 5, 4, 5, 3, 10, 8, 5, 3, 5, 4, 10, 7, 5, 4, 10, 11, 6, 12, 10, 11, 3, 12, 8, 11, 6, 11, 11, 11, 3, 11, 7, 8, 10, 4, 7, 8, 5, 4, 9, 6, 6, 7, 12, 6, 3, 7, 5, 18, 18, 3, 5, 19, 18, 1, 8, 4, 6, 9, 10, 4, 2, 9, 8, 1, 9, 7, 11, 1, 3, 7, 6, 11, 6, 6, 9, 11, 3, 6, 14, 12, 4, 11, 14, 12, 2, 11, 6, 12, 4, 11, 8, 12, 2, 11, 8, 0, 12, 18, 12, 0, 4, 18, 2, 12, 10, 5, 7, 12, 5, 5, 2, 20, 22, 3, 2, 21, 22, 1, 0, 4, 2, 20, 1, 4, 1, 20, 0, 2, 24, 4, 8, 2, 8, 4, 7, 8, 10, 4, 7, 10, 10, 2, 6, 7, 8, 10, 6, 7, 4, 5, 10, 12, 4, 5, 14, 0, 6, 14, 17, 0, 3, 7, 14, 7, 3, 7, 4, 11, 5, 8, 4, 15, 5, 4, 2, 0, 20, 9, 2, 3, 20, 3, 6, 7, 12, 8, 6, 7, 6, 4, 12, 11, 6, 4, 9, 17, 6, 6, 9, 20, 6, 3, 7, 10, 10, 4, 7, 12, 10, 2, 6, 5, 12, 9, 10, 5, 4, 9, 5, 11, 6, 8, 8, 11, 3, 8, 18, 4, 4, 17, 18, 4, 2, 17, 0, 0, 6, 6, 3, 0, 3, 6, 18, 4, 4, 17, 18, 4, 2, 17, 2, 4, 4, 17, 4, 4, 2, 17, 5, 18, 19, 3, 5, 19, 19, 1, 11, 0, 2, 18, 11, 9, 2, 9, 15, 4, 2, 18, 15, 13, 2, 9, 7, 4, 2, 18, 7, 13, 2, 9, 7, 11, 10, 8, 12, 11, 5, 4, 7, 15, 5, 4, 10, 6, 4, 9, 12, 6, 2, 9, 10, 0, 6, 9, 12, 0, 2, 9, 2, 9, 16, 8, 2, 9, 8, 4, 10, 13, 8, 4, 14, 15, 6, 9, 14, 18, 6, 3, 8, 7, 6, 9, 10, 7, 2, 9, 14, 15, 6, 9, 14, 18, 6, 3, 3, 12, 12, 6, 3, 14, 12, 2, 14, 12, 9, 6, 14, 14, 9, 2, 1, 12, 9, 6, 1, 14, 9, 2, 3, 7, 18, 3, 3, 8, 18, 1, 1, 7, 22, 6, 1, 9, 22, 2, 18, 4, 6, 6, 18, 7, 6, 3, 0, 4, 6, 6, 0, 7, 6, 3, 5, 11, 16, 6, 5, 14, 16, 3, 6, 16, 9, 4, 6, 18, 9, 2, 14, 15, 6, 9, 14, 18, 6, 3, 4, 15, 6, 9, 4, 18, 6, 3, 15, 1, 6, 23, 17, 1, 2, 23, 0, 21, 24, 3, 8, 21, 8, 3, 0, 20, 24, 4, 8, 20, 8, 4, 3, 1, 6, 23, 5, 1, 2, 23, 3, 17, 18, 3, 3, 18, 18, 1, 0, 16, 18, 3, 0, 17, 18, 1, 1, 16, 22, 4, 12, 16, 11, 2, 1, 18, 11, 2, 0, 16, 9, 6, 0, 18, 9, 2, 2, 10, 21, 3, 9, 10, 7, 3, 2, 18, 12, 6, 2, 18, 6, 3, 8, 21, 6, 3, 0, 5, 24, 4, 0, 7, 24, 2, 10, 2, 4, 15, 10, 7, 4, 5, 10, 7, 6, 12, 10, 13, 6, 6, 6, 6, 6, 9, 8, 6, 2, 9, 11, 0, 6, 9, 13, 0, 2, 9, 9, 7, 6, 9, 11, 7, 2, 9, 2, 1, 20, 3, 2, 2, 20, 1, 1, 18, 12, 6, 1, 18, 6, 3, 7, 21, 6, 3, 13, 2, 4, 13, 13, 2, 2, 13, 6, 7, 12, 4, 12, 7, 6, 4, 10, 1, 4, 13, 10, 1, 2, 13, 6, 0, 3, 18, 7, 0, 1, 18, 14, 3, 10, 5, 14, 3, 5, 5, 6, 15, 12, 8, 10, 15, 4, 8, 9, 10, 6, 9, 11, 10, 2, 9, 8, 3, 4, 9, 10, 3, 2, 9, 17, 0, 6, 14, 20, 0, 3, 7, 17, 7, 3, 7, 1, 0, 6, 14, 1, 0, 3, 7, 4, 7, 3, 7, 14, 0, 6, 16, 17, 0, 3, 8, 14, 8, 3, 8, 7, 4, 4, 10, 9, 4, 2, 10, 3, 17, 18, 6, 12, 17, 9, 3, 3, 20, 9, 3, 1, 20, 22, 4, 12, 20, 11, 4, 14, 3, 10, 5, 14, 3, 5, 5, 0, 3, 10, 5, 5, 3, 5, 5, 12, 6, 12, 16, 16, 6, 4, 16, 0, 6, 12, 16, 4, 6, 4, 16, 10, 9, 5, 15, 10, 14, 5, 5, 1, 18, 21, 2, 1, 19, 21, 1, 15, 0, 9, 6, 15, 2, 9, 2, 6, 1, 12, 4, 12, 1, 6, 4, 6, 0, 12, 12, 12, 0, 6, 6, 6, 6, 6, 6, 8, 10, 8, 12, 8, 10, 4, 6, 12, 16, 4, 6, 14, 16, 10, 8, 19, 16, 5, 4, 14, 20, 5, 4, 0, 16, 10, 8, 0, 16, 5, 4, 5, 20, 5, 4, 10, 12, 12, 5, 14, 12, 4, 5, 6, 16, 10, 8, 6, 16, 5, 4, 11, 20, 5, 4, 7, 6, 12, 6, 13, 6, 6, 3, 7, 9, 6, 3, 9, 6, 4, 18, 9, 6, 2, 9, 11, 15, 2, 9, 10, 9, 6, 14, 13, 9, 3, 7, 10, 16, 3, 7, 8, 9, 6, 14, 8, 9, 3, 7, 11, 16, 3, 7, 7, 4, 11, 12, 7, 10, 11, 6, 4, 8, 6, 16, 4, 8, 3, 8, 7, 16, 3, 8, 17, 3, 4, 21, 17, 10, 4, 7, 3, 3, 4, 21, 3, 10, 4, 7, 10, 1, 8, 18, 14, 1, 4, 9, 10, 10, 4, 9, 2, 5, 16, 8, 2, 5, 8, 4, 10, 9, 8, 4, 3, 6, 18, 12, 3, 10, 18, 4, 4, 10, 16, 12, 4, 14, 16, 4, 15, 4, 8, 20, 19, 4, 4, 10, 15, 14, 4, 10, 7, 2, 9, 6, 10, 2, 3, 6, 15, 4, 8, 20, 19, 4, 4, 10, 15, 14, 4, 10, 1, 4, 8, 20, 1, 4, 4, 10, 5, 14, 4, 10, 11, 8, 8, 14, 15, 8, 4, 7, 11, 15, 4, 7, 5, 8, 8, 14, 5, 8, 4, 7, 9, 15, 4, 7, 10, 13, 5, 8, 10, 17, 5, 4, 4, 13, 7, 9, 4, 16, 7, 3, 0, 13, 24, 10, 0, 18, 24, 5, 4, 2, 8, 11, 8, 2, 4, 11, 10, 2, 8, 16, 14, 2, 4, 8, 10, 10, 4, 8, 0, 2, 24, 6, 0, 2, 12, 3, 12, 5, 12, 3, 6, 0, 12, 9, 6, 3, 12, 3, 1, 2, 12, 12, 1, 2, 6, 6, 7, 8, 6, 6, 18, 5, 6, 9, 18, 8, 6, 3, 4, 3, 8, 10, 4, 3, 4, 5, 8, 8, 4, 5, 6, 21, 18, 3, 6, 22, 18, 1, 1, 10, 18, 2, 1, 11, 18, 1, 1, 10, 22, 3, 1, 11, 22, 1, 2, 8, 12, 9, 2, 11, 12, 3, 12, 8, 12, 6, 18, 8, 6, 3, 12, 11, 6, 3, 0, 8, 12, 6, 0, 8, 6, 3, 6, 11, 6, 3, 10, 15, 6, 9, 12, 15, 2, 9, 7, 13, 9, 6, 7, 15, 9, 2, 9, 8, 7, 12, 9, 14, 7, 6, 4, 13, 9, 6, 7, 13, 3, 6, 6, 15, 18, 4, 12, 15, 6, 4, 5, 4, 4, 16, 7, 4, 2, 16, 10, 15, 6, 9, 12, 15, 2, 9, 8, 15, 6, 9, 10, 15, 2, 9, 9, 11, 12, 10, 15, 11, 6, 5, 9, 16, 6, 5, 3, 6, 14, 6, 3, 8, 14, 2, 4, 2, 17, 8, 4, 6, 17, 4, 6, 2, 12, 21, 6, 9, 12, 7, 8, 1, 9, 9, 8, 4, 9, 3, 0, 7, 24, 3, 12, 7, 12, 3, 11, 6, 9, 10, 11, 11, 9, 5, 2, 11, 18, 3, 2, 12, 18, 1, 8, 16, 9, 4, 8, 18, 9, 2, 0, 0, 9, 6, 0, 2, 9, 2, 0, 11, 24, 6, 0, 13, 24, 2, 2, 9, 20, 6, 2, 12, 20, 3, 4, 5, 16, 12, 12, 5, 8, 6, 4, 11, 8, 6, 10, 2, 4, 15, 10, 7, 4, 5, 7, 3, 10, 4, 7, 5, 10, 2, 9, 15, 6, 8, 9, 19, 6, 4, 17, 0, 7, 10, 17, 5, 7, 5, 0, 0, 7, 10, 0, 5, 7, 5, 16, 1, 6, 12, 19, 1, 3, 6, 16, 7, 3, 6, 1, 0, 19, 8, 1, 4, 19, 4, 12, 2, 9, 4, 12, 4, 9, 2, 3, 2, 9, 4, 3, 4, 9, 2, 12, 2, 10, 6, 12, 4, 10, 2, 3, 4, 18, 2, 12, 4, 9, 2, 12, 1, 4, 9, 12, 1, 2, 9, 8, 1, 4, 9, 10, 1, 2, 9, 10, 5, 8, 10, 14, 5, 4, 5, 10, 10, 4, 5, 6, 4, 12, 13, 10, 4, 4, 13, 13, 5, 6, 6, 13, 5, 3, 6, 1, 5, 12, 3, 7, 5, 6, 3, 7, 5, 10, 6, 7, 7, 10, 2, 2, 0, 21, 5, 9, 0, 7, 5, 0, 8, 9, 9, 0, 11, 9, 3, 9, 6, 6, 9, 11, 6, 2, 9, 0, 3, 6, 7, 3, 3, 3, 7, 9, 18, 12, 6, 15, 18, 6, 3, 9, 21, 6, 3, 2, 8, 20, 6, 2, 8, 10, 3, 12, 11, 10, 3, 13, 2, 10, 4, 13, 4, 10, 2, 4, 5, 5, 18, 4, 11, 5, 6, 20, 4, 4, 9, 20, 4, 2, 9, 8, 6, 8, 14, 8, 13, 8, 7, 0, 1, 24, 6, 12, 1, 12, 3, 0, 4, 12, 3, 0, 4, 4, 9, 2, 4, 2, 9, 3, 6, 18, 3, 3, 7, 18, 1, 3, 17, 16, 6, 3, 19, 16, 2, 13, 6, 6, 9, 13, 9, 6, 3, 5, 6, 14, 6, 5, 6, 7, 3, 12, 9, 7, 3, 13, 5, 8, 10, 17, 5, 4, 5, 13, 10, 4, 5, 2, 2, 20, 3, 2, 3, 20, 1, 9, 2, 9, 6, 12, 2, 3, 6, 8, 6, 6, 9, 10, 6, 2, 9, 12, 3, 4, 11, 12, 3, 2, 11, 8, 3, 4, 11, 10, 3, 2, 11, 8, 3, 8, 10, 12, 3, 4, 5, 8, 8, 4, 5, 11, 1, 2, 18, 12, 1, 1, 18, 9, 2, 9, 6, 12, 2, 3, 6, 0, 2, 19, 3, 0, 3, 19, 1, 9, 14, 9, 6, 9, 16, 9, 2, 1, 8, 18, 5, 7, 8, 6, 5, 12, 0, 6, 9, 14, 0, 2, 9, 6, 0, 6, 9, 8, 0, 2, 9, 13, 6, 4, 15, 13, 11, 4, 5, 1, 5, 18, 3, 1, 6, 18, 1, 9, 7, 14, 6, 9, 9, 14, 2, 2, 16, 18, 3, 2, 17, 18, 1, 15, 17, 9, 6, 15, 19, 9, 2, 0, 8, 12, 6, 0, 8, 6, 3, 6, 11, 6, 3, 9, 13, 7, 8, 9, 17, 7, 4, 2, 17, 20, 3, 2, 18, 20, 1, 15, 17, 9, 6, 15, 19, 9, 2, 4, 0, 15, 4, 4, 2, 15, 2, 17, 2, 6, 6, 17, 5, 6, 3, 0, 3, 6, 9, 0, 6, 6, 3, 15, 17, 9, 6, 15, 19, 9, 2, 0, 17, 9, 6, 0, 19, 9, 2, 9, 18, 12, 6, 15, 18, 6, 3, 9, 21, 6, 3, 3, 15, 6, 9, 3, 18, 6, 3, 16, 13, 8, 10, 20, 13, 4, 5, 16, 18, 4, 5, 0, 14, 24, 4, 8, 14, 8, 4, 13, 18, 6, 6, 13, 18, 3, 6, 0, 13, 8, 10, 0, 13, 4, 5, 4, 18, 4, 5, 0, 14, 24, 6, 0, 17, 24, 3, 5, 2, 12, 8, 5, 2, 6, 4, 11, 6, 6, 4, 8, 9, 9, 6, 11, 9, 3, 6, 4, 3, 16, 4, 4, 5, 16, 2, 10, 2, 4, 10, 10, 7, 4, 5, 8, 4, 5, 8, 8, 8, 5, 4, 11, 5, 9, 12, 11, 9, 9, 4, 4, 5, 9, 12, 4, 9, 9, 4, 14, 6, 6, 9, 14, 9, 6, 3, 2, 4, 20, 12, 2, 8, 20, 4, 4, 4, 17, 16, 4, 12, 17, 8, 8, 7, 7, 6, 8, 10, 7, 3, 1, 9, 23, 2, 1, 10, 23, 1, 7, 0, 6, 9, 9, 0, 2, 9, 13, 3, 4, 9, 13, 3, 2, 9, 8, 1, 6, 13, 10, 1, 2, 13, 4, 22, 18, 2, 4, 23, 18, 1, 3, 10, 9, 6, 6, 10, 3, 6, 14, 0, 2, 24, 14, 0, 1, 24, 8, 0, 2, 24, 9, 0, 1, 24, 3, 2, 18, 10, 9, 2, 6, 10, 4, 13, 15, 6, 9, 13, 5, 6, 3, 21, 18, 3, 9, 21, 6, 3, 9, 1, 4, 11, 11, 1, 2, 11, 9, 7, 10, 4, 9, 7, 5, 4, 7, 0, 10, 18, 12, 0, 5, 18, 12, 1, 6, 16, 14, 1, 2, 16, 6, 1, 6, 16, 8, 1, 2, 16, 18, 2, 6, 6, 18, 5, 6, 3, 3, 5, 18, 2, 3, 6, 18, 1, 18, 2, 6, 6, 18, 5, 6, 3, 0, 2, 6, 6, 0, 5, 6, 3, 13, 11, 11, 6, 13, 13, 11, 2, 5, 7, 10, 4, 10, 7, 5, 4, 11, 9, 10, 7, 11, 9, 5, 7, 3, 9, 10, 7, 8, 9, 5, 7, 16, 4, 6, 6, 16, 4, 3, 6, 5, 6, 10, 8, 5, 6, 5, 4, 10, 10, 5, 4, 7, 21, 16, 3, 7, 21, 8, 3, 1, 21, 16, 3, 9, 21, 8, 3, 2, 5, 22, 14, 13, 5, 11, 7, 2, 12, 11, 7, 3, 10, 8, 10, 3, 10, 4, 5, 7, 15, 4, 5, 17, 0, 6, 12, 20, 0, 3, 6, 17, 6, 3, 6, 5, 2, 6, 18, 7, 2, 2, 18, 13, 0, 6, 9, 15, 0, 2, 9, 0, 12, 7, 9, 0, 15, 7, 3, 15, 13, 8, 10, 19, 13, 4, 5, 15, 18, 4, 5, 1, 0, 6, 12, 1, 0, 3, 6, 4, 6, 3, 6, 12, 1, 3, 12, 12, 7, 3, 6, 1, 13, 8, 10, 1, 13, 4, 5, 5, 18, 4, 5, 3, 21, 19, 2, 3, 22, 19, 1, 6, 3, 4, 13, 8, 3, 2, 13, 5, 10, 18, 3, 5, 11, 18, 1, 9, 3, 5, 12, 9, 7, 5, 4, 11, 2, 4, 15, 11, 7, 4, 5, 4, 1, 16, 4, 4, 3, 16, 2, 6, 0, 18, 3, 6, 1, 18, 1, 5, 1, 10, 8, 5, 1, 5, 4, 10, 5, 5, 4, 11, 18, 12, 6, 17, 18, 6, 3, 11, 21, 6, 3, 5, 15, 12, 3, 11, 15, 6, 3, 1, 10, 22, 4, 1, 10, 11, 4, 7, 9, 9, 6, 10, 9, 3, 6, 6, 11, 12, 5, 10, 11, 4, 5, 6, 7, 10, 7, 11, 7, 5, 7, 11, 2, 8, 10, 11, 2, 4, 10, 5, 2, 8, 10, 9, 2, 4, 10, 6, 4, 18, 6, 15, 4, 9, 3, 6, 7, 9, 3, 0, 5, 10, 9, 0, 8, 10, 3, 2, 7, 21, 6, 2, 9, 21, 2, 0, 4, 22, 16, 0, 4, 11, 8, 11, 12, 11, 8, 9, 0, 6, 22, 9, 11, 6, 11, 9, 1, 3, 12, 9, 7, 3, 6, 12, 0, 12, 18, 18, 0, 6, 9, 12, 9, 6, 9, 0, 0, 12, 18, 0, 0, 6, 9, 6, 9, 6, 9, 1, 1, 22, 4, 12, 1, 11, 2, 1, 3, 11, 2, 3, 0, 18, 4, 3, 2, 18, 2, 2, 5, 22, 6, 2, 7, 22, 2, 5, 0, 6, 9, 5, 3, 6, 3, 10, 14, 6, 9, 12, 14, 2, 9, 8, 14, 6, 9, 10, 14, 2, 9, 5, 18, 18, 3, 5, 19, 18, 1, 6, 0, 6, 13, 9, 0, 3, 13, 7, 4, 12, 4, 7, 4, 6, 4, 5, 2, 12, 6, 9, 2, 4, 6, 4, 1, 18, 3, 4, 2, 18, 1, 0, 8, 6, 12, 0, 12, 6, 4, 9, 15, 6, 9, 11, 15, 2, 9, 9, 10, 6, 13, 11, 10, 2, 13, 6, 17, 18, 2, 6, 18, 18, 1, 9, 4, 6, 9, 11, 4, 2, 9, 10, 0, 6, 9, 12, 0, 2, 9, 5, 6, 10, 8, 5, 6, 5, 4, 10, 10, 5, 4, 14, 9, 5, 8, 14, 13, 5, 4, 5, 9, 5, 8, 5, 13, 5, 4, 14, 11, 9, 6, 14, 13, 9, 2, 0, 2, 23, 15, 0, 7, 23, 5, 16, 0, 8, 12, 16, 6, 8, 6, 4, 15, 6, 9, 4, 18, 6, 3, 8, 18, 9, 4, 8, 20, 9, 2, 0, 17, 18, 3, 0, 18, 18, 1, 13, 11, 11, 6, 13, 13, 11, 2, 0, 11, 11, 6, 0, 13, 11, 2, 0, 9, 24, 6, 12, 9, 12, 3, 0, 12, 12, 3, 6, 16, 8, 8, 6, 20, 8, 4, 10, 16, 14, 6, 10, 18, 14, 2, 1, 1, 21, 3, 1, 2, 21, 1, 0, 2, 24, 3, 0, 2, 12, 3, 2, 15, 8, 5, 6, 15, 4, 5, 2, 11, 21, 3, 9, 11, 7, 3, 1, 18, 12, 6, 1, 18, 6, 3, 7, 21, 6, 3, 10, 14, 4, 10, 10, 19, 4, 5, 7, 7, 4, 10, 7, 12, 4, 5, 9, 8, 6, 12, 9, 12, 6, 4, 7, 1, 9, 6, 10, 1, 3, 6, 3, 14, 19, 2, 3, 15, 19, 1, 7, 7, 10, 10, 7, 7, 5, 5, 12, 12, 5, 5, 3, 12, 18, 12, 3, 12, 9, 12, 8, 0, 6, 12, 10, 0, 2, 12, 3, 0, 17, 9, 3, 3, 17, 3, 6, 0, 12, 11, 10, 0, 4, 11, 1, 0, 6, 13, 4, 0, 3, 13, 5, 8, 16, 6, 5, 11, 16, 3, 8, 8, 5, 12, 8, 14, 5, 6, 3, 21, 18, 3, 9, 21, 6, 3, 0, 0, 6, 6, 3, 0, 3, 6, 2, 0, 20, 3, 2, 1, 20, 1, 4, 6, 15, 10, 9, 6, 5, 10, 9, 6, 6, 9, 11, 6, 2, 9, 9, 0, 6, 9, 11, 0, 2, 9, 14, 0, 6, 9, 16, 0, 2, 9, 7, 16, 9, 6, 7, 18, 9, 2, 14, 0, 6, 9, 16, 0, 2, 9, 4, 0, 6, 9, 6, 0, 2, 9, 17, 1, 6, 16, 19, 1, 2, 16, 1, 1, 6, 16, 3, 1, 2, 16, 14, 13, 6, 9, 14, 16, 6, 3, 0, 0, 6, 9, 0, 3, 6, 3, 9, 5, 6, 6, 9, 5, 3, 6, 3, 10, 9, 6, 6, 10, 3, 6, 14, 7, 3, 16, 14, 15, 3, 8, 4, 10, 14, 12, 4, 10, 7, 6, 11, 16, 7, 6, 7, 6, 12, 6, 7, 8, 12, 2, 7, 2, 4, 20, 9, 2, 2, 20, 14, 13, 6, 9, 14, 16, 6, 3, 10, 6, 4, 9, 12, 6, 2, 9, 14, 13, 6, 9, 14, 16, 6, 3, 5, 20, 14, 4, 5, 22, 14, 2, 4, 4, 16, 12, 4, 10, 16, 6, 9, 6, 6, 9, 11, 6, 2, 9, 3, 0, 21, 4, 3, 2, 21, 2, 4, 13, 6, 9, 4, 16, 6, 3, 16, 16, 5, 8, 16, 20, 5, 4, 4, 0, 16, 16, 4, 0, 8, 8, 12, 8, 8, 8, 6, 6, 14, 6, 13, 6, 7, 3, 6, 9, 7, 3, 10, 5, 4, 15, 10, 10, 4, 5, 9, 15, 12, 8, 15, 15, 6, 4, 9, 19, 6, 4, 6, 7, 12, 4, 12, 7, 6, 4, 5, 6, 14, 6, 12, 6, 7, 3, 5, 9, 7, 3, 3, 6, 18, 10, 3, 6, 9, 5, 12, 11, 9, 5, 6, 0, 18, 21, 12, 0, 6, 21, 0, 0, 24, 21, 8, 0, 8, 21, 6, 18, 18, 3, 6, 19, 18, 1, 0, 15, 9, 6, 0, 17, 9, 2, 4, 3, 19, 2, 4, 4, 19, 1, 0, 3, 24, 2, 0, 4, 24, 1, 15, 14, 9, 4, 15, 16, 9, 2, 0, 14, 9, 4, 0, 16, 9, 2, 6, 15, 18, 2, 6, 16, 18, 1, 3, 17, 18, 3, 3, 18, 18, 1, 12, 0, 3, 23, 13, 0, 1, 23, 6, 0, 8, 6, 6, 3, 8, 3, 6, 16, 18, 3, 6, 17, 18, 1, 9, 0, 3, 23, 10, 0, 1, 23, 10, 7, 4, 10, 10, 12, 4, 5, 7, 8, 10, 12, 7, 12, 10, 4, 14, 9, 6, 14, 17, 9, 3, 7, 14, 16, 3, 7, 2, 0, 10, 9, 2, 3, 10, 3, 11, 1, 5, 12, 11, 7, 5, 6, 1, 4, 12, 10, 1, 4, 6, 5, 7, 9, 6, 5, 15, 1, 9, 4, 15, 3, 9, 2, 1, 2, 8, 10, 1, 2, 4, 5, 5, 7, 4, 5, 10, 1, 5, 12, 10, 5, 5, 4, 4, 0, 14, 24, 11, 0, 7, 24, 7, 17, 10, 4, 7, 19, 10, 2, 10, 14, 4, 10, 10, 19, 4, 5, 13, 15, 6, 9, 15, 15, 2, 9, 3, 21, 18, 3, 3, 22, 18, 1, 13, 15, 6, 9, 15, 15, 2, 9, 5, 15, 6, 9, 7, 15, 2, 9, 10, 6, 4, 18, 12, 6, 2, 9, 10, 15, 2, 9, 7, 3, 6, 11, 9, 3, 2, 11, 15, 1, 9, 4, 15, 3, 9, 2, 5, 4, 14, 8, 5, 8, 14, 4, 8, 1, 15, 9, 8, 4, 15, 3, 7, 2, 8, 10, 7, 2, 4, 5, 11, 7, 4, 5, 12, 2, 6, 12, 12, 2, 3, 12, 6, 2, 6, 12, 9, 2, 3, 12, 7, 7, 12, 4, 7, 7, 6, 4, 6, 3, 12, 10, 10, 3, 4, 10, 5, 6, 16, 6, 13, 6, 8, 3, 5, 9, 8, 3, 3, 1, 18, 9, 9, 1, 6, 9, 3, 8, 18, 5, 9, 8, 6, 5, 0, 0, 24, 22, 0, 0, 12, 11, 12, 11, 12, 11, 14, 16, 9, 6, 14, 18, 9, 2, 0, 16, 24, 8, 0, 20, 24, 4, 1, 19, 22, 4, 12, 19, 11, 2, 1, 21, 11, 2, 1, 16, 9, 6, 1, 18, 9, 2, 7, 8, 10, 4, 7, 8, 5, 4, 9, 15, 6, 9, 11, 15, 2, 9, 10, 18, 12, 6, 16, 18, 6, 3, 10, 21, 6, 3, 2, 18, 12, 6, 2, 18, 6, 3, 8, 21, 6, 3, 8, 3, 16, 9, 8, 6, 16, 3, 0, 5, 10, 6, 0, 7, 10, 2, 5, 5, 18, 3, 5, 6, 18, 1, 2, 6, 9, 6, 2, 9, 9, 3, 14, 2, 10, 9, 14, 5, 10, 3, 3, 6, 18, 3, 3, 7, 18, 1, 9, 2, 15, 6, 9, 4, 15, 2, 4, 8, 15, 6, 4, 10, 15, 2, 0, 5, 24, 4, 12, 5, 12, 2, 0, 7, 12, 2, 7, 8, 6, 12, 9, 8, 2, 12, 11, 0, 6, 9, 13, 0, 2, 9, 0, 12, 6, 12, 0, 12, 3, 6, 3, 18, 3, 6, 14, 12, 10, 6, 14, 14, 10, 2, 2, 7, 18, 9, 2, 10, 18, 3, 11, 14, 10, 9, 11, 17, 10, 3, 7, 6, 10, 8, 7, 6, 5, 4, 12, 10, 5, 4, 6, 6, 14, 6, 13, 6, 7, 3, 6, 9, 7, 3, 4, 13, 9, 7, 7, 13, 3, 7, 14, 10, 6, 12, 17, 10, 3, 6, 14, 16, 3, 6, 4, 10, 6, 12, 4, 10, 3, 6, 7, 16, 3, 6, 13, 9, 8, 6, 13, 9, 4, 6, 8, 3, 4, 14, 10, 3, 2, 14, 17, 0, 3, 18, 18, 0, 1, 18, 4, 12, 16, 12, 12, 12, 8, 12, 15, 0, 6, 14, 17, 0, 2, 14, 3, 0, 6, 14, 5, 0, 2, 14, 12, 2, 12, 20, 16, 2, 4, 20, 0, 2, 12, 20, 4, 2, 4, 20, 16, 0, 6, 17, 18, 0, 2, 17, 2, 0, 6, 17, 4, 0, 2, 17, 15, 6, 9, 6, 15, 8, 9, 2, 0, 6, 9, 6, 0, 8, 9, 2, 18, 1, 6, 13, 20, 1, 2, 13, 0, 1, 6, 13, 2, 1, 2, 13, 16, 0, 4, 9, 16, 0, 2, 9, 5, 10, 12, 7, 9, 10, 4, 7, 12, 9, 12, 6, 12, 11, 12, 2, 0, 9, 12, 6, 0, 11, 12, 2, 5, 7, 14, 9, 5, 10, 14, 3, 0, 15, 20, 3, 0, 16, 20, 1, 8, 10, 8, 10, 12, 10, 4, 5, 8, 15, 4, 5, 5, 4, 13, 9, 5, 7, 13, 3, 10, 2, 6, 18, 10, 8, 6, 6, 6, 0, 6, 9, 8, 0, 2, 9, 6, 9, 12, 4, 6, 11, 12, 2, 3, 2, 15, 12, 3, 6, 15, 4, 12, 0, 12, 5, 16, 0, 4, 5, 0, 15, 18, 3, 6, 15, 6, 3, 0, 14, 24, 5, 8, 14, 8, 5, 5, 1, 3, 18, 6, 1, 1, 18, 10, 0, 4, 14, 10, 0, 2, 14, 9, 3, 4, 9, 11, 3, 2, 9, 8, 2, 12, 6, 14, 2, 6, 3, 8, 5, 6, 3, 0, 4, 17, 4, 0, 6, 17, 2, 16, 16, 5, 8, 16, 20, 5, 4, 3, 16, 5, 8, 3, 20, 5, 4, 6, 18, 18, 2, 6, 19, 18, 1, 0, 0, 12, 5, 4, 0, 4, 5, 14, 3, 6, 12, 17, 3, 3, 6, 14, 9, 3, 6, 0, 12, 6, 12, 2, 12, 2, 12, 2, 3, 21, 3, 2, 4, 21, 1, 4, 3, 6, 12, 4, 3, 3, 6, 7, 9, 3, 6, 12, 8, 12, 6, 18, 8, 6, 3, 12, 11, 6, 3, 0, 15, 16, 9, 8, 15, 8, 9, 6, 13, 18, 5, 6, 13, 9, 5, 1, 6, 15, 6, 6, 6, 5, 6, 11, 9, 9, 6, 14, 9, 3, 6, 3, 0, 15, 11, 8, 0, 5, 11, 15, 3, 3, 18, 15, 9, 3, 6, 6, 3, 3, 18, 6, 9, 3, 6, 9, 5, 10, 8, 14, 5, 5, 4, 9, 9, 5, 4, 4, 4, 16, 8, 4, 4, 8, 4, 12, 8, 8, 4, 7, 7, 12, 3, 7, 7, 6, 3, 5, 0, 9, 13, 8, 0, 3, 13, 11, 0, 6, 9, 13, 0, 2, 9, 7, 0, 6, 9, 9, 0, 2, 9, 8, 1, 10, 9, 8, 4, 10, 3, 0, 2, 18, 2, 0, 3, 18, 1, 10, 13, 14, 6, 17, 13, 7, 3, 10, 16, 7, 3, 0, 13, 14, 6, 0, 13, 7, 3, 7, 16, 7, 3, 20, 2, 3, 21, 21, 2, 1, 21, 0, 9, 5, 12, 0, 13, 5, 4, 12, 6, 12, 6, 12, 8, 12, 2, 1, 8, 20, 3, 1, 9, 20, 1, 5, 7, 19, 3, 5, 8, 19, 1, 1, 12, 9, 6, 1, 14, 9, 2, 6, 10, 14, 12, 6, 14, 14, 4, 5, 6, 14, 18, 5, 12, 14, 6, 11, 12, 9, 7, 14, 12, 3, 7, 1, 15, 18, 4, 1, 17, 18, 2, 11, 14, 6, 9, 11, 17, 6, 3, 0, 8, 18, 4, 0, 8, 9, 2, 9, 10, 9, 2, 3, 10, 20, 6, 13, 10, 10, 3, 3, 13, 10, 3, 1, 10, 20, 6, 1, 10, 10, 3, 11, 13, 10, 3, 0, 9, 24, 2, 0, 9, 12, 2, 1, 12, 20, 8, 1, 12, 10, 4, 11, 16, 10, 4, 11, 12, 9, 7, 14, 12, 3, 7, 4, 12, 9, 7, 7, 12, 3, 7, 12, 12, 8, 5, 12, 12, 4, 5, 4, 12, 8, 5, 8, 12, 4, 5, 13, 10, 4, 10, 13, 10, 2, 10, 1, 15, 20, 2, 11, 15, 10, 2, 9, 10, 6, 6, 9, 10, 3, 6, 0, 1, 21, 3, 7, 1, 7, 3, 6, 4, 13, 9, 6, 7, 13, 3, 6, 5, 12, 5, 10, 5, 4, 5, 10, 10, 10, 6, 10, 12, 10, 2, 6, 12, 5, 8, 6, 16, 5, 4, 13, 0, 6, 9, 15, 0, 2, 9, 2, 10, 18, 6, 8, 10, 6, 6, 11, 2, 9, 4, 11, 4, 9, 2, 1, 20, 21, 3, 8, 20, 7, 3, 1, 10, 22, 2, 1, 11, 22, 1, 0, 17, 18, 3, 0, 18, 18, 1, 13, 0, 6, 9, 15, 0, 2, 9, 5, 0, 6, 9, 7, 0, 2, 9, 18, 2, 6, 20, 20, 2, 2, 20, 0, 2, 6, 20, 2, 2, 2, 20, 11, 7, 6, 14, 14, 7, 3, 7, 11, 14, 3, 7, 0, 1, 4, 9, 2, 1, 2, 9, 12, 14, 9, 4, 12, 16, 9, 2, 1, 13, 9, 4, 1, 15, 9, 2, 7, 6, 15, 6, 7, 8, 15, 2, 8, 2, 3, 18, 8, 8, 3, 6, 6, 6, 12, 6, 12, 6, 6, 3, 6, 9, 6, 3, 2, 19, 20, 4, 2, 19, 10, 2, 12, 21, 10, 2, 14, 15, 6, 9, 14, 18, 6, 3, 3, 5, 18, 14, 3, 5, 9, 7, 12, 12, 9, 7, 15, 6, 4, 18, 17, 6, 2, 9, 15, 15, 2, 9, 5, 6, 4, 18, 5, 6, 2, 9, 7, 15, 2, 9, 11, 0, 6, 9, 13, 0, 2, 9, 7, 0, 6, 9, 9, 0, 2, 9, 11, 5, 6, 9, 13, 5, 2, 9, 9, 5, 6, 6, 12, 5, 3, 6, 4, 1, 16, 6, 12, 1, 8, 3, 4, 4, 8, 3, 9, 13, 6, 11, 11, 13, 2, 11, 17, 1, 6, 12, 20, 1, 3, 6, 17, 7, 3, 6, 1, 17, 18, 3, 1, 18, 18, 1, 7, 13, 10, 8, 7, 17, 10, 4, 6, 18, 10, 6, 6, 20, 10, 2, 9, 14, 9, 4, 9, 16, 9, 2, 1, 1, 6, 12, 1, 1, 3, 6, 4, 7, 3, 6, 19, 4, 5, 12, 19, 8, 5, 4, 0, 0, 8, 8, 4, 0, 4, 8, 3, 5, 19, 3, 3, 6, 19, 1, 1, 5, 12, 6, 1, 5, 6, 3, 7, 8, 6, 3, 2, 1, 21, 8, 9, 1, 7, 8, 4, 1, 16, 8, 4, 5, 16, 4, 6, 0, 18, 3, 6, 1, 18, 1, 4, 4, 10, 14, 4, 11, 10, 7, 15, 6, 4, 10, 15, 11, 4, 5, 3, 18, 18, 3, 9, 18, 6, 3, 8, 18, 12, 6, 12, 18, 4, 6, 3, 15, 6, 9, 6, 15, 3, 9, 15, 7, 6, 8, 15, 11, 6, 4, 3, 7, 6, 8, 3, 11, 6, 4, 5, 9, 18, 6, 14, 9, 9, 3, 5, 12, 9, 3, 1, 13, 12, 6, 1, 15, 12, 2, 14, 15, 10, 6, 14, 17, 10, 2, 0, 15, 10, 6, 0, 17, 10, 2, 15, 13, 6, 9, 15, 16, 6, 3, 3, 13, 6, 9, 3, 16, 6, 3, 9, 5, 8, 8, 9, 5, 4, 8, 1, 18, 12, 6, 1, 18, 6, 3, 7, 21, 6, 3, 13, 19, 10, 4, 13, 21, 10, 2, 1, 19, 10, 4, 1, 21, 10, 2, 6, 19, 18, 3, 6, 20, 18, 1, 8, 14, 4, 10, 8, 19, 4, 5, 0, 0, 24, 6, 0, 2, 24, 2, 0, 1, 6, 9, 0, 4, 6, 3, 4, 9, 20, 6, 14, 9, 10, 3, 4, 12, 10, 3, 1, 15, 19, 8, 1, 19, 19, 4, 14, 0, 10, 6, 14, 2, 10, 2, 1, 10, 21, 14, 8, 10, 7, 14, 10, 10, 8, 8, 10, 10, 4, 8, 6, 8, 10, 4, 11, 8, 5, 4, 10, 5, 4, 9, 10, 5, 2, 9, 7, 5, 6, 10, 9, 5, 2, 10, 14, 4, 4, 13, 14, 4, 2, 13, 6, 4, 4, 13, 8, 4, 2, 13, 8, 7, 9, 6, 11, 7, 3, 6, 3, 6, 16, 6, 3, 6, 8, 3, 11, 9, 8, 3, 5, 4, 16, 14, 13, 4, 8, 7, 5, 11, 8, 7, 0, 0, 24, 4, 0, 0, 12, 2, 12, 2, 12, 2, 9, 1, 9, 6, 12, 1, 3, 6, 4, 1, 14, 4, 11, 1, 7, 4, 10, 14, 7, 9, 10, 17, 7, 3, 8, 3, 8, 10, 8, 3, 4, 5, 12, 8, 4, 5, 7, 3, 12, 5, 11, 3, 4, 5, 8, 2, 4, 13, 10, 2, 2, 13, 11, 2, 3, 19, 12, 2, 1, 19, 7, 7, 9, 6, 10, 7, 3, 6, 4, 22, 20, 2, 4, 22, 10, 2, 0, 16, 24, 4, 0, 16, 12, 2, 12, 18, 12, 2, 7, 3, 12, 5, 11, 3, 4, 5, 1, 10, 8, 14, 1, 10, 4, 7, 5, 17, 4, 7, 11, 16, 6, 6, 11, 19, 6, 3, 6, 0, 10, 24, 6, 0, 5, 12, 11, 12, 5, 12, 7, 5, 14, 14, 14, 5, 7, 7, 7, 12, 7, 7, 7, 8, 10, 8, 7, 8, 5, 4, 12, 12, 5, 4, 9, 1, 9, 6, 12, 1, 3, 6, 0, 6, 24, 3, 12, 6, 12, 3, 7, 3, 12, 5, 11, 3, 4, 5, 1, 13, 22, 4, 1, 13, 11, 2, 12, 15, 11, 2, 9, 12, 12, 6, 9, 14, 12, 2, 0, 5, 9, 6, 0, 7, 9, 2, 1, 5, 23, 6, 1, 7, 23, 2, 1, 6, 19, 12, 1, 10, 19, 4, 9, 1, 6, 21, 9, 8, 6, 7, 3, 19, 18, 3, 9, 19, 6, 3, 9, 14, 6, 9, 11, 14, 2, 9, 9, 6, 4, 12, 11, 6, 2, 12, 16, 0, 6, 9, 18, 0, 2, 9, 2, 0, 6, 9, 4, 0, 2, 9, 13, 1, 4, 22, 15, 1, 2, 11, 13, 12, 2, 11, 1, 8, 8, 12, 1, 14, 8, 6, 14, 7, 7, 9, 14, 10, 7, 3, 3, 12, 18, 4, 3, 12, 9, 2, 12, 14, 9, 2, 13, 1, 4, 22, 15, 1, 2, 11, 13, 12, 2, 11, 7, 1, 4, 22, 7, 1, 2, 11, 9, 12, 2, 11, 4, 7, 20, 4, 14, 7, 10, 2, 4, 9, 10, 2, 9, 10, 6, 7, 12, 10, 3, 7, 7, 7, 10, 4, 7, 7, 5, 4, 0, 3, 4, 15, 0, 8, 4, 5, 15, 0, 8, 12, 19, 0, 4, 6, 15, 6, 4, 6, 1, 0, 8, 12, 1, 0, 4, 6, 5, 6, 4, 6, 14, 5, 6, 16, 16, 5, 2, 16, 4, 5, 6, 16, 6, 5, 2, 16, 15, 0, 6, 16, 17, 0, 2, 16, 3, 0, 6, 16, 5, 0, 2, 16, 0, 2, 24, 3, 0, 3, 24, 1, 7, 1, 10, 4, 7, 3, 10, 2, 1, 0, 23, 8, 1, 4, 23, 4, 1, 17, 19, 3, 1, 18, 19, 1, 6, 18, 18, 2, 6, 19, 18, 1, 1, 17, 9, 6, 1, 19, 9, 2, 15, 15, 6, 9, 15, 18, 6, 3, 3, 15, 6, 9, 3, 18, 6, 3, 4, 14, 20, 6, 4, 17, 20, 3, 0, 10, 6, 14, 0, 10, 3, 7, 3, 17, 3, 7, 6, 18, 18, 3, 6, 19, 18, 1, 4, 12, 9, 7, 7, 12, 3, 7, 6, 10, 18, 5, 12, 10, 6, 5, 0, 10, 18, 5, 6, 10, 6, 5, 3, 2, 18, 9, 9, 2, 6, 9, 4, 6, 10, 10, 4, 6, 5, 5, 9, 11, 5, 5, 20, 14, 4, 9, 20, 14, 2, 9, 0, 14, 4, 9, 2, 14, 2, 9, 11, 1, 4, 20, 13, 1, 2, 10, 11, 11, 2, 10, 6, 21, 12, 3, 12, 21, 6, 3, 11, 1, 4, 20, 13, 1, 2, 10, 11, 11, 2, 10, 1, 16, 10, 8, 1, 16, 5, 4, 6, 20, 5, 4, 11, 1, 4, 20, 13, 1, 2, 10, 11, 11, 2, 10, 1, 0, 3, 19, 2, 0, 1, 19, 11, 1, 4, 20, 13, 1, 2, 10, 11, 11, 2, 10, 0, 1, 6, 9, 2, 1, 2, 9, 3, 7, 19, 4, 3, 9, 19, 2, 7, 14, 9, 6, 7, 16, 9, 2, 17, 1, 7, 6, 17, 4, 7, 3, 5, 0, 14, 8, 5, 4, 14, 4, 16, 1, 8, 6, 16, 4, 8, 3, 0, 1, 8, 6, 0, 4, 8, 3, 6, 0, 18, 4, 15, 0, 9, 2, 6, 2, 9, 2, 0, 14, 9, 6, 0, 16, 9, 2, 3, 7, 18, 8, 9, 7, 6, 8, 2, 11, 6, 9, 4, 11, 2, 9, 10, 5, 6, 9, 12, 5, 2, 9, 10, 6, 4, 18, 10, 6, 2, 9, 12, 15, 2, 9, 11, 1, 4, 20, 13, 1, 2, 10, 11, 11, 2, 10, 9, 1, 4, 20, 9, 1, 2, 10, 11, 11, 2, 10, 5, 9, 18, 6, 14, 9, 9, 3, 5, 12, 9, 3, 6, 4, 6, 9, 8, 4, 2, 9, 10, 16, 8, 6, 10, 16, 4, 6, 0, 0, 18, 8, 0, 0, 9, 4, 9, 4, 9, 4, 6, 5, 14, 12, 13, 5, 7, 6, 6, 11, 7, 6, 4, 3, 15, 7, 9, 3, 5, 7, 14, 12, 10, 6, 14, 14, 10, 2, 0, 11, 4, 10, 0, 16, 4, 5, 1, 10, 22, 3, 1, 11, 22, 1, 8, 9, 6, 10, 10, 9, 2, 10, 13, 2, 6, 12, 16, 2, 3, 6, 13, 8, 3, 6, 10, 6, 4, 18, 10, 6, 2, 9, 12, 15, 2, 9, 7, 8, 10, 16, 12, 8, 5, 8, 7, 16, 5, 8, 8, 1, 8, 12, 8, 1, 4, 6, 12, 7, 4, 6, 7, 1, 12, 14, 13, 1, 6, 7, 7, 8, 6, 7, 2, 14, 12, 6, 2, 16, 12, 2, 11, 16, 6, 6, 11, 19, 6, 3, 7, 16, 6, 6, 7, 19, 6, 3, 13, 4, 4, 10, 13, 4, 2, 10, 0, 19, 19, 3, 0, 20, 19, 1, 12, 8, 6, 8, 12, 12, 6, 4, 8, 1, 8, 22, 8, 12, 8, 11, 12, 8, 6, 8, 12, 12, 6, 4, 6, 8, 6, 8, 6, 12, 6, 4, 14, 5, 6, 9, 14, 8, 6, 3, 0, 6, 24, 4, 0, 8, 24, 2, 14, 12, 10, 6, 14, 14, 10, 2, 0, 12, 10, 6, 0, 14, 10, 2, 4, 6, 19, 3, 4, 7, 19, 1, 1, 6, 19, 3, 1, 7, 19, 1, 4, 0, 16, 9, 4, 3, 16, 3, 0, 1, 24, 5, 8, 1, 8, 5, 3, 6, 6, 15, 3, 11, 6, 5, 9, 6, 6, 9, 11, 6, 2, 9, 0, 17, 18, 3, 0, 18, 18, 1, 6, 22, 18, 2, 6, 23, 18, 1, 2, 12, 6, 9, 2, 15, 6, 3, 18, 12, 6, 9, 18, 15, 6, 3, 0, 12, 6, 9, 0, 15, 6, 3, 11, 14, 4, 10, 11, 19, 4, 5, 9, 6, 6, 16, 9, 14, 6, 8, 7, 7, 10, 10, 7, 12, 10, 5, 1, 3, 6, 13, 3, 3, 2, 13, 18, 1, 6, 13, 18, 1, 3, 13, 5, 1, 6, 9, 7, 1, 2, 9, 18, 2, 6, 11, 18, 2, 3, 11, 0, 2, 6, 11, 3, 2, 3, 11, 9, 12, 15, 6, 9, 14, 15, 2, 2, 2, 20, 3, 2, 3, 20, 1, 10, 6, 4, 9, 10, 6, 2, 9, 5, 6, 12, 14, 5, 6, 6, 7, 11, 13, 6, 7, 9, 0, 6, 9, 11, 0, 2, 9, 7, 0, 9, 6, 10, 0, 3, 6, 10, 6, 6, 9, 12, 6, 2, 9, 4, 1, 12, 20, 4, 1, 6, 10, 10, 11, 6, 10, 6, 7, 18, 3, 6, 7, 9, 3, 0, 7, 18, 3, 9, 7, 9, 3, 3, 20, 18, 3, 9, 20, 6, 3, 9, 6, 6, 9, 11, 6, 2, 9, 6, 2, 12, 15, 10, 2, 4, 15, 2, 3, 18, 3, 2, 4, 18, 1, 19, 4, 4, 18, 21, 4, 2, 9, 19, 13, 2, 9, 0, 1, 19, 3, 0, 2, 19, 1, 5, 0, 15, 4, 5, 2, 15, 2, 5, 2, 14, 5, 12, 2, 7, 5, 1, 2, 22, 14, 1, 2, 11, 14, 8, 15, 6, 9, 10, 15, 2, 9, 6, 17, 18, 3, 6, 18, 18, 1, 9, 6, 3, 18, 9, 12, 3, 6, 2, 0, 20, 3, 2, 1, 20, 1, 5, 4, 5, 12, 5, 8, 5, 4, 8, 6, 12, 5, 12, 6, 4, 5, 9, 12, 6, 12, 9, 12, 3, 6, 12, 18, 3, 6, 14, 14, 8, 10, 18, 14, 4, 5, 14, 19, 4, 5, 2, 14, 8, 10, 2, 14, 4, 5, 6, 19, 4, 5, 10, 18, 12, 6, 16, 18, 6, 3, 10, 21, 6, 3, 1, 3, 6, 9, 1, 6, 6, 3, 11, 3, 3, 20, 12, 3, 1, 20, 4, 6, 14, 6, 4, 6, 7, 3, 11, 9, 7, 3, 6, 5, 12, 13, 10, 5, 4, 13, 5, 4, 4, 15, 5, 9, 4, 5, 9, 16, 15, 4, 14, 16, 5, 4, 7, 8, 6, 14, 7, 8, 3, 7, 10, 15, 3, 7, 7, 6, 10, 6, 7, 8, 10, 2, 2, 5, 18, 3, 2, 6, 18, 1, 5, 1, 15, 8, 5, 5, 15, 4, 7, 1, 8, 18, 7, 10, 8, 9, 0, 10, 24, 3, 0, 11, 24, 1, 0, 2, 6, 13, 2, 2, 2, 13, 16, 0, 8, 10, 20, 0, 4, 5, 16, 5, 4, 5, 5, 1, 10, 9, 5, 4, 10, 3, 5, 6, 18, 3, 5, 7, 18, 1, 0, 1, 24, 3, 0, 2, 24, 1, 11, 4, 6, 11, 13, 4, 2, 11, 0, 0, 8, 10, 0, 0, 4, 5, 4, 5, 4, 5, 4, 16, 18, 3, 4, 17, 18, 1, 2, 16, 18, 3, 2, 17, 18, 1, 3, 0, 18, 10, 12, 0, 9, 5, 3, 5, 9, 5, 2, 3, 20, 21, 12, 3, 10, 21, 6, 7, 14, 3, 6, 7, 7, 3, 0, 9, 12, 6, 0, 9, 6, 3, 6, 12, 6, 3, 3, 14, 21, 4, 10, 14, 7, 4, 0, 14, 21, 4, 7, 14, 7, 4, 5, 21, 18, 3, 11, 21, 6, 3, 1, 21, 18, 3, 7, 21, 6, 3, 19, 4, 4, 18, 21, 4, 2, 9, 19, 13, 2, 9, 3, 7, 18, 3, 3, 8, 18, 1, 19, 4, 4, 18, 21, 4, 2, 9, 19, 13, 2, 9, 7, 15, 10, 6, 7, 17, 10, 2, 9, 13, 11, 9, 9, 16, 11, 3, 0, 6, 4, 10, 0, 11, 4, 5, 15, 16, 9, 6, 15, 18, 9, 2, 1, 5, 4, 18, 1, 5, 2, 9, 3, 14, 2, 9, 9, 8, 8, 10, 13, 8, 4, 5, 9, 13, 4, 5, 7, 8, 8, 10, 7, 8, 4, 5, 11, 13, 4, 5, 9, 8, 12, 5, 13, 8, 4, 5, 7, 8, 9, 7, 10, 8, 3, 7, 9, 8, 12, 5, 13, 8, 4, 5, 7, 6, 9, 7, 10, 6, 3, 7, 9, 8, 12, 5, 13, 8, 4, 5, 10, 5, 4, 18, 10, 11, 4, 6, 5, 5, 14, 12, 5, 11, 14, 6, 0, 1, 11, 4, 0, 3, 11, 2, 9, 10, 6, 10, 11, 10, 2, 10, 2, 17, 11, 6, 2, 19, 11, 2, 15, 16, 9, 6, 15, 18, 9, 2, 1, 10, 18, 2, 1, 11, 18, 1, 6, 4, 12, 13, 10, 4, 4, 13, 0, 18, 18, 3, 0, 19, 18, 1, 6, 18, 18, 3, 6, 19, 18, 1, 0, 16, 9, 6, 0, 18, 9, 2, 13, 15, 9, 6, 13, 17, 9, 2, 2, 15, 9, 6, 2, 17, 9, 2, 13, 1, 6, 16, 13, 1, 3, 16, 5, 1, 6, 16, 8, 1, 3, 16, 11, 5, 6, 10, 13, 5, 2, 10, 7, 5, 6, 10, 9, 5, 2, 10, 10, 0, 6, 24, 12, 0, 2, 24, 3, 4, 4, 20, 3, 4, 2, 10, 5, 14, 2, 10, 14, 0, 6, 9, 16, 0, 2, 9, 4, 0, 6, 9, 6, 0, 2, 9, 4, 5, 18, 5, 10, 5, 6, 5, 5, 6, 6, 9, 7, 6, 2, 9, 7, 2, 15, 8, 12, 2, 5, 8, 2, 2, 15, 8, 7, 2, 5, 8, 10, 0, 4, 9, 10, 0, 2, 9, 3, 4, 6, 12, 3, 4, 3, 6, 6, 10, 3, 6, 16, 0, 8, 18, 16, 0, 4, 18, 0, 0, 8, 18, 4, 0, 4, 18, 0, 7, 24, 6, 0, 9, 24, 2, 4, 7, 14, 3, 11, 7, 7, 3, 10, 8, 8, 15, 10, 8, 4, 15, 7, 0, 10, 14, 12, 0, 5, 14, 13, 10, 8, 10, 17, 10, 4, 5, 13, 15, 4, 5, 3, 0, 4, 9, 5, 0, 2, 9, 16, 1, 6, 8, 16, 1, 3, 8, 2, 1, 6, 8, 5, 1, 3, 8, 3, 6, 18, 12, 3, 10, 18, 4, 4, 12, 16, 4, 4, 14, 16, 2, 4, 9, 16, 15, 4, 14, 16, 5, 3, 10, 8, 10, 3, 10, 4, 5, 7, 15, 4, 5, 8, 18, 16, 6, 16, 18, 8, 3, 8, 21, 8, 3, 2, 16, 12, 5, 6, 16, 4, 5, 14, 14, 9, 4, 14, 16, 9, 2, 7, 14, 9, 6, 7, 16, 9, 2, 4, 10, 16, 12, 4, 14, 16, 4, 0, 13, 19, 6, 0, 15, 19, 2, 10, 13, 9, 6, 10, 15, 9, 2, 5, 0, 3, 23, 6, 0, 1, 23, 0, 8, 24, 6, 0, 10, 24, 2, 0, 5, 5, 12, 0, 9, 5, 4, 3, 0, 19, 18, 3, 9, 19, 9, 9, 11, 6, 12, 9, 11, 3, 6, 12, 17, 3, 6, 0, 5, 24, 8, 12, 5, 12, 4, 0, 9, 12, 4, 6, 18, 9, 4, 6, 20, 9, 2, 8, 8, 10, 6, 8, 10, 10, 2, 2, 7, 20, 3, 2, 8, 20, 1, 12, 0, 7, 20, 12, 10, 7, 10, 5, 0, 7, 20, 5, 10, 7, 10, 14, 2, 2, 18, 14, 11, 2, 9, 5, 8, 10, 12, 10, 8, 5, 12, 6, 9, 12, 8, 12, 9, 6, 4, 6, 13, 6, 4, 7, 7, 3, 14, 7, 14, 3, 7, 11, 2, 12, 16, 17, 2, 6, 8, 11, 10, 6, 8, 7, 0, 6, 9, 9, 0, 2, 9, 13, 14, 9, 4, 13, 16, 9, 2, 0, 12, 22, 4, 0, 12, 11, 2, 11, 14, 11, 2, 1, 12, 22, 6, 12, 12, 11, 3, 1, 15, 11, 3, 6, 6, 9, 6, 9, 6, 3, 6, 10, 0, 4, 9, 10, 0, 2, 9, 3, 8, 18, 7, 9, 8, 6, 7, 0, 6, 24, 6, 0, 8, 24, 2, 0, 11, 24, 10, 8, 11, 8, 10, 3, 3, 18, 21, 9, 3, 6, 21, 7, 12, 4, 10, 9, 12, 2, 10, 10, 16, 10, 8, 15, 16, 5, 4, 10, 20, 5, 4, 8, 6, 6, 9, 10, 6, 2, 9, 12, 10, 6, 12, 15, 10, 3, 6, 12, 16, 3, 6, 6, 10, 6, 12, 6, 10, 3, 6, 9, 16, 3, 6, 16, 12, 6, 12, 19, 12, 3, 6, 16, 18, 3, 6, 2, 12, 6, 12, 2, 12, 3, 6, 5, 18, 3, 6, 10, 15, 6, 9, 12, 15, 2, 9, 8, 15, 6, 9, 10, 15, 2, 9, 14, 20, 10, 4, 14, 20, 5, 4, 0, 20, 10, 4, 5, 20, 5, 4, 11, 17, 9, 6, 11, 19, 9, 2, 3, 2, 14, 4, 3, 4, 14, 2, 10, 1, 10, 4, 10, 3, 10, 2, 0, 15, 10, 4, 5, 15, 5, 4, 19, 2, 3, 19, 20, 2, 1, 19, 4, 12, 9, 8, 7, 12, 3, 8, 4, 7, 5, 12, 4, 11, 5, 4, 0, 1, 24, 3, 8, 1, 8, 3, 6, 8, 12, 4, 6, 10, 12, 2, 19, 3, 4, 10, 19, 3, 2, 10, 0, 6, 9, 6, 3, 6, 3, 6, 18, 0, 6, 22, 20, 0, 2, 22, 0, 0, 6, 22, 2, 0, 2, 22, 5, 15, 19, 3, 5, 16, 19, 1, 10, 7, 4, 15, 10, 12, 4, 5, 9, 6, 6, 9, 11, 6, 2, 9, 0, 21, 18, 3, 0, 22, 18, 1, 7, 3, 10, 15, 7, 8, 10, 5, 1, 7, 18, 3, 1, 8, 18, 1, 8, 2, 9, 6, 11, 2, 3, 6, 0, 10, 24, 14, 0, 17, 24, 7, 13, 9, 8, 10, 17, 9, 4, 5, 13, 14, 4, 5, 10, 5, 4, 9, 12, 5, 2, 9, 13, 9, 8, 10, 17, 9, 4, 5, 13, 14, 4, 5, 7, 11, 10, 10, 7, 11, 5, 5, 12, 16, 5, 5, 4, 13, 18, 4, 13, 13, 9, 2, 4, 15, 9, 2, 0, 0, 19, 2, 0, 1, 19, 1, 0, 18, 24, 6, 8, 18, 8, 6, 6, 4, 8, 16, 6, 12, 8, 8, 7, 8, 10, 4, 7, 10, 10, 2, 0, 3, 6, 9, 0, 6, 6, 3, 13, 15, 7, 9, 13, 18, 7, 3, 3, 18, 12, 6, 3, 18, 6, 3, 9, 21, 6, 3, 12, 14, 6, 9, 12, 17, 6, 3, 2, 15, 15, 8, 2, 19, 15, 4, 9, 6, 6, 16, 9, 14, 6, 8, 6, 6, 7, 12, 6, 10, 7, 4, 14, 6, 6, 9, 14, 9, 6, 3, 5, 14, 6, 9, 5, 17, 6, 3, 10, 8, 6, 9, 12, 8, 2, 9, 6, 6, 4, 18, 6, 6, 2, 9, 8, 15, 2, 9, 14, 9, 6, 12, 17, 9, 3, 6, 14, 15, 3, 6, 4, 9, 6, 12, 4, 9, 3, 6, 7, 15, 3, 6, 14, 15, 9, 6, 14, 17, 9, 2, 0, 20, 18, 4, 0, 20, 9, 2, 9, 22, 9, 2, 13, 18, 9, 6, 13, 20, 9, 2, 2, 18, 9, 6, 2, 20, 9, 2, 6, 16, 18, 3, 6, 17, 18, 1, 0, 16, 18, 3, 0, 17, 18, 1, 19, 2, 4, 22, 21, 2, 2, 11, 19, 13, 2, 11, 1, 2, 4, 22, 1, 2, 2, 11, 3, 13, 2, 11, 15, 0, 2, 24, 15, 0, 1, 24, 3, 20, 16, 4, 11, 20, 8, 4, 11, 6, 4, 18, 13, 6, 2, 9, 11, 15, 2, 9, 7, 9, 10, 14, 7, 9, 5, 7, 12, 16, 5, 7, 14, 6, 6, 9, 14, 9, 6, 3, 3, 6, 7, 9, 3, 9, 7, 3, 20, 4, 4, 20, 22, 4, 2, 10, 20, 14, 2, 10, 7, 6, 6, 9, 7, 9, 6, 3, 7, 0, 10, 14, 12, 0, 5, 7, 7, 7, 5, 7, 2, 1, 18, 6, 11, 1, 9, 6, 15, 0, 2, 24, 15, 0, 1, 24, 7, 0, 2, 24, 8, 0, 1, 24, 13, 12, 6, 7, 13, 12, 3, 7, 5, 12, 6, 7, 8, 12, 3, 7, 3, 5, 18, 19, 9, 5, 6, 19, 5, 6, 9, 6, 8, 6, 3, 6, 9, 5, 9, 6, 12, 5, 3, 6, 3, 16, 10, 8, 3, 16, 5, 4, 8, 20, 5, 4, 19, 8, 5, 15, 19, 13, 5, 5, 0, 8, 5, 15, 0, 13, 5, 5, 20, 4, 4, 20, 22, 4, 2, 10, 20, 14, 2, 10, 0, 4, 4, 20, 0, 4, 2, 10, 2, 14, 2, 10, 7, 7, 10, 4, 7, 7, 5, 4, 4, 19, 14, 4, 11, 19, 7, 4, 10, 11, 12, 3, 10, 11, 6, 3, 0, 1, 24, 3, 0, 2, 24, 1, 7, 2, 14, 20, 14, 2, 7, 10, 7, 12, 7, 10, 0, 13, 6, 9, 2, 13, 2, 9, 13, 0, 4, 19, 13, 0, 2, 19, 1, 11, 14, 3, 8, 11, 7, 3, 7, 1, 16, 20, 15, 1, 8, 10, 7, 11, 8, 10, 0, 10, 21, 9, 7, 10, 7, 9, 6, 19, 15, 5, 11, 19, 5, 5, 8, 10, 6, 6, 11, 10, 3, 6, 7, 1, 16, 20, 15, 1, 8, 10, 7, 11, 8, 10, 1, 1, 16, 20, 1, 1, 8, 10, 9, 11, 8, 10, 16, 4, 3, 12, 16, 10, 3, 6, 5, 4, 3, 12, 5, 10, 3, 6, 7, 6, 10, 8, 12, 6, 5, 4, 7, 10, 5, 4, 4, 9, 6, 6, 4, 12, 6, 3, 6, 5, 12, 4, 6, 7, 12, 2, 9, 2, 5, 15, 9, 7, 5, 5, 15, 0, 9, 6, 15, 2, 9, 2, 6, 0, 11, 10, 6, 5, 11, 5, 12, 7, 4, 12, 12, 13, 4, 6, 7, 2, 9, 4, 7, 4, 9, 2, 6, 0, 13, 6, 6, 2, 13, 2, 10, 6, 4, 18, 10, 6, 2, 9, 12, 15, 2, 9, 10, 8, 6, 9, 12, 8, 2, 9, 3, 18, 10, 6, 3, 20, 10, 2, 4, 14, 20, 3, 4, 15, 20, 1, 2, 15, 9, 6, 2, 17, 9, 2, 13, 0, 4, 19, 13, 0, 2, 19, 7, 0, 4, 19, 9, 0, 2, 19, 1, 4, 22, 2, 1, 5, 22, 1, 0, 0, 9, 6, 0, 2, 9, 2, 0, 0, 24, 18, 0, 9, 24, 9, 3, 2, 16, 8, 3, 6, 16, 4, 3, 6, 18, 6, 3, 8, 18, 2, 3, 1, 6, 10, 5, 1, 2, 10, 13, 0, 9, 6, 16, 0, 3, 6, 2, 0, 9, 6, 5, 0, 3, 6, 10, 2, 4, 15, 10, 7, 4, 5, 6, 0, 7, 10, 6, 5, 7, 5, 2, 2, 20, 4, 12, 2, 10, 2, 2, 4, 10, 2, 2, 11, 19, 3, 2, 12, 19, 1, 10, 8, 6, 9, 12, 8, 2, 9, 8, 8, 6, 9, 10, 8, 2, 9, 13, 8, 4, 9, 13, 8, 2, 9, 3, 11, 9, 9, 6, 11, 3, 9, 3, 9, 18, 5, 9, 9, 6, 5, 2, 4, 2, 20, 2, 14, 2, 10, 14, 17, 8, 6, 14, 20, 8, 3, 3, 21, 18, 2, 3, 22, 18, 1, 5, 4, 15, 6, 10, 4, 5, 6, 2, 15, 12, 6, 2, 17, 12, 2, 17, 8, 6, 9, 17, 11, 6, 3, 2, 12, 20, 4, 2, 12, 10, 2, 12, 14, 10, 2, 0, 17, 24, 6, 0, 19, 24, 2, 7, 16, 9, 4, 7, 18, 9, 2, 15, 1, 4, 22, 17, 1, 2, 11, 15, 12, 2, 11, 5, 1, 4, 22, 5, 1, 2, 11, 7, 12, 2, 11, 11, 13, 8, 9, 11, 16, 8, 3, 6, 1, 6, 9, 8, 1, 2, 9, 11, 4, 3, 18, 11, 10, 3, 6, 5, 8, 12, 6, 5, 8, 6, 3, 11, 11, 6, 3, 15, 7, 5, 8, 15, 11, 5, 4, 4, 7, 5, 8, 4, 11, 5, 4, 12, 6, 6, 12, 15, 6, 3, 6, 12, 12, 3, 6, 6, 6, 6, 12, 6, 6, 3, 6, 9, 12, 3, 6, 5, 9, 14, 8, 12, 9, 7, 4, 5, 13, 7, 4, 9, 1, 3, 14, 9, 8, 3, 7, 12, 6, 6, 12, 12, 10, 6, 4, 4, 5, 4, 18, 4, 5, 2, 9, 6, 14, 2, 9, 4, 6, 16, 18, 4, 12, 16, 6, 5, 4, 7, 20, 5, 14, 7, 10, 14, 8, 8, 12, 14, 14, 8, 6, 9, 10, 6, 14, 9, 10, 3, 7, 12, 17, 3, 7, 9, 5, 9, 6, 12, 5, 3, 6, 9, 4, 3, 18, 10, 4, 1, 18, 1, 4, 22, 14, 12, 4, 11, 7, 1, 11, 11, 7, 2, 7, 18, 2, 2, 8, 18, 1, 12, 6, 6, 12, 12, 10, 6, 4, 6, 5, 9, 7, 9, 5, 3, 7, 12, 7, 4, 12, 12, 13, 4, 6, 8, 7, 4, 12, 8, 13, 4, 6, 7, 2, 10, 22, 7, 13, 10, 11, 0, 1, 3, 20, 1, 1, 1, 20, 4, 13, 18, 4, 13, 13, 9, 2, 4, 15, 9, 2, 2, 13, 18, 4, 2, 13, 9, 2, 11, 15, 9, 2, 15, 15, 9, 6, 15, 17, 9, 2, 0, 15, 9, 6, 0, 17, 9, 2, 6, 0, 18, 24, 15, 0, 9, 12, 6, 12, 9, 12, 6, 6, 6, 12, 6, 10, 6, 4, 8, 7, 10, 4, 8, 9, 10, 2, 1, 9, 18, 6, 1, 9, 9, 3, 10, 12, 9, 3, 6, 6, 18, 3, 6, 7, 18, 1, 7, 7, 9, 8, 10, 7, 3, 8, 10, 12, 6, 12, 12, 12, 2, 12, 3, 14, 18, 3, 3, 15, 18, 1, 15, 17, 9, 7, 18, 17, 3, 7, 1, 12, 10, 6, 1, 14, 10, 2, 15, 17, 9, 7, 18, 17, 3, 7, 10, 3, 3, 19, 11, 3, 1, 19, 15, 17, 9, 7, 18, 17, 3, 7, 6, 1, 11, 9, 6, 4, 11, 3, 15, 17, 9, 7, 18, 17, 3, 7, 6, 5, 11, 6, 6, 8, 11, 3, 16, 7, 8, 5, 16, 7, 4, 5, 2, 4, 20, 19, 12, 4, 10, 19, 2, 1, 21, 6, 9, 1, 7, 6, 6, 5, 12, 14, 6, 5, 6, 7, 12, 12, 6, 7, 9, 0, 6, 9, 11, 0, 2, 9, 2, 11, 8, 5, 6, 11, 4, 5, 16, 7, 8, 5, 16, 7, 4, 5, 0, 7, 8, 5, 4, 7, 4, 5, 15, 17, 9, 7, 18, 17, 3, 7, 8, 6, 8, 10, 8, 6, 4, 5, 12, 11, 4, 5, 15, 15, 9, 9, 18, 15, 3, 9, 0, 15, 9, 9, 3, 15, 3, 9, 12, 10, 9, 7, 15, 10, 3, 7, 3, 10, 9, 7, 6, 10, 3, 7, 13, 15, 10, 8, 18, 15, 5, 4, 13, 19, 5, 4, 0, 1, 6, 12, 0, 1, 3, 6, 3, 7, 3, 6, 10, 0, 6, 12, 13, 0, 3, 6, 10, 6, 3, 6, 7, 0, 10, 12, 7, 0, 5, 6, 12, 6, 5, 6, 4, 1, 16, 8, 4, 1, 8, 8, 0, 21, 19, 3, 0, 22, 19, 1, 6, 9, 18, 4, 15, 9, 9, 2, 6, 11, 9, 2, 3, 4, 9, 6, 3, 6, 9, 2, 9, 1, 6, 15, 9, 6, 6, 5, 5, 9, 6, 6, 8, 9, 3, 6, 5, 1, 14, 9, 5, 4, 14, 3, 3, 0, 8, 20, 3, 0, 4, 10, 7, 10, 4, 10, 5, 0, 7, 9, 5, 3, 7, 3, 6, 6, 12, 5, 10, 6, 4, 5, 0, 1, 8, 14, 4, 1, 4, 14, 2, 12, 22, 4, 2, 14, 22, 2, 8, 17, 6, 6, 8, 20, 6, 3, 18, 1, 6, 7, 18, 1, 3, 7, 0, 0, 6, 6, 3, 0, 3, 6, 4, 6, 17, 18, 4, 12, 17, 6, 6, 0, 12, 6, 6, 0, 6, 3, 12, 3, 6, 3, 4, 7, 18, 4, 13, 7, 9, 2, 4, 9, 9, 2, 4, 12, 10, 6, 4, 14, 10, 2, 7, 9, 10, 12, 12, 9, 5, 6, 7, 15, 5, 6, 0, 1, 24, 3, 8, 1, 8, 3, 13, 11, 6, 6, 13, 11, 3, 6, 5, 11, 6, 6, 8, 11, 3, 6, 3, 10, 19, 3, 3, 11, 19, 1, 0, 2, 6, 9, 0, 5, 6, 3, 14, 16, 10, 6, 14, 18, 10, 2, 0, 16, 10, 6, 0, 18, 10, 2, 14, 13, 9, 6, 14, 15, 9, 2, 0, 16, 18, 3, 0, 17, 18, 1, 6, 16, 18, 3, 6, 17, 18, 1, 0, 18, 9, 6, 0, 20, 9, 2, 14, 13, 9, 6, 14, 15, 9, 2, 6, 2, 6, 9, 8, 2, 2, 9, 15, 8, 4, 12, 15, 8, 2, 12, 8, 13, 8, 8, 8, 17, 8, 4, 4, 20, 18, 3, 10, 20, 6, 3, 5, 8, 4, 12, 7, 8, 2, 12, 7, 7, 12, 3, 7, 7, 6, 3, 10, 6, 4, 9, 12, 6, 2, 9, 5, 20, 18, 3, 11, 20, 6, 3, 1, 20, 18, 3, 7, 20, 6, 3, 18, 1, 6, 20, 21, 1, 3, 10, 18, 11, 3, 10, 0, 1, 6, 20, 0, 1, 3, 10, 3, 11, 3, 10, 13, 3, 4, 18, 15, 3, 2, 9, 13, 12, 2, 9, 0, 2, 6, 12, 0, 6, 6, 4, 12, 9, 12, 6, 18, 9, 6, 3, 12, 12, 6, 3, 7, 3, 4, 18, 7, 3, 2, 9, 9, 12, 2, 9, 14, 0, 6, 9, 16, 0, 2, 9, 0, 9, 12, 6, 0, 9, 6, 3, 6, 12, 6, 3, 14, 4, 8, 20, 18, 4, 4, 10, 14, 14, 4, 10, 2, 4, 8, 20, 2, 4, 4, 10, 6, 14, 4, 10, 14, 13, 9, 6, 14, 15, 9, 2, 1, 13, 9, 6, 1, 15, 9, 2, 3, 15, 18, 3, 9, 15, 6, 3, 5, 13, 9, 6, 5, 15, 9, 2, 5, 0, 18, 3, 5, 1, 18, 1, 8, 2, 6, 7, 11, 2, 3, 7, 9, 1, 9, 6, 12, 1, 3, 6, 6, 1, 9, 6, 9, 1, 3, 6, 5, 6, 14, 6, 12, 6, 7, 3, 5, 9, 7, 3, 8, 2, 6, 13, 10, 2, 2, 13, 6, 11, 12, 6, 12, 11, 6, 3, 6, 14, 6, 3, 3, 1, 18, 15, 9, 1, 6, 15, 13, 0, 6, 7, 13, 0, 3, 7, 3, 3, 16, 6, 3, 6, 16, 3, 12, 1, 3, 12, 12, 7, 3, 6, 7, 7, 6, 9, 9, 7, 2, 9, 13, 0, 4, 24, 13, 0, 2, 24, 7, 0, 4, 24, 9, 0, 2, 24, 11, 9, 5, 12, 11, 13, 5, 4, 7, 15, 9, 6, 7, 17, 9, 2, 5, 7, 18, 6, 5, 9, 18, 2, 8, 9, 5, 12, 8, 13, 5, 4, 4, 17, 17, 6, 4, 19, 17, 2, 0, 3, 18, 14, 0, 3, 9, 7, 9, 10, 9, 7, 0, 1, 24, 2, 0, 2, 24, 1, 0, 15, 18, 3, 0, 16, 18, 1, 9, 0, 6, 9, 11, 0, 2, 9, 3, 3, 14, 12, 3, 9, 14, 6, 12, 1, 3, 12, 12, 7, 3, 6, 8, 0, 6, 9, 10, 0, 2, 9, 10, 6, 6, 10, 12, 6, 2, 10, 5, 0, 6, 9, 7, 0, 2, 9, 2, 0, 21, 7, 9, 0, 7, 7, 6, 11, 12, 5, 10, 11, 4, 5, 8, 7, 9, 8, 11, 7, 3, 8, 9, 6, 6, 18, 9, 6, 3, 9, 12, 15, 3, 9, 15, 14, 8, 10, 19, 14, 4, 5, 15, 19, 4, 5, 1, 14, 8, 10, 1, 14, 4, 5, 5, 19, 4, 5, 11, 0, 8, 10, 15, 0, 4, 5, 11, 5, 4, 5, 5, 0, 8, 10, 5, 0, 4, 5, 9, 5, 4, 5, 6, 1, 12, 5, 6, 1, 6, 5, 1, 12, 18, 2, 10, 12, 9, 2, 2, 8, 20, 6, 12, 8, 10, 3, 2, 11, 10, 3, 7, 6, 9, 7, 10, 6, 3, 7, 10, 5, 8, 16, 14, 5, 4, 8, 10, 13, 4, 8, 3, 9, 16, 8, 3, 9, 8, 4, 11, 13, 8, 4, 7, 8, 10, 4, 7, 8, 5, 4, 7, 12, 10, 8, 7, 12, 5, 4, 12, 16, 5, 4, 9, 19, 15, 4, 14, 19, 5, 4, 1, 0, 18, 9, 7, 0, 6, 9, 13, 4, 10, 8, 18, 4, 5, 4, 13, 8, 5, 4, 3, 16, 18, 4, 9, 16, 6, 4, 8, 7, 10, 12, 13, 7, 5, 6, 8, 13, 5, 6, 6, 7, 10, 12, 6, 7, 5, 6, 11, 13, 5, 6, 4, 6, 18, 7, 10, 6, 6, 7, 0, 17, 18, 3, 0, 18, 18, 1, 3, 17, 18, 3, 3, 18, 18, 1, 2, 4, 6, 10, 4, 4, 2, 10, 16, 0, 8, 24, 16, 0, 4, 24, 4, 0, 8, 15, 8, 0, 4, 15, 16, 0, 8, 24, 16, 0, 4, 24, 1, 4, 18, 9, 7, 4, 6, 9, 15, 12, 9, 6, 15, 14, 9, 2, 3, 9, 18, 6, 3, 9, 9, 3, 12, 12, 9, 3, 18, 5, 6, 9, 18, 8, 6, 3, 0, 5, 6, 9, 0, 8, 6, 3, 4, 7, 18, 4, 13, 7, 9, 2, 4, 9, 9, 2, 2, 1, 12, 20, 2, 1, 6, 10, 8, 11, 6, 10, 17, 0, 6, 23, 17, 0, 3, 23, 1, 6, 2, 18, 1, 15, 2, 9, 8, 8, 10, 6, 8, 10, 10, 2, 0, 6, 20, 6, 0, 6, 10, 3, 10, 9, 10, 3, 11, 12, 12, 5, 15, 12, 4, 5, 0, 4, 3, 19, 1, 4, 1, 19, 19, 1, 3, 18, 20, 1, 1, 18, 2, 1, 3, 18, 3, 1, 1, 18, 3, 10, 18, 3, 9, 10, 6, 3, 4, 4, 10, 9, 9, 4, 5, 9, 7, 13, 14, 7, 7, 13, 7, 7, 3, 13, 14, 7, 10, 13, 7, 7, 8, 15, 9, 6, 11, 15, 3, 6, 4, 14, 8, 10, 4, 14, 4, 5, 8, 19, 4, 5, 10, 14, 4, 10, 10, 19, 4, 5, 3, 8, 5, 16, 3, 16, 5, 8, 15, 10, 9, 6, 15, 12, 9, 2, 0, 10, 9, 6, 0, 12, 9, 2, 6, 7, 12, 9, 6, 10, 12, 3, 9, 10, 5, 8, 9, 14, 5, 4, 12, 1, 3, 12, 12, 7, 3, 6, 8, 15, 6, 9, 10, 15, 2, 9, 16, 6, 7, 6, 16, 9, 7, 3, 8, 1, 4, 22, 10, 1, 2, 22, 6, 6, 14, 3, 6, 6, 7, 3, 0, 18, 19, 3, 0, 19, 19, 1, 17, 0, 6, 24, 17, 0, 3, 24, 0, 13, 15, 6, 5, 13, 5, 6, 9, 6, 10, 14, 14, 6, 5, 7, 9, 13, 5, 7, 1, 6, 8, 10, 1, 6, 4, 5, 5, 11, 4, 5, 7, 6, 12, 5, 7, 6, 6, 5, 7, 7, 9, 6, 10, 7, 3, 6, 7, 8, 14, 14, 14, 8, 7, 7, 7, 15, 7, 7, 3, 8, 14, 14, 3, 8, 7, 7, 10, 15, 7, 7, 9, 8, 13, 4, 9, 10, 13, 2, 3, 2, 6, 12, 3, 2, 3, 6, 6, 8, 3, 6, 6, 10, 17, 6, 6, 13, 17, 3, 1, 10, 17, 6, 1, 13, 17, 3, 16, 7, 8, 9, 16, 10, 8, 3, 0, 7, 8, 9, 0, 10, 8, 3, 0, 9, 24, 10, 12, 9, 12, 5, 0, 14, 12, 5, 3, 2, 15, 8, 8, 2, 5, 8, 4, 2, 18, 8, 10, 2, 6, 8, 0, 1, 18, 4, 0, 1, 9, 2, 9, 3, 9, 2, 20, 2, 3, 18, 21, 2, 1, 18, 1, 3, 3, 19, 2, 3, 1, 19, 18, 8, 6, 16, 20, 8, 2, 16, 0, 8, 6, 16, 2, 8, 2, 16, 8, 18, 11, 6, 8, 20, 11, 2, 4, 6, 12, 5, 8, 6, 4, 5, 7, 6, 12, 5, 11, 6, 4, 5, 6, 3, 9, 6, 9, 3, 3, 6, 7, 6, 12, 5, 7, 6, 6, 5, 9, 8, 6, 7, 12, 8, 3, 7, 8, 2, 9, 6, 11, 2, 3, 6, 8, 14, 6, 9, 8, 17, 6, 3, 8, 2, 9, 6, 11, 2, 3, 6, 4, 3, 16, 20, 4, 3, 8, 10, 12, 13, 8, 10, 7, 6, 10, 12, 12, 6, 5, 6, 7, 12, 5, 6, 0, 2, 7, 12, 0, 6, 7, 4, 12, 17, 11, 6, 12, 19, 11, 2, 4, 7, 12, 8, 4, 7, 6, 4, 10, 11, 6, 4, 8, 11, 8, 10, 12, 11, 4, 5, 8, 16, 4, 5, 9, 1, 4, 9, 11, 1, 2, 9, 14, 0, 3, 22, 15, 0, 1, 22, 7, 0, 3, 22, 8, 0, 1, 22, 4, 7, 18, 4, 13, 7, 9, 2, 4, 9, 9, 2, 10, 2, 4, 15, 10, 7, 4, 5, 12, 1, 3, 12, 12, 7, 3, 6, 0, 0, 18, 13, 9, 0, 9, 13, 16, 0, 3, 24, 17, 0, 1, 24, 5, 0, 3, 24, 6, 0, 1, 24, 10, 15, 5, 8, 10, 19, 5, 4, 2, 18, 18, 2, 2, 19, 18, 1, 2, 8, 20, 3, 2, 9, 20, 1, 7, 6, 9, 6, 7, 8, 9, 2, 3, 2, 19, 10, 3, 7, 19, 5, 2, 7, 19, 3, 2, 8, 19, 1, 15, 6, 9, 4, 15, 8, 9, 2, 2, 2, 18, 8, 8, 2, 6, 8, 10, 9, 14, 4, 10, 9, 7, 4, 4, 4, 6, 16, 7, 4, 3, 16, 15, 8, 9, 16, 18, 8, 3, 16, 0, 8, 9, 16, 3, 8, 3, 16, 18, 0, 6, 14, 20, 0, 2, 14, 0, 0, 6, 14, 2, 0, 2, 14, 15, 0, 6, 22, 17, 0, 2, 22, 3, 0, 6, 22, 5, 0, 2, 22, 12, 2, 12, 20, 16, 2, 4, 20, 0, 2, 12, 20, 4, 2, 4, 20, 11, 6, 4, 9, 11, 6, 2, 9, 9, 0, 6, 16, 12, 0, 3, 16, 12, 1, 3, 12, 12, 7, 3, 6, 3, 4, 18, 6, 3, 4, 9, 3, 12, 7, 9, 3, 5, 5, 16, 8, 13, 5, 8, 4, 5, 9, 8, 4, 0, 13, 10, 6, 0, 15, 10, 2, 8, 14, 9, 6, 8, 16, 9, 2, 6, 2, 9, 6, 9, 2, 3, 6, 14, 1, 10, 8, 19, 1, 5, 4, 14, 5, 5, 4, 9, 1, 3, 12, 9, 7, 3, 6, 6, 4, 12, 9, 6, 7, 12, 3, 6, 5, 12, 6, 10, 5, 4, 6, 1, 1, 8, 5, 5, 1, 4, 5, 12, 12, 6, 8, 12, 16, 6, 4, 3, 12, 12, 6, 3, 14, 12, 2, 9, 18, 12, 6, 15, 18, 6, 3, 9, 21, 6, 3, 4, 13, 6, 6, 4, 16, 6, 3, 11, 3, 7, 18, 11, 12, 7, 9, 3, 9, 18, 3, 9, 9, 6, 3, 5, 3, 19, 2, 5, 4, 19, 1, 4, 2, 12, 6, 4, 2, 6, 3, 10, 5, 6, 3, 9, 6, 6, 9, 11, 6, 2, 9, 8, 6, 6, 9, 10, 6, 2, 9, 16, 9, 5, 15, 16, 14, 5, 5, 3, 9, 5, 15, 3, 14, 5, 5, 6, 6, 14, 6, 13, 6, 7, 3, 6, 9, 7, 3, 8, 6, 3, 14, 8, 13, 3, 7, 0, 16, 24, 5, 8, 16, 8, 5, 0, 20, 20, 3, 10, 20, 10, 3, 5, 10, 18, 2, 5, 11, 18, 1, 0, 6, 6, 10, 2, 6, 2, 10, 2, 1, 20, 3, 2, 2, 20, 1, 9, 13, 6, 11, 11, 13, 2, 11, 9, 15, 6, 8, 9, 19, 6, 4, 9, 12, 6, 9, 9, 15, 6, 3, 5, 11, 18, 2, 5, 12, 18, 1, 2, 6, 15, 6, 2, 8, 15, 2, 6, 0, 18, 3, 6, 1, 18, 1, 5, 0, 3, 18, 6, 0, 1, 18, 18, 3, 6, 10, 20, 3, 2, 10, 0, 3, 6, 10, 2, 3, 2, 10, 10, 5, 8, 9, 10, 5, 4, 9, 6, 5, 8, 9, 10, 5, 4, 9, 3, 2, 20, 3, 3, 3, 20, 1, 5, 2, 13, 4, 5, 4, 13, 2, 17, 0, 7, 14, 17, 7, 7, 7, 0, 0, 7, 14, 0, 7, 7, 7, 9, 11, 10, 6, 9, 11, 5, 6, 5, 11, 10, 6, 10, 11, 5, 6, 11, 6, 3, 18, 11, 12, 3, 6, 0, 16, 18, 3, 0, 17, 18, 1, 6, 16, 18, 3, 6, 17, 18, 1, 4, 6, 9, 10, 4, 11, 9, 5, 9, 7, 15, 4, 9, 9, 15, 2, 5, 6, 12, 6, 5, 6, 6, 3, 11, 9, 6, 3, 6, 1, 12, 9, 6, 4, 12, 3, 7, 9, 6, 12, 7, 9, 3, 6, 10, 15, 3, 6, 11, 5, 13, 6, 11, 7, 13, 2, 1, 11, 22, 13, 12, 11, 11, 13, 18, 8, 6, 6, 18, 11, 6, 3, 0, 8, 6, 6, 0, 11, 6, 3, 0, 6, 24, 3, 0, 7, 24, 1, 0, 5, 10, 6, 0, 7, 10, 2, 6, 7, 18, 3, 6, 8, 18, 1, 0, 0, 10, 6, 0, 2, 10, 2, 19, 0, 3, 19, 20, 0, 1, 19, 4, 6, 12, 16, 4, 6, 6, 8, 10, 14, 6, 8, 19, 6, 4, 18, 21, 6, 2, 9, 19, 15, 2, 9, 1, 6, 4, 18, 1, 6, 2, 9, 3, 15, 2, 9, 3, 21, 18, 3, 3, 22, 18, 1, 0, 19, 9, 4, 0, 21, 9, 2, 12, 18, 12, 6, 18, 18, 6, 3, 12, 21, 6, 3, 7, 18, 9, 4, 7, 20, 9, 2, 12, 16, 10, 8, 17, 16, 5, 4, 12, 20, 5, 4, 2, 16, 10, 8, 2, 16, 5, 4, 7, 20, 5, 4, 14, 0, 10, 12, 19, 0, 5, 6, 14, 6, 5, 6, 0, 0, 10, 12, 0, 0, 5, 6, 5, 6, 5, 6, 15, 14, 9, 6, 15, 16, 9, 2, 0, 14, 9, 6, 0, 16, 9, 2, 14, 14, 10, 6, 14, 16, 10, 2, 0, 14, 10, 6, 0, 16, 10, 2, 5, 18, 18, 2, 5, 19, 18, 1, 0, 18, 18, 3, 0, 19, 18, 1, 3, 5, 18, 12, 12, 5, 9, 6, 3, 11, 9, 6, 5, 3, 7, 9, 5, 6, 7, 3, 4, 0, 19, 15, 4, 5, 19, 5, 3, 0, 16, 4, 3, 2, 16, 2, 4, 12, 16, 12, 4, 12, 8, 12, 4, 3, 12, 15, 10, 3, 6, 15, 16, 4, 2, 19, 16, 4, 1, 19, 6, 4, 2, 19, 7, 4, 1, 19, 13, 14, 8, 10, 17, 14, 4, 5, 13, 19, 4, 5, 3, 14, 8, 10, 3, 14, 4, 5, 7, 19, 4, 5, 12, 6, 3, 18, 12, 12, 3, 6, 5, 11, 12, 6, 5, 11, 6, 3, 11, 14, 6, 3, 10, 5, 8, 10, 14, 5, 4, 5, 10, 10, 4, 5, 6, 4, 12, 10, 6, 4, 6, 5, 12, 9, 6, 5, 6, 8, 18, 10, 15, 8, 9, 5, 6, 13, 9, 5, 0, 8, 18, 10, 0, 8, 9, 5, 9, 13, 9, 5, 12, 6, 3, 18, 12, 12, 3, 6, 0, 14, 18, 3, 0, 15, 18, 1, 12, 6, 3, 18, 12, 12, 3, 6, 9, 6, 3, 18, 9, 12, 3, 6, 6, 14, 18, 3, 6, 15, 18, 1, 0, 5, 18, 3, 0, 6, 18, 1, 2, 5, 22, 3, 2, 6, 22, 1, 0, 0, 21, 10, 7, 0, 7, 10, 6, 3, 18, 17, 12, 3, 6, 17, 0, 3, 18, 17, 6, 3, 6, 17, 0, 12, 24, 11, 8, 12, 8, 11, 4, 10, 16, 6, 4, 13, 16, 3, 12, 8, 6, 8, 12, 12, 6, 4, 6, 14, 8, 7, 10, 14, 4, 7, 15, 10, 6, 14, 18, 10, 3, 7, 15, 17, 3, 7, 3, 10, 6, 14, 3, 10, 3, 7, 6, 17, 3, 7, 6, 12, 18, 2, 6, 13, 18, 1, 5, 8, 10, 6, 5, 10, 10, 2, 12, 11, 9, 4, 12, 13, 9, 2, 0, 11, 9, 6, 0, 13, 9, 2, 11, 2, 3, 18, 12, 2, 1, 18, 10, 2, 3, 18, 11, 2, 1, 18, 9, 12, 6, 10, 11, 12, 2, 10, 1, 10, 6, 9, 1, 13, 6, 3, 6, 9, 16, 6, 14, 9, 8, 3, 6, 12, 8, 3, 1, 8, 9, 6, 1, 10, 9, 2, 7, 7, 16, 6, 7, 9, 16, 2, 0, 0, 18, 3, 0, 1, 18, 1, 10, 0, 6, 9, 12, 0, 2, 9, 9, 5, 6, 6, 12, 5, 3, 6, 10, 6, 4, 18, 12, 6, 2, 9, 10, 15, 2, 9, 8, 0, 6, 9, 10, 0, 2, 9, 9, 1, 6, 9, 9, 4, 6, 3, 1, 0, 18, 9, 1, 3, 18, 3, 0, 3, 24, 3, 0, 4, 24, 1, 6, 14, 9, 4, 6, 16, 9, 2, 8, 9, 8, 10, 12, 9, 4, 5, 8, 14, 4, 5, 5, 2, 13, 9, 5, 5, 13, 3, 4, 4, 16, 9, 4, 7, 16, 3, 4, 4, 14, 9, 4, 7, 14, 3, 8, 5, 9, 6, 8, 7, 9, 2, 1, 7, 16, 6, 1, 9, 16, 2, 10, 5, 13, 9, 10, 8, 13, 3, 1, 5, 13, 9, 1, 8, 13, 3, 0, 4, 24, 6, 12, 4, 12, 3, 0, 7, 12, 3, 1, 14, 10, 9, 1, 17, 10, 3, 5, 17, 18, 3, 5, 18, 18, 1, 0, 16, 18, 3, 0, 17, 18, 1, 9, 17, 9, 6, 9, 19, 9, 2, 1, 20, 22, 4, 1, 20, 11, 2, 12, 22, 11, 2, 8, 14, 8, 6, 8, 17, 8, 3, 8, 6, 8, 15, 8, 11, 8, 5, 5, 4, 18, 3, 5, 5, 18, 1, 9, 3, 5, 10, 9, 8, 5, 5, 6, 8, 12, 3, 6, 8, 6, 3, 2, 6, 18, 6, 2, 6, 9, 3, 11, 9, 9, 3, 10, 6, 4, 18, 12, 6, 2, 9, 10, 15, 2, 9, 7, 5, 6, 6, 10, 5, 3, 6, 14, 5, 2, 18, 14, 14, 2, 9, 8, 5, 2, 18, 8, 14, 2, 9, 9, 2, 10, 6, 9, 2, 5, 6, 3, 1, 18, 12, 12, 1, 9, 12, 5, 2, 17, 22, 5, 13, 17, 11, 4, 0, 12, 6, 4, 2, 12, 2, 6, 9, 16, 6, 14, 9, 8, 3, 6, 12, 8, 3, 9, 0, 5, 18, 9, 9, 5, 9, 12, 0, 6, 9, 14, 0, 2, 9, 6, 0, 6, 9, 8, 0, 2, 9, 9, 1, 6, 12, 11, 1, 2, 12, 5, 9, 13, 4, 5, 11, 13, 2, 5, 8, 19, 3, 5, 9, 19, 1, 9, 9, 6, 8, 9, 13, 6, 4, 11, 9, 4, 15, 11, 14, 4, 5, 2, 0, 6, 14, 2, 0, 3, 7, 5, 7, 3, 7, 15, 1, 6, 14, 18, 1, 3, 7, 15, 8, 3, 7, 3, 1, 6, 14, 3, 1, 3, 7, 6, 8, 3, 7, 3, 20, 18, 4, 12, 20, 9, 2, 3, 22, 9, 2, 5, 0, 4, 20, 5, 0, 2, 10, 7, 10, 2, 10, 16, 8, 8, 12, 20, 8, 4, 6, 16, 14, 4, 6, 0, 8, 8, 12, 0, 8, 4, 6, 4, 14, 4, 6, 13, 13, 10, 8, 18, 13, 5, 4, 13, 17, 5, 4, 1, 13, 10, 8, 1, 13, 5, 4, 6, 17, 5, 4, 15, 8, 4, 15, 15, 13, 4, 5, 5, 8, 4, 15, 5, 13, 4, 5, 6, 11, 16, 12, 6, 15, 16, 4, 2, 11, 16, 12, 2, 15, 16, 4, 14, 12, 7, 9, 14, 15, 7, 3, 10, 1, 3, 21, 10, 8, 3, 7, 13, 11, 9, 4, 13, 13, 9, 2, 3, 10, 17, 9, 3, 13, 17, 3, 13, 8, 8, 15, 13, 13, 8, 5, 3, 8, 8, 15, 3, 13, 8, 5, 11, 14, 10, 8, 16, 14, 5, 4, 11, 18, 5, 4, 0, 18, 22, 6, 0, 18, 11, 3, 11, 21, 11, 3, 0, 16, 24, 4, 0, 16, 12, 4, 6, 20, 12, 3, 12, 20, 6, 3, 18, 12, 6, 12, 21, 12, 3, 6, 18, 18, 3, 6, 0, 12, 6, 12, 0, 12, 3, 6, 3, 18, 3, 6, 15, 17, 9, 6, 15, 19, 9, 2, 1, 6, 22, 10, 1, 6, 11, 5, 12, 11, 11, 5, 15, 17, 9, 6, 15, 19, 9, 2, 0, 18, 18, 2, 0, 19, 18, 1, 3, 15, 19, 3, 3, 16, 19, 1, 0, 13, 18, 3, 0, 14, 18, 1, 15, 17, 9, 6, 15, 19, 9, 2, 0, 17, 9, 6, 0, 19, 9, 2, 12, 17, 9, 6, 12, 19, 9, 2, 3, 17, 9, 6, 3, 19, 9, 2, 16, 2, 3, 20, 17, 2, 1, 20, 0, 13, 24, 8, 0, 17, 24, 4, 9, 1, 6, 22, 12, 1, 3, 11, 9, 12, 3, 11};$/;"	v
frontalface_stages_array	src/img/include/cascade.h	/^const uint8_t frontalface_stages_array[]={9, 16, 27, 32, 52, 53, 62, 72, 83, 91, 99, 115, 127, 135, 136, 137, 159, 155, 169, 196, 197, 181, 199, 211, 200};$/;"	v
frontalface_stages_thresh_array	src/img/include/cascade.h	/^const int16_t frontalface_stages_thresh_array[]={-1290, -1275, -1191, -1140, -1122, -1057, -1029, -994, -983, -933, -990, -951, -912, -947, -877, -899, -920, -868, -829, -821, -838, -849, -833, -862, -766};$/;"	v
frontalface_tree_thresh_array	src/img/include/cascade.h	/^const int16_t frontalface_tree_thresh_array[]={-129, 50, 89, 23, 61, 407, 11, -77, 24, -86, 83, 87, 375, 148, -78, 33, 75, -28, -40, 64, -84, -563, 58, 41, 374, 285, 129, 58, 59, -12, 134, -29, 206, 192, -284, -200, 347, -7, 473, -210, -174, 1522, 79, 71, 162, -37, 7, 123, -322, 8, 110, -184, -269, 64, 596, 25, 27, 75, 81, -1136, 37, -154, 75, -45, 138, -146, -46, -267, -173, 7, -529, 93, -139, 107, 91, -23, 178, 234, 9, 53, -108, -23, -67, -279, 163, 770, 319, 0, 348, 36, 36, -96, 28, 138, -13, 119, -34, -44, -100, 15, -50, -19, 314, 117, 80, -119, -119, 80, 17, -145, -66, -90, -93, 68, -54, -138, 69, 13, 342, 1056, -149, -67, -15, -26, -15, -186, -98, -317, 96, -10, 491, 9, 285, -191, -205, 123, 373, 52, 65, 9, 130, 11, -49, 87, 124, -184, -293, 242, 27, 168, -3, -124, -52, 153, 100, 233, -66, -722, 721, -30, 249, -119, -186, 152, -99, -244, -123, 30, -8, 85, -27, 76, -181, 93, -4, 70, -141, 274, 973, -52, 43, 69, -29, 43, 25, 53, 12, -447, 33, 128, 130, 27, 107, 52, 107, -61, -159, -23, -6, -116, 271, 36, 46, -11, 46, 29, 130, 103, 30, 134, -11, -155, -159, 11, -221, -34, 138, -460, -42, -20, -38, -48, -95, 69, -98, -151, -252, 88, -15, 183, 234, -46, -49, 92, -81, 65, -37, -18, 521, 195, 219, -162, -275, 546, -856, -268, 253, -104, -142, -74, 61, 189, 63, 52, 201, 51, -76, 171, -210, -290, 68, -25, -161, 0, -91, 7, 4, 160, 254, 8, 3, -28, -97, -420, -39, 163, -53, -207, 102, -31, 175, 0, 37, 45, -214, -942, -67, -70, -150, -42, -56, 120, 98, 25, -91, -28, -166, -100, 10, -80, -121, -61, -248, -52, -82, -125, -84, -7, -128, 77, 25, -41, -5, -16, -180, -248, -134, -603, -48, 594, 210, 12, -178, 528, -373, 58, 134, 51, 60, -137, 583, -25, 74, 102, 190, -36, 167, -140, -162, 10, 112, 143, 18, 11, 144, 106, -64, -31, 85, 245, 159, 88, -112, 42, 101, -65, 199, 5, -360, 75, 144, -835, -68, 154, 9, -60, -197, -120, -189, -114, -23, -41, 46, 212, 136, -59, -140, -330, -3, 397, 149, 211, -100, 1340, 31, 662, -19, -75, 318, 77, -325, -278, -24, 130, -122, -329, 15, 137, 33, 413, -40, 29, 102, 1143, -181, -57, 564, 141, 76, 102, 234, 61, 36, 124, -180, 75, 43, -188, 339, -36, 175, -35, -17, 33, 396, -125, -249, -156, -39, 200, -170, -82, -4, -137, 79, -1, -1, -382, -318, 69, -87, -52, 32, 421, -153, 104, 2, -1182, 373, 493, -302, -135, -179, 741, -48, 18, 28, -97, -275, -267, 93, -77, -28, -164, -166, -50, -111, -361, -32, -171, 187, -577, -242, 17, -8, 1127, -108, 167, 22, 130, -169, -393, -47, 75, -139, -100, 200, -84, -94, 264, 51, -49, -108, -104, 160, -24, -139, 166, 104, 817, 50, 160, -126, -145, -252, -48, 274, -84, -91, 4, 146, 125, 22, -25, -124, -39, -233, 16, 138, -141, 192, -35, 268, -180, 70, 135, -86, 121, 226, -137, 80, -85, 133, -44, -40, -15, -171, -140, 41, -368, 106, -15, 130, 79, 7, -180, -183, -440, -526, -183, -180, -502, -81, -63, -200, 229, -40, 55, 26, 29, 19, 39, -112, -161, -125, -6, 781, 21, 98, -108, 22, 222, 0, 62, 69, 124, 26, 580, 79, -70, -25, -65, -414, -30, 181, -476, 19, 91, -49, 229, -35, 27, -74, -93, 52, -56, 128, 381, 106, 67, -7, -36, 92, -154, -22, -97, -108, 50, 395, -112, -64, -8, 49, -63, -17, -86, -69, -167, -33, -78, -181, -255, -4, 97, 87, 82, -117, 14, 233, -384, 72, 935, -749, -286, 62, 27, -65, 53, 53, -163, 61, -84, -91, -32, 62, -129, -126, -63, 144, -73, -13, 64, 122, 12, 347, -240, 183, 165, 154, 248, -81, -679, 282, 46, 6, 326, -234, 30, -73, 387, 22, 28, 141, -212, -283, -22, 280, -274, -86, 83, -192, 768, -177, 81, 33, 111, -375, -51, 60, 119, 35, -224, -60, 102, 190, 72, 668, 53, -64, 329, 144, 135, 49, 176, 124, 145, -59, 51, 41, 118, 2, 198, 132, 136, 26, -23, 52, 24, 10, -69, 115, 42, 40, 106, -104, -14, 37, 86, -209, -255, -135, -153, 508, -36, -245, 25, -72, 72, 21, -43, 855, -108, 241, -47, 188, -93, -33, 14, 202, 14, -126, 354, -559, -23, -73, -81, -235, -340, -220, -34, 226, -275, -97, 22, 87, -100, -80, -218, 29, -92, -337, 536, 58, 26, -188, 236, -24, -213, 190, 30, 88, -73, -152, -1, 102, 38, 132, -25, 210, -108, -63, 79, 137, 118, 0, -201, 313, 97, 15, -366, -61, -45, 387, 2254, 169, 101, 208, -69, -498, -14, 474, 151, 47, -82, -117, -23, -227, -60, -29, -184, 263, -60, 184, -4, 202, 119, 142, -25, 63, 11, -219, -78, -226, 230, -97, 7, -154, -98, 112, 473, -91, 54, -15, -10, 13, 154, -56, -11, -157, -142, 95, 143, -54, 52, 14, 412, 0, 47, -147, -86, 60, -21, 96, -102, -3, -165, 115, 187, 162, 206, -70, 328, 400, -63, -62, -67, -107, 36, -110, 31, -65, 85, 350, 97, -160, -319, -69, 486, 639, -188, -42, 392, 56, 9, 136, -136, 11, -269, 8, 91, -235, 27, 50, -33, 150, -1647, -90, -53, -52, 88, 48, -80, 263, 446, -139, -15, -44, -47, 106, 17, -195, 1, 472, 65, 231, -43, 508, -22, 48, -176, -135, -87, -50, -69, -10, -184, 159, 27, -67, 25, 187, 16, 0, 29, -204, -102, 126, 189, -13, -99, 49, 53, 242, -168, -344, 182, 100, -17, 100, -348, 89, -68, 133, 10, 226, -435, -32, 309, -380, 202, -48, 351, 331, -138, 63, 224, 87, 32, -153, 652, -282, -138, -259, 30, -39, -535, 235, -29, 127, 146, -129, -79, -29, 33, -178, 108, 131, -295, 128, -1, 11, 134, -59, 155, 11, -170, -101, 41, -85, 91, -152, -43, 227, 88, 0, 59, 441, 147, -16, 85, -122, 106, 43, 35, 87, 305, 19, 7, 4, 115, -133, 92, -88, 31, 59, 114, 23, -40, -16, -92, -162, -71, 36, -32, 110, -84, -294, -110, -194, -446, 55, -27, -16, -154, 35, -131, 239, -167, -81, -18, 68, 38, -80, 44, 155, 67, -81, 45, 21, -45, -43, 431, 224, 72, -127, -234, -46, 125, 7, 46, 333, 219, -98, 27, -132, 155, 63, -181, -94, 79, 425, -77, 158, 93, -128, 39, -201, -161, 196, 210, 58, -375, 26, 146, 207, -59, -158, -165, 97, 35, -544, 40, 20, -250, -1, 13, 86, 30, 101, -145, 81, 61, -94, -76, 1846, 48, -101, -183, -59, -100, 94, -102, 4, 63, -109, 5, -2, -130, -20, 127, -137, 49, -142, 40, 244, -267, -380, -168, 87, -104, -168, -72, 36, -47, -30, 3, -125, -77, -33, -142, 77, -77, -364, 28, -115, -1, -443, 65, 35, -103, -55, -31, 293, -55, 12, -208, -36, 877, 57, 174, 81, -137, 260, 89, -321, 58, -275, 534, -189, -122, -1, -91, -6, 49, 99, -193, -101, 89, 770, -318, -199, -70, -11, -404, -89, 250, -100, 138, 156, -82, 101, -99, -108, -14, 438, 184, 181, 4, 292, 146, -85, 1741, 46, -62, -62, -77, -13, 381, -51, -110, -96, -58, 115, 208, 47, -60, 935, 454, 13, 349, 90, -64, 1356, 36, 188, -154, -335, 891, 60, 214, 37, 32, -106, -12, 234, -25, -165, -83, -70, -99, 232, 1, 40, -215, -56, -124, -1230, -147, -225, 138, -33, -22, 12, 219, -513, 379, 157, -8, 39, 98, -73, -43, -29, 98, -75, 64, -199, 27, 40, 60, 397, 197, 40, -163, 93, 27, 244, 28, 64, -203, 214, 91, 168, -88, -339, 34, 323, -369, -119, 28, -33, 80, -60, 103, -64, 120, -34, 100, -138, -8, 124, 16, 113, 32, 180, -132, 85, 103, 26, -239, 130, -124, 61, -200, 340, 97, 67, -48, 0, 78, -41, -57, -422, -391, -169, 9, 439, 13, 119, 46, -49, -52, 100, 188, -111, 164, 94, -97, 317, -54, -88, -292, -22, 109, -161, 106, 200, 151, 323, 118, 25, -269, -282, -477, -5, -182, 209, -129, 86, -566, 213, 106, -49, -99, -103, 51, 234, 68, -93, 0, -31, 385, -255, 71, -90, -42, -38, -118, -86, -151, 43, 670, 388, 144, 52, 569, 48, -40, -24, -5, 132, -57, 4, 0, -1, 16, 58, -226, 383, 109, 15, -130, -92, 103, -127, -108, -56, -257, -183, -83, -32, 35, -111, -67, -56, 119, 153, -102, -261, -38, -3, -89, -73, -101, 643, 282, -45, -56, -126, 87, 381, 121, 0, -172, -92, -52, 114, -113, -25, -83, -50, -165, 121, 28, 66, 205, 8, 102, -64, 152, -324, -70, 134, -481, 493, 17, -297, 725, 34, -53, 77, 87, 259, -132, -96, 76, 127, -45, -52, -52, 281, 21, -158, 25, 717, 476, -94, -210, 920, 38, -485, 154, 90, -148, -540, -170, -135, 64, -161, -277, -109, 163, 412, -331, -87, -43, 3, 14, 77, -104, -16, -3, -202, 47, 141, -33, -91, -126, 179, 176, 111, 38, 386, 697, -193, 458, -58, 139, 88, 89, 337, 346, -225, -265, -93, 224, 0, 402, -29, 205, -23, 57, 87, -119, 1, 7, 35, 260, -114, 200, -120, 508, 32, 124, 103, 41, -68, -11, 173, -198, 118, -164, -168, 48, -87, -97, 73, -178, -37, 194, -58, 15, 14, -119, -26, -123, 32, 36, 393, -134, -54, 62, 49, -312, -49, 89, -11, -199, -42, -27, 35, 81, 90, -213, 80, 94, -61, -204, -283, 19, -138, -66, -205, 233, 167, -12, -133, 403, -156, -188, -489, -493, 289, 34, 93, 2, 141, -18, 96, 52, -46, -170, -382, -111, -89, -39, 284, 127, -203, -83, -62, -207, -84, -126, -18, -187, 68, 13, 100, -326, 182, -513, 73, 78, 163, 55, 66, 45, 160, -39, 114, -96, 110, 1, -168, 27, 196, -12, -35, -30, -7, -353, 191, 0, -66, 187, -112, -113, 31, -2, 452, 281, 7, 787, 644, -202, 212, 204, -174, -153, -152, 57, -1, 131, -17, 40, 382, 70, 34, -57, -31, 114, -77, -76, -149, 132, 244, 40, -144, 11, 33, 364, -123, -89, 154, 11, -43, 531, -72, -315, -78, -209, 8, 104, -97, -26, -154, 886, -54, 291, 229, 165, 258, 42, 256, -161, -22, 441, 69, 127, -94, -45, -19, -71, 77, 29, 77, 127, 85, 46, -233, 295, -81, -68, -163, 110, -16, 93, -282, 176, 35, 59, -47, -449, 185, -110, 73, 206, -122, 155, 760, -16, 41, -47, -26, 43, -83, 9, -6, 35, -99, 304, 69, -100, 123, 49, 355, -173, -10, -232, 96, -85, 29, 1399, 25, 133, 0, 2, 223, -41, -77, -21, -44, -204, 49, -9, 12, 16, -30, 212, 75, 716, 221, -1312, -110, 317, 97, 47, 133, -181, -239, 79, -183, -247, 47, 114, 267, 39, 10, 130, 135, 194, -80, -224, -92, 438, -149, 57, 85, 201, 148, 168, 64, -66, -12, -564, -39, -101, -571, -336, 15, -27, -65, -208, 68, 65, 14, -352, 135, -16, -98, 35, -113, -796, -445, -79, 12, 242, -222, -161, 337, -30, 30, 28, -63, -11, -289, -47, 2, -151, -133, -306, 169, -118, 189, 1041, 9, -339, -46, -528, 157, 417, -78, -248, 101, 109, 61, 107, -153, -21, 72, -139, -65, 80, -424, -78, -52, -66, -522, 78, 133, 38, 20, 169, -312, -298, 244, 83, -328, -73, 46, -104, -3, -59, 35, 224, -443, 94, 11, -8, -92, 340, -27, 313, 22, -42, 113, -95, -227, -166, -30, 69, -151, -80, -96, -177, -90, 67, -134, 292, 3, -34, -70, -76, -37, 75, -206, -96, -111, 26, 95, 53, -27, -92, -261, -204, 27, -228, 1308, 331, -61, 191, 24, -140, -143, 12, -57, -27, -216, -8, 75, 51, 52, -73, 7, -60, -61, 59, -44, -37, 18, 96, 130, -75, 80, 1685, -170, -42, 50, -35, 66, -42, -50, -206, 202, -168, 4, -205, -35, -205, 418, -58, 42, -48, 295, -77, -19, -238, 4, -202, -487, -74, -32, 212, 273, -56, -72, -172, -55, -45, -503, 195, 130, 17, -251, -11, -280, 424, 64, -40, -36, -261, 159, -163, 206, 189, 254, -265, 112, 1, -17, 193, 51, 188, 813, 68, 8, 91, -56, -31, -54, 200, 83, -68, -693, -464, -318, -63, -270, 34, 145, -159, -40, -94, 12, 53, 60, -246, 212, 101, -49, -404, 481, -77, -116, 53, -477, -15, 127, 103, -115, 149, -296, -170, 195, 269, 56, -113, -65, 303, -3, 73, -10, -37, 201, -125, 410, 13, 145, 1, 103, -21, 6, -66, -121, -6, -221, -271, 114, 118, -83, 50, 177, 762, 130, 57, -25, -22, 68, 106, -109, -69, 24, -11, -179, 211, 33, -216, 215, -51, 47, -97, -252, -7, 144, -75, -157, 408, 345, 164, 241, 612, 2, -136, 38, 176, -276, -1276, 121, 43, -118, -23, 116, -118, 102, 49, -174, 42, -283, -19, -57, -62, -41, -208, 125, -45, -25, 321, -41, 127, 164, 66, -186, -74, -57, -158, 129, -44, 49, 289, 2176, -60, -9, 204, -195, -374, 155, -63, -63, -235, -24, -286, -102, 70, -181, 180, 65, -379, 290, 236, -67, 98, 51, -222, -54, 25, 118, -90, 21, 352, -35, 27, -26, 36, 13, 169, -27, 125, -30, 364, 29, -74, -105, 447, -46, -235, 420, 110, -55, -1317, 837, -288, 154, -287, 258, 149, 16, -201, -293, -155, -12, 79, 46, -137, 376, 15, 52, -586, -396, -36, 65, 288, -155, 2113, -134, -148, 27, -66, 34, -563, 724, 32, 449, -124, -94, -12, -136, 54, 60, -54, -66, -118, -415, 154, -1169, 629, 0, -84, 153, 234, 20, -223, 103, 99, 147, -409, 345, 65, 138, -253, 286, -114, -52, 88, 411, 106, 116, 158, -190, -175, 15, 173, 80, 3, -17, 69, 147, -290, -258, 121, 155, -136, -129, 4, -293, -332, 18, -172, -268, 74, -211, -193, 71, -103, -166, -154, -54, 0, -46, 152, 13, -92, 95, -57, 30, -47, 215, 215, -48, 392, -65, 142, 142, 66, -181, -22, -269, -300, 67, -37, 24, -3, 841, -69, -78, -106, -89, -98, 193, -188, 108, -199, -76, 51, -4, -201, -71, -60, -938, -520, 42, 28, 1188, -975, 255, 19, -113, -69, -203, -306, 131, -386, -63, -16, 12, -41, -158, 141, -19, 2, 144, -96, -7, -68, 2705, 449, 55, -93, -335, -215, -103, -179, -74, 96, 140, 105, -108, 249, 592, 218, 46, -9, -121, 111, -14, -51, -363, -78, -68, 52, -55, 77, -26, -99, -121, 20, -23, 68, 156, -233, -220, -10, 1217, -364, -230, 151, -34, -9, -293, 21, -25, 63, 106, -49, -277, -60, 102, 77, -87, 38, 940, -155, -55, 148, 27, 395, -146, 44, 324, 134, -113, -16, 30, 459, -486, -170, -114, -512, 969, -120, 154, 295, 40, 213, -179, -157, -404, -499, -490, 126, 44, 232, 4, -115, -655, 20, 192, 99, 287, 40, -230, 449, 85, 143, 163, -19, 9, 103, -131, 308, -75, -52, -108, 90, 600, 14, 38, -35, -160, 101, -143, -75, -55, 25, -75, 58, -133, -10, -3, 194, -28, -176, 84, -91, 204, 253, -171, -13, 99, -70, -16, -58, -37, -506, -336, 268, -129, -326, -77, -20, -50, 5, 121, 115, 124, -70, -344, 30, 231, -21, -61, 224, -80, -275, -58, 122, 212, 168, -526, 9, 31, 186, -322, 32, -55, 118, -112, -298, -57, 177, 120, -130, 155, -91, 241, 127, 153, -85, -104, -29, -208, -84, 43, 130, -97, -24, 97, 114, 59, 445, -57, 16, -20, -348, 8, 1490, 904, -66, -197, 71, -140, -18, 528, 124, 180, 12, -107, -114, 48, 6, -14, -129, -131, 636, 360, -6, 38, 152, 328, -3, -20, 489, -18, -121, 109, 181, -99, 80, 22, -950, -104, -26, 16, -146, -58, -517, 281, 351, 63, 332, 75, -353, 296, -320, 396, -163, -39, 1, 49, -85, 237, 0, -70, 125, -3, 360, -159, 328, 161, 84, -274, 191, 321, 271, 123, 70, 82, 135, -60, -42, -117, -19, 1318, -69, -30, -122, -46, 19, 20, 792, 22, -279, -143, 20, 390, -257, -697, 43, -170, 520, 338, 349, 227, 18, 53, 237, -93, 197, 105, 28, -141, 120, -9, -392, 68, 106, 1, -27, 77, 0, -312, 205, -11, 66, 154, -50, 237, 19, 187, 87, 642, -42, 9, -95, -28, -140, -86, 8, -17, -58, -33, -38, -155, 19, -18, 21, -39, 184, 58, 670, 10, -15, -103, -79, 59, 211, -155, -121, -160, -119, -342, 1720, 245, -77, -24, -238, -50, 190, 4, -363, -94, 176, 0, 36, -72, 25, 93, -88, 252, -319, 46, -104, -155, 40, -56, 34, -292, 40, 450, 144, -457, -465, 68, -32, -135, 51, -172, 103, -99, -50, -466, -347, -100, -36, 45, -120, 26, 57, -54, 1164, -971, -457, 523, -257, 71, 5, 112, -178, 45, 85, -91, 133, 50, 34, 153, -57, 233, 20, -100, -46, 141, 99, -32, 143, 18, -340, -57, 5, -68, -314, -969, -411, 5, 90, -460, 67, 278, 65, 19, 27, 19, 10, 11, -123, 58, -247, -81, 127, 74, 4, -150, 49, 306, -961, 577, 25, -234, -226, -88, 105, -53, 9, 36, -36, 16, 102, -24, 17, -138, 182, -167, 161, -288, 146, -175, -86, -644, 32, 96, 305, -2, -66, -135, 199, 9, 185, 438, -165, 130, -235, 55, 292, -61, -41, 15, 66, -164, 110, 214, -78, -15, 310, -90};$/;"	v
frontalface_weights_array	src/img/include/cascade.h	/^const int8_t frontalface_weights_array[]={};$/;"	v
frontalface_window_h	src/img/include/cascade.h	/^const int frontalface_window_h=24;$/;"	v
frontalface_window_w	src/img/include/cascade.h	/^const int frontalface_window_w=24;$/;"	v
fs_expect_fail	src/vfs_wrapper.c	/^NORETURN static void fs_expect_fail(mp_obj_t fp)$/;"	f	file:
fs_fail	src/vfs_wrapper.c	/^NORETURN static void fs_fail(mp_obj_t fp, int res)$/;"	f	file:
fs_file_corrupted	src/vfs_wrapper.c	/^NORETURN void fs_file_corrupted(mp_obj_t fp)$/;"	f
fs_no_intersection	src/vfs_wrapper.c	/^NORETURN void fs_no_intersection(mp_obj_t fp)$/;"	f
fs_not_equal	src/vfs_wrapper.c	/^NORETURN void fs_not_equal(mp_obj_t fp)$/;"	f
fs_read_fail	src/vfs_wrapper.c	/^NORETURN static void fs_read_fail(mp_obj_t fp)$/;"	f	file:
fs_unsupported_format	src/vfs_wrapper.c	/^NORETURN void fs_unsupported_format(mp_obj_t fp)$/;"	f
fs_write_fail	src/vfs_wrapper.c	/^NORETURN static void fs_write_fail(mp_obj_t fp)$/;"	f	file:
fsort	src/img/fsort.c	/^void fsort(int *data, int n)$/;"	f
fsort25	src/img/fsort.c	/^static void fsort25(int *data)$/;"	f	file:
fsort9	src/img/fsort.c	/^static void fsort9(int *data)$/;"	f	file:
fsort_compare	src/img/fsort.c	/^static int fsort_compare(const void *a, const void *b)$/;"	f	file:
fsq	src/img/apriltag.c	/^static inline float fsq(float v)$/;"	f	file:
func	zbar/error.h	/^    const char *func;           \/* reporting function *\/$/;"	m	struct:errinfo_s
fwd	src/img/zbar.c	/^    unsigned char chk, rev, fwd;$/;"	m	struct:char39_s	file:
fwd	zbar/qrdec.c	/^  int fwd[2][2];$/;"	m	struct:qr_aff	file:
fwd	zbar/qrdec.c	/^  int fwd[3][2];$/;"	m	struct:qr_hom	file:
fwd	zbar/qrdec.c	/^  int fwd[3][3];$/;"	m	struct:qr_hom_cell	file:
fwd22	zbar/qrdec.c	/^  int fwd22;$/;"	m	struct:qr_hom	file:
g	src/img/edge.c	/^    uint16_t g;$/;"	m	struct:gvec	file:
g2d_convex_hull	src/img/apriltag.c	/^zarray_t *g2d_convex_hull(const zarray_t *points)$/;"	f
g2d_distance	src/img/apriltag.c	/^double g2d_distance(const double a[2], const double b[2])$/;"	f
g2d_line_get_coordinate	src/img/apriltag.c	/^double g2d_line_get_coordinate(const g2d_line_t *line, const double q[2])$/;"	f
g2d_line_init_from_points	src/img/apriltag.c	/^void g2d_line_init_from_points(g2d_line_t *line, const double p0[2], const double p1[2])$/;"	f
g2d_line_intersect_line	src/img/apriltag.c	/^int g2d_line_intersect_line(const g2d_line_t *linea, const g2d_line_t *lineb, double *p)$/;"	f
g2d_line_segment_closest_point	src/img/apriltag.c	/^void g2d_line_segment_closest_point(const g2d_line_segment_t *seg, const double *q, double *p)$/;"	f
g2d_line_segment_init_from_points	src/img/apriltag.c	/^void g2d_line_segment_init_from_points(g2d_line_segment_t *seg, const double p0[2], const double p1[2])$/;"	f
g2d_line_segment_intersect_line	src/img/apriltag.c	/^int g2d_line_segment_intersect_line(const g2d_line_segment_t *seg, const g2d_line_t *line, double *p)$/;"	f
g2d_line_segment_intersect_segment	src/img/apriltag.c	/^int g2d_line_segment_intersect_segment(const g2d_line_segment_t *sega, const g2d_line_segment_t *segb, double *p)$/;"	f
g2d_line_segment_t	src/img/apriltag.c	/^}__attribute__((aligned(8))) g2d_line_segment_t;$/;"	t	typeref:struct:__anon10	file:
g2d_line_t	src/img/apriltag.c	/^}__attribute__((aligned(8))) g2d_line_t;$/;"	t	typeref:struct:__anon9	file:
g2d_polygon_add	src/img/apriltag.c	/^void g2d_polygon_add(zarray_t *poly, double v[2])$/;"	f
g2d_polygon_closest_boundary_point	src/img/apriltag.c	/^void g2d_polygon_closest_boundary_point(const zarray_t *poly, const double q[2], double *p)$/;"	f
g2d_polygon_contains_point	src/img/apriltag.c	/^int g2d_polygon_contains_point(const zarray_t *poly, double q[2])$/;"	f
g2d_polygon_contains_point_ref	src/img/apriltag.c	/^int g2d_polygon_contains_point_ref(const zarray_t *poly, double q[2])$/;"	f
g2d_polygon_contains_polygon	src/img/apriltag.c	/^int g2d_polygon_contains_polygon(const zarray_t *polya, const zarray_t *polyb)$/;"	f
g2d_polygon_create_data	src/img/apriltag.c	/^zarray_t *g2d_polygon_create_data(double v[][2], int sz)$/;"	f
g2d_polygon_create_empty	src/img/apriltag.c	/^zarray_t *g2d_polygon_create_empty()$/;"	f
g2d_polygon_create_zeros	src/img/apriltag.c	/^zarray_t *g2d_polygon_create_zeros(int sz)$/;"	f
g2d_polygon_get_interior_point	src/img/apriltag.c	/^void g2d_polygon_get_interior_point(const zarray_t *poly, double *p)$/;"	f
g2d_polygon_intersects_polygon	src/img/apriltag.c	/^int g2d_polygon_intersects_polygon(const zarray_t *polya, const zarray_t *polyb)$/;"	f
g2d_polygon_make_ccw	src/img/apriltag.c	/^void g2d_polygon_make_ccw(zarray_t *poly)$/;"	f
g2d_polygon_overlaps_polygon	src/img/apriltag.c	/^int g2d_polygon_overlaps_polygon(const zarray_t *polya, const zarray_t *polyb)$/;"	f
g2d_polygon_rasterize	src/img/apriltag.c	/^int g2d_polygon_rasterize(const zarray_t *poly, double y, double *x)$/;"	f
g628_table	src/img/rgb2rgb_tab.c	/^const uint8_t g628_table[64] = {$/;"	v
g826_table	src/img/rgb2rgb_tab.c	/^const uint8_t g826_table[256] = {$/;"	v
gBitBuf	src/img/picojpeg.c	/^static uint16 gBitBuf;$/;"	v	file:
gBitsLeft	src/img/picojpeg.c	/^static uint8 gBitsLeft;$/;"	v	file:
gCallbackStatus	src/img/picojpeg.c	/^static uint8 gCallbackStatus;$/;"	v	file:
gCoeffBuf	src/img/picojpeg.c	/^static int16 gCoeffBuf[8*8];$/;"	v	file:
gCompACTab	src/img/picojpeg.c	/^static uint8 gCompACTab[3]; \/\/ 0,1$/;"	v	file:
gCompDCTab	src/img/picojpeg.c	/^static uint8 gCompDCTab[3]; \/\/ 0,1$/;"	v	file:
gCompHSamp	src/img/picojpeg.c	/^static uint8 gCompHSamp[3];$/;"	v	file:
gCompIdent	src/img/picojpeg.c	/^static uint8 gCompIdent[3];$/;"	v	file:
gCompList	src/img/picojpeg.c	/^static uint8 gCompList[3];$/;"	v	file:
gCompQuant	src/img/picojpeg.c	/^static uint8 gCompQuant[3];$/;"	v	file:
gCompVSamp	src/img/picojpeg.c	/^static uint8 gCompVSamp[3];$/;"	v	file:
gCompsInFrame	src/img/picojpeg.c	/^static uint8 gCompsInFrame;$/;"	v	file:
gCompsInScan	src/img/picojpeg.c	/^static uint8 gCompsInScan;$/;"	v	file:
gHuffTab0	src/img/picojpeg.c	/^static HuffTable gHuffTab0;$/;"	v	file:
gHuffTab1	src/img/picojpeg.c	/^static HuffTable gHuffTab1;$/;"	v	file:
gHuffTab2	src/img/picojpeg.c	/^static HuffTable gHuffTab2;$/;"	v	file:
gHuffTab3	src/img/picojpeg.c	/^static HuffTable gHuffTab3;$/;"	v	file:
gHuffVal0	src/img/picojpeg.c	/^static uint8 gHuffVal0[16];$/;"	v	file:
gHuffVal1	src/img/picojpeg.c	/^static uint8 gHuffVal1[16];$/;"	v	file:
gHuffVal2	src/img/picojpeg.c	/^static uint8 gHuffVal2[256];$/;"	v	file:
gHuffVal3	src/img/picojpeg.c	/^static uint8 gHuffVal3[256];$/;"	v	file:
gImageXSize	src/img/picojpeg.c	/^static uint16 gImageXSize;$/;"	v	file:
gImageYSize	src/img/picojpeg.c	/^static uint16 gImageYSize;$/;"	v	file:
gInBuf	src/img/picojpeg.c	/^static uint8 gInBuf[PJPG_MAX_IN_BUF_SIZE];$/;"	v	file:
gInBufLeft	src/img/picojpeg.c	/^static uint8 gInBufLeft;$/;"	v	file:
gInBufOfs	src/img/picojpeg.c	/^static uint8 gInBufOfs;$/;"	v	file:
gLastDC	src/img/picojpeg.c	/^static int16 gLastDC[3];$/;"	v	file:
gMCUBufB	src/img/picojpeg.c	/^static uint8 gMCUBufB[256];$/;"	v	file:
gMCUBufG	src/img/picojpeg.c	/^static uint8 gMCUBufG[256];$/;"	v	file:
gMCUBufR	src/img/picojpeg.c	/^static uint8 gMCUBufR[256];$/;"	v	file:
gMCUOrg	src/img/picojpeg.c	/^static uint8 gMCUOrg[6];$/;"	v	file:
gMaxBlocksPerMCU	src/img/picojpeg.c	/^static uint8 gMaxBlocksPerMCU;$/;"	v	file:
gMaxMCUSPerCol	src/img/picojpeg.c	/^static uint16 gMaxMCUSPerCol;$/;"	v	file:
gMaxMCUSPerRow	src/img/picojpeg.c	/^static uint16 gMaxMCUSPerRow;$/;"	v	file:
gMaxMCUXSize	src/img/picojpeg.c	/^static uint8 gMaxMCUXSize;$/;"	v	file:
gMaxMCUYSize	src/img/picojpeg.c	/^static uint8 gMaxMCUYSize;$/;"	v	file:
gNextRestartNum	src/img/picojpeg.c	/^static uint16 gNextRestartNum;$/;"	v	file:
gNumMCUSRemaining	src/img/picojpeg.c	/^static uint16 gNumMCUSRemaining;$/;"	v	file:
gQuant0	src/img/picojpeg.c	/^static int16 gQuant0[8*8];$/;"	v	file:
gQuant1	src/img/picojpeg.c	/^static int16 gQuant1[8*8];$/;"	v	file:
gReduce	src/img/picojpeg.c	/^static uint8 gReduce;$/;"	v	file:
gRestartInterval	src/img/picojpeg.c	/^static uint16 gRestartInterval;$/;"	v	file:
gRestartsLeft	src/img/picojpeg.c	/^static uint16 gRestartsLeft;$/;"	v	file:
gScanType	src/img/picojpeg.c	/^static pjpeg_scan_type_t gScanType;$/;"	v	file:
gTemFlag	src/img/picojpeg.c	/^static uint8 gTemFlag;$/;"	v	file:
gValidHuffTables	src/img/picojpeg.c	/^static uint8 gValidHuffTables;$/;"	v	file:
gValidQuantTables	src/img/picojpeg.c	/^static uint8 gValidQuantTables;$/;"	v	file:
gWinogradQuant	src/img/picojpeg.c	/^const uint8 gWinogradQuant[] = $/;"	v
g_acc	src/img/filter.c	/^    int r_acc, g_acc, b_acc, pixels;$/;"	m	struct:imlib_cartoon_filter_mean_state	file:
g_dvp_finish_flag	src/sensor.c	/^volatile static uint8_t g_dvp_finish_flag = 0;$/;"	v	file:
g_jpg_buf	src/framebuffer.c	/^    uint8_t g_jpg_buf[OMV_JPEG_BUF_SIZE] __attribute__((aligned(64)));$/;"	v
g_pCallback_data	src/img/picojpeg.c	/^static void *g_pCallback_data;$/;"	v	file:
g_pNeedBytesCallback	src/img/picojpeg.c	/^static pjpeg_need_bytes_callback_t g_pNeedBytesCallback;$/;"	v	file:
g_pixs	src/sensor.c	/^static uint32_t *g_pixs = NULL;$/;"	v	file:
g_pixs_size	src/sensor.c	/^static uint32_t g_pixs_size = 0;$/;"	v	file:
g_sensor_buff_index_in	src/sensor.c	/^volatile uint8_t g_sensor_buff_index_in = 0, g_sensor_buff_index_out = 0;$/;"	v
g_sensor_buff_index_out	src/sensor.c	/^volatile uint8_t g_sensor_buff_index_in = 0, g_sensor_buff_index_out = 0;$/;"	v
g_set_pixformat_regs	src/sensor.c	/^static bool g_set_pixformat_regs = true;$/;"	v	file:
gainceiling	src/include/sensor.h	/^    gainceiling_t gainceiling;  \/\/ AGC gainceiling$/;"	m	struct:_sensor
gainceiling_t	src/include/sensor.h	/^} gainceiling_t;$/;"	t	typeref:enum:__anon51
galois_field	src/img/qrcode.c	/^struct galois_field {$/;"	s	file:
gaussian	src/img/filter.c	/^static float gaussian(float x, float sigma)$/;"	f	file:
gaussian_kernel	src/img/lsd.c	/^static void gaussian_kernel(ntuple_list kernel, double sigma, double mean)$/;"	f	file:
gaussian_sampler	src/img/lsd.c	/^static image_double gaussian_sampler( image_double in, double scale,$/;"	f	file:
gc0328_get_exposure_us	src/gc0328.c	/^static int gc0328_get_exposure_us(sensor_t *sensor, int *exposure_us)$/;"	f	file:
gc0328_get_gain_db	src/gc0328.c	/^static int gc0328_get_gain_db(sensor_t *sensor, float *gain_db)$/;"	f	file:
gc0328_get_rgb_gain_db	src/gc0328.c	/^static int gc0328_get_rgb_gain_db(sensor_t *sensor, float *r_gain_db, float *g_gain_db, float *b_gain_db)$/;"	f	file:
gc0328_init	src/gc0328.c	/^int gc0328_init(sensor_t *sensor)$/;"	f
gc0328_read_reg	src/gc0328.c	/^static int gc0328_read_reg(sensor_t *sensor, uint8_t reg_addr)$/;"	f	file:
gc0328_reset	src/gc0328.c	/^int gc0328_reset(sensor_t* sensor)$/;"	f
gc0328_set_auto_exposure	src/gc0328.c	/^static int gc0328_set_auto_exposure(sensor_t *sensor, int enable, int exposure_us)$/;"	f	file:
gc0328_set_auto_gain	src/gc0328.c	/^static int gc0328_set_auto_gain(sensor_t *sensor, int enable, float gain_db, float gain_db_ceiling)$/;"	f	file:
gc0328_set_auto_whitebal	src/gc0328.c	/^static int gc0328_set_auto_whitebal(sensor_t *sensor, int enable, float r_gain_db, float g_gain_db, float b_gain_db)$/;"	f	file:
gc0328_set_brightness	src/gc0328.c	/^static int gc0328_set_brightness(sensor_t *sensor, int level)$/;"	f	file:
gc0328_set_colorbar	src/gc0328.c	/^static int gc0328_set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
gc0328_set_contrast	src/gc0328.c	/^static int gc0328_set_contrast(sensor_t *sensor, int level)$/;"	f	file:
gc0328_set_framerate	src/gc0328.c	/^static int gc0328_set_framerate(sensor_t *sensor, framerate_t framerate)$/;"	f	file:
gc0328_set_framesize	src/gc0328.c	/^static int gc0328_set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
gc0328_set_gainceiling	src/gc0328.c	/^static int gc0328_set_gainceiling(sensor_t *sensor, gainceiling_t gainceiling)$/;"	f	file:
gc0328_set_hmirror	src/gc0328.c	/^static int gc0328_set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
gc0328_set_pixformat	src/gc0328.c	/^static int gc0328_set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
gc0328_set_quality	src/gc0328.c	/^static int gc0328_set_quality(sensor_t *sensor, int qs)$/;"	f	file:
gc0328_set_saturation	src/gc0328.c	/^static int gc0328_set_saturation(sensor_t *sensor, int level)$/;"	f	file:
gc0328_set_vflip	src/gc0328.c	/^static int gc0328_set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
gc0328_set_windowing	src/gc0328.c	/^int gc0328_set_windowing(framesize_t framesize, int x, int y, int w, int h)$/;"	f
gc0328_write_reg	src/gc0328.c	/^static int gc0328_write_reg(sensor_t *sensor, uint8_t reg_addr, uint16_t reg_data)$/;"	f	file:
gc2145_get_exposure_us	src/gc2145.c	/^static int gc2145_get_exposure_us(sensor_t *sensor, int *exposure_us)$/;"	f	file:
gc2145_get_gain_db	src/gc2145.c	/^static int gc2145_get_gain_db(sensor_t *sensor, float *gain_db)$/;"	f	file:
gc2145_get_rgb_gain_db	src/gc2145.c	/^static int gc2145_get_rgb_gain_db(sensor_t *sensor, float *r_gain_db, float *g_gain_db, float *b_gain_db)$/;"	f	file:
gc2145_init	src/gc2145.c	/^int gc2145_init(sensor_t *sensor)$/;"	f
gc2145_read_reg	src/gc2145.c	/^static int gc2145_read_reg(sensor_t *sensor, uint8_t reg_addr)$/;"	f	file:
gc2145_reset	src/gc2145.c	/^int gc2145_reset(sensor_t *sensor)$/;"	f
gc2145_set_auto_exposure	src/gc2145.c	/^static int gc2145_set_auto_exposure(sensor_t *sensor, int enable, int exposure_us)$/;"	f	file:
gc2145_set_auto_gain	src/gc2145.c	/^static int gc2145_set_auto_gain(sensor_t *sensor, int enable, float gain_db, float gain_db_ceiling)$/;"	f	file:
gc2145_set_auto_whitebal	src/gc2145.c	/^static int gc2145_set_auto_whitebal(sensor_t *sensor, int enable, float r_gain_db, float g_gain_db, float b_gain_db)$/;"	f	file:
gc2145_set_brightness	src/gc2145.c	/^static int gc2145_set_brightness(sensor_t *sensor, int level)$/;"	f	file:
gc2145_set_colorbar	src/gc2145.c	/^static int gc2145_set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
gc2145_set_contrast	src/gc2145.c	/^static int gc2145_set_contrast(sensor_t *sensor, int level)$/;"	f	file:
gc2145_set_framerate	src/gc2145.c	/^static int gc2145_set_framerate(sensor_t *sensor, framerate_t framerate)$/;"	f	file:
gc2145_set_framesize	src/gc2145.c	/^static int gc2145_set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
gc2145_set_gainceiling	src/gc2145.c	/^static int gc2145_set_gainceiling(sensor_t *sensor, gainceiling_t gainceiling)$/;"	f	file:
gc2145_set_hmirror	src/gc2145.c	/^static int gc2145_set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
gc2145_set_pixformat	src/gc2145.c	/^static int gc2145_set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
gc2145_set_quality	src/gc2145.c	/^static int gc2145_set_quality(sensor_t *sensor, int qs)$/;"	f	file:
gc2145_set_saturation	src/gc2145.c	/^static int gc2145_set_saturation(sensor_t *sensor, int level)$/;"	f	file:
gc2145_set_vflip	src/gc2145.c	/^static int gc2145_set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
gc2145_write_reg	src/gc2145.c	/^static int gc2145_write_reg(sensor_t *sensor, uint8_t reg_addr, uint16_t reg_data)$/;"	f	file:
gen	zbar/image.h	/^        uint8_t gen[4];                 \/* raw bytes *\/$/;"	m	union:zbar_format_def_s::__anon62
getBit	src/img/picojpeg.c	/^static PJPG_INLINE uint8 getBit(void)$/;"	f	file:
getBits	src/img/picojpeg.c	/^static uint16 getBits(uint8 numBits, uint8 FFCheck)$/;"	f	file:
getBits1	src/img/picojpeg.c	/^static PJPG_INLINE uint16 getBits1(uint8 numBits)$/;"	f	file:
getBits2	src/img/picojpeg.c	/^static PJPG_INLINE uint16 getBits2(uint8 numBits)$/;"	f	file:
getChar	src/img/picojpeg.c	/^static PJPG_INLINE uint8 getChar(void)$/;"	f	file:
getExtendOffset	src/img/picojpeg.c	/^static int16 getExtendOffset(uint8 i)$/;"	f	file:
getExtendTest	src/img/picojpeg.c	/^static uint16 getExtendTest(uint8 i)$/;"	f	file:
getHuffTable	src/img/picojpeg.c	/^static HuffTable* getHuffTable(uint8 index)$/;"	f	file:
getHuffVal	src/img/picojpeg.c	/^static uint8* getHuffVal(uint8 index)$/;"	f	file:
getMaxHuffCodes	src/img/picojpeg.c	/^static uint16 getMaxHuffCodes(uint8 index)$/;"	f	file:
getOctet	src/img/picojpeg.c	/^static PJPG_INLINE uint8 getOctet(uint8 FFCheck)$/;"	f	file:
get_a_star_i	src/img/fft.c	/^ALWAYS_INLINE static float get_a_star_i(int k, int N_pow2) \/\/ N=512 -> N=pow2=9$/;"	f	file:
get_a_star_r	src/img/fft.c	/^ALWAYS_INLINE static float get_a_star_r(int k, int N_pow2) \/\/ N=512 -> N=pow2=9$/;"	f	file:
get_ai	src/img/fft.c	/^ALWAYS_INLINE static float get_ai(int k, int N_pow2) \/\/ N=512 -> N=pow2=9$/;"	f	file:
get_ar	src/img/fft.c	/^ALWAYS_INLINE static float get_ar(int k, int N_pow2) \/\/ N=512 -> N=pow2=9$/;"	f	file:
get_b_star_i	src/img/fft.c	/^ALWAYS_INLINE static float get_b_star_i(int k, int N_pow2) \/\/ N=512 -> N=pow2=9$/;"	f	file:
get_b_star_r	src/img/fft.c	/^ALWAYS_INLINE static float get_b_star_r(int k, int N_pow2) \/\/ N=512 -> N=pow2=9$/;"	f	file:
get_bi	src/img/fft.c	/^ALWAYS_INLINE static float get_bi(int k, int N_pow2) \/\/ N=512 -> N=pow2=9$/;"	f	file:
get_br	src/img/fft.c	/^ALWAYS_INLINE static float get_br(int k, int N_pow2) \/\/ N=512 -> N=pow2=9$/;"	f	file:
get_color	src/img/zbar.c	/^static inline char get_color (const zbar_decoder_t *dcode)$/;"	f	file:
get_color	zbar/decoder.h	/^static inline char get_color (const zbar_decoder_t *dcode)$/;"	f
get_cos	src/img/fft.c	/^ALWAYS_INLINE static float get_cos(int k, int N_pow2) \/\/ N=512 -> N=pow2=9$/;"	f	file:
get_dir_by_rotation	src/py/py_lcd.c	/^STATIC lcd_dir_t get_dir_by_rotation(uint8_t rotation)$/;"	f
get_exposure_us	src/include/sensor.h	/^    int  (*get_exposure_us)     (sensor_t *sensor, int *exposure_us);$/;"	m	struct:_sensor
get_exposure_us	src/ov2640.c	/^static int get_exposure_us(sensor_t *sensor, int *exposure_us)$/;"	f	file:
get_exposure_us	src/ov3660.c	/^static int get_exposure_us(sensor_t *sensor, int *exposure_us)$/;"	f	file:
get_exposure_us	src/ov5640.c	/^static int get_exposure_us(sensor_t *sensor, int *exposure_us)$/;"	f	file:
get_exposure_us	src/ov5642.c	/^static int get_exposure_us(sensor_t *sensor, int *exposure_us)$/;"	f	file:
get_exposure_us	src/ov7740.c	/^static int get_exposure_us(sensor_t *sensor, int *exposure_us)$/;"	f	file:
get_gain_db	src/include/sensor.h	/^    int  (*get_gain_db)         (sensor_t *sensor, float *gain_db);$/;"	m	struct:_sensor
get_gain_db	src/ov2640.c	/^static int get_gain_db(sensor_t *sensor, float *gain_db)$/;"	f	file:
get_gain_db	src/ov3660.c	/^static int get_gain_db(sensor_t *sensor, float *gain_db)$/;"	f	file:
get_gain_db	src/ov5640.c	/^static int get_gain_db(sensor_t *sensor, float *gain_db)$/;"	f	file:
get_gain_db	src/ov5642.c	/^static int get_gain_db(sensor_t *sensor, float *gain_db)$/;"	f	file:
get_gain_db	src/ov7740.c	/^static int get_gain_db(sensor_t *sensor, float *gain_db)$/;"	f	file:
get_lock	zbar/decoder.h	/^static inline char get_lock (zbar_decoder_t *dcode,$/;"	f
get_mcu	src/img/jpeg.c	/^static uint8_t *get_mcu()$/;"	f	file:
get_median	src/img/stats.c	/^static int get_median(int *array, int array_sum, int array_len)$/;"	f	file:
get_median_l	src/img/stats.c	/^static int get_median_l(long long *array, long long array_sum, int array_len)$/;"	f	file:
get_pixel	src/img/picojpeg_util.c	/^static void get_pixel(int* pDst, const uint8 *pSrc, int luma_only, int num_comps)$/;"	f	file:
get_rgb_gain_db	src/include/sensor.h	/^    int  (*get_rgb_gain_db)     (sensor_t *sensor, float *r_gain_db, float *g_gain_db, float *b_gain_db);$/;"	m	struct:_sensor
get_rgb_gain_db	src/ov2640.c	/^static int get_rgb_gain_db(sensor_t *sensor, float *r_gain_db, float *g_gain_db, float *b_gain_db)$/;"	f	file:
get_rgb_gain_db	src/ov3660.c	/^static int get_rgb_gain_db(sensor_t *sensor, float *r_gain_db, float *g_gain_db, float *b_gain_db)$/;"	f	file:
get_rgb_gain_db	src/ov5640.c	/^static int get_rgb_gain_db(sensor_t *sensor, float *r_gain_db, float *g_gain_db, float *b_gain_db)$/;"	f	file:
get_rgb_gain_db	src/ov5642.c	/^static int get_rgb_gain_db(sensor_t *sensor, float *r_gain_db, float *g_gain_db, float *b_gain_db)$/;"	f	file:
get_rgb_gain_db	src/ov7740.c	/^static int get_rgb_gain_db(sensor_t *sensor, float *r_gain_db, float *g_gain_db, float *b_gain_db)$/;"	f	file:
get_sin	src/img/fft.c	/^ALWAYS_INLINE static float get_sin(int k, int N_pow2) \/\/ N=512 -> N=pow2=9$/;"	f	file:
get_theta	src/img/lsd.c	/^static double get_theta( struct lsd_point * reg, int reg_size, double x, double y,$/;"	f	file:
get_width	src/img/zbar.c	/^static inline unsigned get_width (const zbar_decoder_t *dcode,$/;"	f	file:
get_width	zbar/decoder.h	/^static inline unsigned get_width (const zbar_decoder_t *dcode,$/;"	f
gf	zbar/qrdec.c	/^    rs_gf256  gf;$/;"	m	struct:qr_reader	file:
gf16	src/img/qrcode.c	/^static const struct galois_field gf16 = {$/;"	v	typeref:struct:galois_field	file:
gf16_div	zbar/bch15_5.c	/^static unsigned gf16_div(unsigned _a,unsigned _b){$/;"	f	file:
gf16_exp	src/img/qrcode.c	/^static const uint8_t gf16_exp[16] = {$/;"	v	file:
gf16_exp	zbar/bch15_5.c	/^static const unsigned char gf16_exp[31]={$/;"	v	file:
gf16_hmul	zbar/bch15_5.c	/^static unsigned gf16_hmul(unsigned _a,unsigned _logb){$/;"	f	file:
gf16_log	src/img/qrcode.c	/^static const uint8_t gf16_log[16] = {$/;"	v	file:
gf16_log	zbar/bch15_5.c	/^static const signed char gf16_log[16]={$/;"	v	file:
gf16_mul	zbar/bch15_5.c	/^static unsigned gf16_mul(unsigned _a,unsigned _b){$/;"	f	file:
gf256	src/img/qrcode.c	/^const static struct galois_field gf256 = {$/;"	v	typeref:struct:galois_field	file:
gf256_exp	src/img/qrcode.c	/^static const uint8_t gf256_exp[256] = {$/;"	v	file:
gf256_log	src/img/qrcode.c	/^static const uint8_t gf256_log[256] = {$/;"	v	file:
gif_add_frame	src/img/gif.c	/^void gif_add_frame(mp_obj_t fp, image_t *img, uint16_t delay)$/;"	f
gif_close	src/img/gif.c	/^void gif_close(mp_obj_t fp)$/;"	f
gif_module	src/py/py_gif.c	/^const mp_obj_module_t gif_module = {$/;"	v
gif_open	src/img/gif.c	/^void gif_open(mp_obj_t fp, int width, int height, bool color, bool loop)$/;"	f
globals_dict_table	src/py/py_gif.c	/^static const mp_map_elem_t globals_dict_table[] = {$/;"	v	file:
globals_dict_table	src/py/py_image.c	/^static const mp_rom_map_elem_t globals_dict_table[] = {$/;"	v	file:
globals_dict_table	src/py/py_lcd.c	/^static const mp_map_elem_t globals_dict_table[] = {$/;"	v	file:
globals_dict_table	src/py/py_mjpeg.c	/^static const mp_map_elem_t globals_dict_table[] = {$/;"	v	file:
globals_dict_table	src/py/py_omv.c	/^static const mp_rom_map_elem_t globals_dict_table[] = {$/;"	v	file:
globals_dict_table	src/py/py_sensor.c	/^STATIC const mp_map_elem_t globals_dict_table[] = {$/;"	v
goodness	src/img/apriltag.c	/^    float goodness;$/;"	m	struct:apriltag_detection	file:
goodness	src/img/include/imlib.h	/^    float goodness, decision_margin;$/;"	m	struct:find_apriltags_list_lnk_data
goodness	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
gpio_clk	src/sensor.c	/^    uint8_t gpio_clk;$/;"	m	struct:sensor_config_t	file:
gpio_sda	src/sensor.c	/^    uint8_t gpio_sda;$/;"	m	struct:sensor_config_t	file:
graymodel	src/img/apriltag.c	/^struct graymodel$/;"	s	file:
graymodel_add	src/img/apriltag.c	/^void graymodel_add(struct graymodel *gm, double x, double y, double gray)$/;"	f
graymodel_init	src/img/apriltag.c	/^void graymodel_init(struct graymodel *gm)$/;"	f
graymodel_interpolate	src/img/apriltag.c	/^double graymodel_interpolate(struct graymodel *gm, double x, double y)$/;"	f
graymodel_solve	src/img/apriltag.c	/^void graymodel_solve(struct graymodel *gm)$/;"	f
green	src/img/include/imlib.h	/^        uint8_t green;  \/\/ RGB888 Green$/;"	m	union:simple_color::__anon26
green	test/python_module/test.c	/^        uint8_t green;  \/\/ RGB888 Green$/;"	m	union:simple_color::__anon60	file:
green	zbar/image.h	/^            uint8_t red, green, blue;   \/* size\/location a la RGB_BITS() *\/$/;"	m	struct:zbar_format_def_s::__anon62::__anon63
grid	src/img/dmtx.c	/^   DmtxScanGrid    grid;$/;"	m	struct:DmtxDecode_struct	file:
grid_bit	src/img/qrcode.c	/^static inline int grid_bit(const struct quirc_code *code, int x, int y)$/;"	f	file:
grid_size	src/img/qrcode.c	/^    int                 grid_size;$/;"	m	struct:quirc_grid	file:
grids	src/img/qrcode.c	/^    struct quirc_grid       grids[QUIRC_MAX_GRIDS];$/;"	m	struct:quirc	typeref:struct:quirc::quirc_grid	file:
group	zbar/image.h	/^    zbar_format_group_t group;          \/* coarse categorization *\/$/;"	m	struct:zbar_format_def_s
group_s	src/img/zbar.c	/^struct group_s {$/;"	s	file:
groups	src/img/zbar.c	/^} __attribute__((aligned(8)))groups[] = {$/;"	v	typeref:struct:group_s
gs_bpp	src/include/sensor.h	/^    uint16_t gs_bpp;            \/\/ Grayscale bytes per pixel.$/;"	m	struct:_sensor
gvec	src/img/edge.c	/^typedef struct gvec {$/;"	s	file:
gvec_t	src/img/edge.c	/^} gvec_t;$/;"	t	typeref:struct:gvec	file:
gx	src/img/apriltag.c	/^    int16_t gx, gy;$/;"	m	struct:pt	file:
gy	src/img/apriltag.c	/^    int16_t gx, gy;$/;"	m	struct:pt	file:
h	src/img/apriltag.c	/^    uint32_t h;$/;"	m	struct:apriltag_family	file:
h	src/img/include/imdefs.h	/^    int h;$/;"	m	struct:image
h	src/img/include/imdefs.h	/^    int h;$/;"	m	struct:image_py
h	src/img/include/imlib.h	/^    int h;$/;"	m	struct:__anon28
h	src/img/include/imlib.h	/^    int h;$/;"	m	struct:integral_image
h	src/img/include/imlib.h	/^    int h;$/;"	m	struct:size
h	src/img/include/imlib.h	/^    int x, y, w, h;$/;"	m	struct:cluster
h	src/img/include/imlib.h	/^    int16_t h;$/;"	m	struct:rectangle
h	src/img/qrcode.c	/^    int                     h;$/;"	m	struct:quirc	file:
h	src/img/selective_search.c	/^    uint16_t h;$/;"	m	struct:__anon40	file:
h	src/include/framebuffer.h	/^    int w,h;$/;"	m	struct:framebuffer
h	src/include/framebuffer.h	/^    int w,h;$/;"	m	struct:jpegbuffer
h	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
h	src/py/py_image.c	/^    mp_obj_t x, y, w, h, magnitude;$/;"	m	struct:py_rect_obj	file:
h	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;$/;"	m	struct:py_datamatrix_obj	file:
h	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, type, rotation, quality;$/;"	m	struct:py_barcode_obj	file:
h	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;$/;"	m	struct:py_qrcode_obj	file:
h	src/py/py_image.c	/^    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count;$/;"	m	struct:py_blob_obj	file:
h	src/py/py_image.c	/^    mp_obj_t x, y, w, h;$/;"	m	struct:_py_kptmatch_obj_t	file:
h01	src/img/apriltag.c	/^const uint64_t h01 = 0x0101010101010101; \/\/the sum of 256 to the power of 0,1,2,3...$/;"	v
hOffset	src/img/dmtx.c	/^   int             hOffset;$/;"	m	struct:DmtxBestLine_struct	file:
h_max	src/include/framebuffer.h	/^    int w_max, h_max;$/;"	m	struct:framebuffer
h_pow2	src/img/include/omv_fft.h	/^    int w_pow2, h_pow2;$/;"	m	struct:fft2d_controller
hamming	src/img/apriltag.c	/^    int hamming;$/;"	m	struct:apriltag_detection	file:
hamming	src/img/apriltag.c	/^    uint8_t hamming;  \/\/ how many errors corrected?$/;"	m	struct:quick_decode_entry	file:
hamming	src/img/include/imlib.h	/^    uint8_t family, hamming;$/;"	m	struct:find_apriltags_list_lnk_data
hamming	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
handler	src/img/zbar.c	/^    zbar_decoder_handler_t *handler;    \/* application callback *\/$/;"	m	struct:zbar_decoder_s	file:
handler	src/img/zbar.c	/^    zbar_image_data_handler_t *handler;$/;"	m	struct:zbar_image_scanner_s	file:
handler	zbar/decoder.h	/^    zbar_decoder_handler_t *handler;    \/* application callback *\/$/;"	m	struct:zbar_decoder_s
handler	zbar/img_scanner.c	/^    zbar_image_data_handler_t *handler;$/;"	m	struct:zbar_image_scanner_s	file:
head	src/img/zbar.c	/^    zbar_symbol_t *head;        \/* first of decoded symbol results *\/$/;"	m	struct:zbar_symbol_set_s	file:
head	src/img/zbar.c	/^    zbar_symbol_t *head;$/;"	m	struct:recycle_bucket_s	file:
head	zbar/img_scanner.c	/^    zbar_symbol_t *head;$/;"	m	struct:recycle_bucket_s	file:
head	zbar/symbol.h	/^    zbar_symbol_t *head;        \/* first of decoded symbol results *\/$/;"	m	struct:zbar_symbol_set_s
head_ptr	src/img/include/collections.h	/^    list_lnk_t *head_ptr, *tail_ptr;$/;"	m	struct:list
head_ptr	src/img/include/collections.h	/^    size_t head_ptr, tail_ptr, len, size, data_len;$/;"	m	struct:fifo
header	src/umm_malloc.c	/^  } header;$/;"	m	struct:umm_block_t	typeref:union:umm_block_t::__anon57	file:
height	src/img/apriltag.c	/^    const int32_t height;$/;"	m	struct:image_f32	file:
height	src/img/apriltag.c	/^    const int32_t height;$/;"	m	struct:image_u32	file:
height	src/img/apriltag.c	/^    const int32_t height;$/;"	m	struct:image_u8x3	file:
height	src/img/apriltag.c	/^    const int32_t height;$/;"	m	struct:image_u8x4	file:
height	src/img/apriltag.c	/^    int32_t height;$/;"	m	struct:image_u8	file:
height	src/img/dmtx.c	/^   int             height;$/;"	m	struct:DmtxImage_struct	file:
height	src/img/zbar.c	/^    unsigned width, height;     \/* image size *\/$/;"	m	struct:zbar_image_s	file:
height	src/py/py_gif.c	/^    int height;$/;"	m	struct:py_gif_obj	file:
height	src/py/py_mjpeg.c	/^    int height;$/;"	m	struct:py_mjpeg_obj	file:
height	zbar/image.c	/^    uint16_t width, height;$/;"	m	struct:zimg_hdr_s	file:
height	zbar/image.h	/^    unsigned width, height;     \/* image size *\/$/;"	m	struct:zbar_image_s
height_curr	src/py/py_lcd.c	/^static uint16_t height_curr = 0;$/;"	v	file:
hello	test/python_module/test.c	/^hello(PyObject* self, PyObject* args) {$/;"	f	file:
hff	src/img/apriltag.c	/^const uint64_t hff = 0xffffffffffffffff; \/\/binary: all ones$/;"	v
high	src/img/font.c	/^  uint8_t high;$/;"	m	struct:font	file:
hist	src/py/py_image.c	/^    uint8_t *hist;$/;"	m	struct:_py_lbp_obj_t	file:
histogram	src/img/include/imlib.h	/^typedef struct histogram {$/;"	s
histogram_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) histogram_t;$/;"	t	typeref:struct:histogram
hmirror	src/img/mathop.c	/^    bool hmirror, vflip, transpose;$/;"	m	struct:imlib_replace_line_op_state	file:
hmirror	src/include/sensor.h	/^    bool hmirror;$/;"	m	struct:_sensor
homography_compute	src/img/apriltag.c	/^matd_t *homography_compute(zarray_t *correspondences, int flags)$/;"	f
homography_project	src/img/apriltag.c	/^static inline void homography_project(const matd_t *H, double x, double y, double *ox, double *oy)$/;"	f	file:
homography_to_model_view	src/img/apriltag.c	/^matd_t *homography_to_model_view(const matd_t *H, double F, double G, double A, double B, double C, double D)$/;"	f
homography_to_pose	src/img/apriltag.c	/^matd_t *homography_to_pose(const matd_t *H, double fx, double fy, double cx, double cy)$/;"	f
hscan	src/img/qrcode.c	/^    int                 hscan;$/;"	m	struct:quirc_grid	file:
huffCreate	src/img/picojpeg.c	/^static void huffCreate(const uint8* pBits, HuffTable* pHuffTable)$/;"	f	file:
huffDecode	src/img/picojpeg.c	/^static PJPG_INLINE uint8 huffDecode(const HuffTable* pHuffTable, const uint8* pHuffVal)$/;"	f	file:
huffExtend	src/img/picojpeg.c	/^static PJPG_INLINE int16 huffExtend(uint16 x, uint8 s)$/;"	f	file:
hw_flags	src/include/sensor.h	/^    uint32_t hw_flags;          \/\/ Hardware flags (clock polarities\/hw capabilities)$/;"	m	struct:_sensor
i	src/img/apriltag.c	/^    int i;           \/\/ which vertex to remove?$/;"	m	struct:remove_vertex	file:
i25	src/img/zbar.c	/^    i25_decoder_t i25;                  \/* Interleaved 2 of 5 decode state *\/$/;"	m	struct:zbar_decoder_s	file:
i25	zbar/decoder.h	/^    i25_decoder_t i25;                  \/* Interleaved 2 of 5 decode state *\/$/;"	m	struct:zbar_decoder_s
i25_acquire_lock	src/img/zbar.c	/^static inline int i25_acquire_lock (zbar_decoder_t *dcode)$/;"	f	file:
i25_decode1	src/img/zbar.c	/^static inline unsigned char i25_decode1 (unsigned char enc,$/;"	f	file:
i25_decode10	src/img/zbar.c	/^static inline unsigned char i25_decode10 (zbar_decoder_t *dcode,$/;"	f	file:
i25_decode_end	src/img/zbar.c	/^static inline signed char i25_decode_end (zbar_decoder_t *dcode)$/;"	f	file:
i25_decode_start	src/img/zbar.c	/^static inline signed char i25_decode_start (zbar_decoder_t *dcode)$/;"	f	file:
i25_decoder_s	src/img/zbar.c	/^typedef struct i25_decoder_s {$/;"	s	file:
i25_decoder_t	src/img/zbar.c	/^}__attribute__((aligned(8))) i25_decoder_t;$/;"	t	typeref:struct:i25_decoder_s	file:
i25_reset	src/img/zbar.c	/^static inline void i25_reset (i25_decoder_t *i25)$/;"	f	file:
i2c_dev_tmp	src/mt9d111.c	/^static i2c_device_number_t i2c_dev_tmp = -2; \/\/ i2c_device_number_t components\/micropython\/port\/src\/omv\/cambus.c$/;"	v	file:
i2c_device	src/cambus.c	/^static int8_t i2c_device = -2;$/;"	v	file:
i2c_num	src/sensor.c	/^    uint8_t i2c_num;$/;"	m	struct:sensor_config_t	file:
i_image_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) i_image_t;$/;"	t	typeref:struct:integral_image
iceillog2	src/img/apriltag.c	/^static int iceillog2(int v)$/;"	f	file:
iclamp	src/img/apriltag.c	/^static inline int iclamp(int v, int minv, int maxv)$/;"	f	file:
id	src/img/apriltag.c	/^    int id;$/;"	m	struct:apriltag_detection	file:
id	src/img/apriltag.c	/^    uint16_t id;      \/\/ the tag ID (a small integer)$/;"	m	struct:quick_decode_entry	file:
id	src/img/apriltag.c	/^    uint32_t id;$/;"	m	struct:uint32_zarray_entry	file:
id	src/img/include/imlib.h	/^    uint16_t id;$/;"	m	struct:find_apriltags_list_lnk_data
id	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
idctCols	src/img/picojpeg.c	/^static void idctCols(void)$/;"	f	file:
idctRows	src/img/picojpeg.c	/^static void idctRows(void)$/;"	f	file:
ide_dbg_ack_data	src/ide_dbg.c	/^ide_dbg_status_t ide_dbg_ack_data(machine_uart_obj_t* uart)$/;"	f
ide_dbg_cmd_buf	src/ide_dbg.c	/^static uint8_t ide_dbg_cmd_buf[IDE_DBG_MAX_PACKET] = {IDE_DBG_CMD_START_FLAG};$/;"	v	file:
ide_dbg_cmd_len_count	src/ide_dbg.c	/^static volatile uint8_t ide_dbg_cmd_len_count = 0;$/;"	v	file:
ide_dbg_dispatch_cmd	src/ide_dbg.c	/^ide_dbg_status_t ide_dbg_dispatch_cmd(machine_uart_obj_t* uart, uint8_t* data)$/;"	f
ide_dbg_get_script	src/ide_dbg.c	/^vstr_t*  ide_dbg_get_script()$/;"	f
ide_dbg_get_script	src/ide_dbg.c	/^vstr_t* ide_dbg_get_script()$/;"	f
ide_dbg_init	src/ide_dbg.c	/^void ide_dbg_init()$/;"	f
ide_dbg_init2	src/ide_dbg.c	/^void ide_dbg_init2()$/;"	f
ide_dbg_init3	src/ide_dbg.c	/^void ide_dbg_init3()$/;"	f
ide_dbg_interrupt_main	src/ide_dbg.c	/^bool ide_dbg_interrupt_main()$/;"	f
ide_dbg_need_save_file	src/ide_dbg.c	/^bool      ide_dbg_need_save_file()$/;"	f
ide_dbg_on_script_end	src/ide_dbg.c	/^void ide_dbg_on_script_end()$/;"	f
ide_dbg_receive_data	src/ide_dbg.c	/^ide_dbg_status_t ide_dbg_receive_data(machine_uart_obj_t* uart, uint8_t* data)$/;"	f
ide_dbg_script_ready	src/ide_dbg.c	/^bool     ide_dbg_script_ready()$/;"	f
ide_dbg_script_ready	src/ide_dbg.c	/^bool ide_dbg_script_ready()$/;"	f
ide_dbg_status_t	src/include/ide_dbg.h	/^} ide_dbg_status_t;$/;"	t	typeref:enum:__anon46
ide_debug_init0	src/ide_dbg.c	/^bool ide_debug_init0()$/;"	f
ide_exception	src/ide_dbg.c	/^static mp_obj_exception_t ide_exception; \/\/IDE interrupt$/;"	v	file:
ide_exception_str	src/ide_dbg.c	/^static mp_obj_str_t   ide_exception_str;$/;"	v	file:
ide_exception_str_tuple	src/ide_dbg.c	/^static mp_obj_tuple_t* ide_exception_str_tuple = NULL;$/;"	v	file:
ide_file_length	src/ide_dbg.c	/^static uint32_t ide_file_length = 0;$/;"	v	file:
ide_file_save_status	src/ide_dbg.c	/^static volatile uint32_t ide_file_save_status = 0; \/\/0: ok, 1: busy recieve data, 2:eror memory, 3:open file err, $/;"	v	file:
ide_get_script_status	src/ide_dbg.c	/^bool  ide_get_script_status()$/;"	f
ide_save_file	src/ide_dbg.c	/^void      ide_save_file()$/;"	f
idx	src/img/jpeg.c	/^    int idx;$/;"	m	struct:__anon34	file:
idx	src/img/zbar.c	/^    unsigned char idx;                  \/* current width index *\/$/;"	m	struct:zbar_decoder_s	file:
idx	zbar/decoder.h	/^    unsigned char idx;                  \/* current width index *\/$/;"	m	struct:zbar_decoder_s
ifft1d_run	src/img/fft.c	/^void ifft1d_run(fft1d_controller_t *controller)$/;"	f
ifft2d_run	src/img/fft.c	/^void ifft2d_run(fft2d_controller_t *controller)$/;"	f
image	src/img/dmtx.c	/^   DmtxImage      *image;$/;"	m	struct:DmtxDecode_struct	file:
image	src/img/include/imdefs.h	/^typedef struct image {$/;"	s
image	src/img/qrcode.c	/^    uint8_t                 *image;$/;"	m	struct:quirc	file:
imageFlip	src/img/dmtx.c	/^   int             imageFlip;$/;"	m	struct:DmtxImage_struct	file:
imageMethods	test/python_module/image.c	/^static PyMethodDef imageMethods[] = {$/;"	v	file:
imageMethods	test/python_module/image_new.c	/^static PyMethodDef imageMethods[] = {$/;"	v	file:
image_bpp	src/img/include/imlib.h	/^typedef enum image_bpp$/;"	g
image_bpp_t	src/img/include/imlib.h	/^image_bpp_t;$/;"	t	typeref:enum:image_bpp
image_char	src/img/lsd.c	/^} * __attribute__((aligned(8)))image_char;$/;"	t	typeref:struct:image_char_s	file:
image_char_s	src/img/lsd.c	/^typedef struct image_char_s$/;"	s	file:
image_compare	src/img/picojpeg_util.c	/^static void image_compare(image_compare_results *pResults, int width, int height, const uint8 *pComp_image, int comp_image_comps, const uint8 *pUncomp_image_data, int uncomp_comps, int luma_only)$/;"	f	file:
image_compare_results	src/img/picojpeg_util.c	/^} image_compare_results;$/;"	t	typeref:struct:image_compare_results_tag	file:
image_compare_results_tag	src/img/picojpeg_util.c	/^typedef struct image_compare_results_tag$/;"	s	file:
image_copy	src/img/imlib.c	/^void image_copy(image_t *dst, image_t *src)$/;"	f
image_double	src/img/lsd.c	/^} * __attribute__((aligned(8)))image_double;$/;"	t	typeref:struct:image_double_s	file:
image_double_s	src/img/lsd.c	/^typedef struct image_double_s$/;"	s	file:
image_f32	src/img/apriltag.c	/^struct image_f32$/;"	s	file:
image_f32_t	src/img/apriltag.c	/^typedef struct image_f32 image_f32_t;$/;"	t	typeref:struct:image_f32	file:
image_get_mask_pixel	src/img/imlib.c	/^bool image_get_mask_pixel(image_t *ptr, int x, int y)$/;"	f
image_init	src/img/imlib.c	/^void image_init(image_t *ptr, int w, int h, int bpp, void *data)$/;"	f
image_int	src/img/lsd.c	/^} * __attribute__((aligned(8)))image_int;$/;"	t	typeref:struct:image_int_s	file:
image_int_s	src/img/lsd.c	/^typedef struct image_int_s$/;"	s	file:
image_module	src/py/py_image.c	/^const mp_obj_module_t image_module = {$/;"	v
image_py	src/img/include/imdefs.h	/^typedef struct image_py {$/;"	s
image_scale	src/img/orb.c	/^static void image_scale(image_t *src, image_t *dst)$/;"	f	file:
image_scale	src/img/selective_search.c	/^static void image_scale(image_t *src, image_t *dst)$/;"	f	file:
image_size	src/img/imlib.c	/^size_t image_size(image_t *ptr)$/;"	f
image_t	src/img/include/imdefs.h	/^} __attribute__((aligned(8)))image_t;$/;"	t	typeref:struct:image
image_t_py	src/img/include/imdefs.h	/^} __attribute__((aligned(8)))image_t_py;$/;"	t	typeref:struct:image_py
image_to_python	test/python_module/image_new.c	/^PyObject *image_to_python(image_t *srcpic)$/;"	f
image_u32	src/img/apriltag.c	/^struct image_u32$/;"	s	file:
image_u32_t	src/img/apriltag.c	/^typedef struct image_u32 image_u32_t;$/;"	t	typeref:struct:image_u32	file:
image_u8	src/img/apriltag.c	/^struct image_u8$/;"	s	file:
image_u8_t	src/img/apriltag.c	/^typedef struct image_u8 image_u8_t;$/;"	t	typeref:struct:image_u8	file:
image_u8x3	src/img/apriltag.c	/^struct image_u8x3$/;"	s	file:
image_u8x3_t	src/img/apriltag.c	/^typedef struct image_u8x3 image_u8x3_t;$/;"	t	typeref:struct:image_u8x3	file:
image_u8x4	src/img/apriltag.c	/^struct image_u8x4$/;"	s	file:
image_u8x4_t	src/img/apriltag.c	/^typedef struct image_u8x4 image_u8x4_t;$/;"	t	typeref:struct:image_u8x4	file:
imax	src/img/apriltag.c	/^static inline int imax(int a, int b)$/;"	f	file:
imax64	src/img/apriltag.c	/^static inline int64_t imax64(int64_t a, int64_t b)$/;"	f	file:
imblib_parse_extension	src/img/imlib.c	/^static save_image_format_t imblib_parse_extension(image_t *img, const char *path)$/;"	f	file:
img	src/img/include/imlib.h	/^    struct image *img;              \/\/ Grayscale image.$/;"	m	struct:cascade	typeref:struct:cascade::
img	src/img/include/omv_fft.h	/^    image_t *img;$/;"	m	struct:fft2d_controller
img	src/img/jpeg.c	/^    image_t *img;$/;"	m	struct:_jpeg_enc	file:
img	src/img/zbar.c	/^    zbar_image_t *img;          \/* currently scanning image *root* *\/$/;"	m	struct:zbar_image_scanner_s	file:
img	zbar/img_scanner.c	/^    zbar_image_t *img;          \/* currently scanning image *root* *\/$/;"	m	struct:zbar_image_scanner_s	file:
img_bpp	src/img/jpeg.c	/^    int img_bpp;$/;"	m	struct:_jpeg_enc	file:
img_h	src/img/jpeg.c	/^    int img_h;$/;"	m	struct:_jpeg_enc	file:
img_lines	src/img/shadow_removal.c	/^    uint16_t *img_lines[imlib_remove_shadows_kernel_size];$/;"	m	struct:imlib_remove_shadows_line_op_state	file:
img_read_settings	src/img/include/imlib.h	/^typedef struct img_read_settings {$/;"	s
img_read_settings_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) img_read_settings_t;$/;"	t	typeref:struct:img_read_settings
img_w	src/img/jpeg.c	/^    int img_w;$/;"	m	struct:_jpeg_enc	file:
imin	src/img/apriltag.c	/^static inline int imin(int a, int b)$/;"	f	file:
imin64	src/img/apriltag.c	/^static inline int64_t imin64(int64_t a, int64_t b)$/;"	f	file:
imlib_add	src/img/mathop.c	/^void imlib_add(image_t *img, const char *path, image_t *other, int scalar, image_t *mask)$/;"	f
imlib_add_line_op	src/img/mathop.c	/^static void imlib_add_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_affine	src/img/affine.c	/^int imlib_affine(image_t* src_img, image_t* dst_img, float* T)$/;"	f
imlib_affine_ai	src/img/affine.c	/^int imlib_affine_ai(image_t* src_img, image_t* dst_img, float* TT)$/;"	f
imlib_affine_getTansform	src/img/affine.c	/^void imlib_affine_getTansform(uint16_t *src, uint16_t *dst, uint16_t cnt, float* TT)$/;"	f
imlib_b_and	src/img/binary.c	/^void imlib_b_and(image_t *img, const char *path, image_t *other, int scalar, image_t *mask)$/;"	f
imlib_b_and_line_op	src/img/binary.c	/^static void imlib_b_and_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_b_nand	src/img/binary.c	/^void imlib_b_nand(image_t *img, const char *path, image_t *other, int scalar, image_t *mask)$/;"	f
imlib_b_nand_line_op	src/img/binary.c	/^static void imlib_b_nand_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_b_nor	src/img/binary.c	/^void imlib_b_nor(image_t *img, const char *path, image_t *other, int scalar, image_t *mask)$/;"	f
imlib_b_nor_line_op	src/img/binary.c	/^static void imlib_b_nor_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_b_or	src/img/binary.c	/^void imlib_b_or(image_t *img, const char *path, image_t *other, int scalar, image_t *mask)$/;"	f
imlib_b_or_line_op	src/img/binary.c	/^static void imlib_b_or_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_b_xnor	src/img/binary.c	/^void imlib_b_xnor(image_t *img, const char *path, image_t *other, int scalar, image_t *mask)$/;"	f
imlib_b_xnor_line_op	src/img/binary.c	/^static void imlib_b_xnor_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_b_xor	src/img/binary.c	/^void imlib_b_xor(image_t *img, const char *path, image_t *other, int scalar, image_t *mask)$/;"	f
imlib_b_xor_line_op	src/img/binary.c	/^static void imlib_b_xor_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_bayer_to_rgb565	src/img/imlib.c	/^void imlib_bayer_to_rgb565(image_t *img, int w, int h, int xoffs, int yoffs, uint16_t *rgbbuf)$/;"	f
imlib_bilateral_filter	src/img/filter.c	/^void imlib_bilateral_filter(image_t *img, const int ksize, float color_sigma, float space_sigma, bool threshold, int offset, bool invert, image_t *mask)$/;"	f
imlib_binary	src/img/binary.c	/^void imlib_binary(image_t *out, image_t *img, list_t *thresholds, bool invert, bool zero, image_t *mask)$/;"	f
imlib_black_hat	src/img/binary.c	/^void imlib_black_hat(image_t *img, int ksize, int threshold, image_t *mask)$/;"	f
imlib_blend	src/img/mathop.c	/^void imlib_blend(image_t *img, const char *path, image_t *other, int scalar, float alpha, image_t *mask)$/;"	f
imlib_blend_line_op	src/img/mathop.c	/^static void imlib_blend_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_blend_line_op_state	src/img/mathop.c	/^typedef struct imlib_blend_line_op_state {$/;"	s	file:
imlib_blend_line_op_t	src/img/mathop.c	/^} __attribute__((aligned(8))) imlib_blend_line_op_t;$/;"	t	typeref:struct:imlib_blend_line_op_state	file:
imlib_cartoon_filter	src/img/filter.c	/^void imlib_cartoon_filter(image_t *img, float seed_threshold, float floating_threshold, image_t *mask)$/;"	f
imlib_cartoon_filter_fill	src/img/filter.c	/^static void imlib_cartoon_filter_fill(image_t *img, int line, int l, int r, void *data)$/;"	f	file:
imlib_cartoon_filter_fill_state	src/img/filter.c	/^typedef struct imlib_cartoon_filter_fill_state {$/;"	s	file:
imlib_cartoon_filter_fill_state_t	src/img/filter.c	/^} __attribute__((aligned(8)))imlib_cartoon_filter_fill_state_t;$/;"	t	typeref:struct:imlib_cartoon_filter_fill_state	file:
imlib_cartoon_filter_mean	src/img/filter.c	/^static void imlib_cartoon_filter_mean(image_t *img, int line, int l, int r, void *data)$/;"	f	file:
imlib_cartoon_filter_mean_state	src/img/filter.c	/^typedef struct imlib_cartoon_filter_mean_state {$/;"	s	file:
imlib_cartoon_filter_mean_state_t	src/img/filter.c	/^} __attribute__((aligned(8)))imlib_cartoon_filter_mean_state_t;$/;"	t	typeref:struct:imlib_cartoon_filter_mean_state	file:
imlib_chrominvar	src/img/shadow_removal.c	/^void imlib_chrominvar(image_t *img)$/;"	f
imlib_clahe_histeq	src/img/clahe.c	/^void imlib_clahe_histeq(image_t *img, float clip_limit, image_t *mask)$/;"	f
imlib_close	src/img/binary.c	/^void imlib_close(image_t *img, int ksize, int threshold, image_t *mask)$/;"	f
imlib_conv3	src/img/conv.c	/^void imlib_conv3(image_t *img, float *krn)$/;"	f
imlib_detect_objects	src/img/haar.c	/^array_t *imlib_detect_objects(image_t *image, cascade_t *cascade, rectangle_t *roi)$/;"	f
imlib_difference	src/img/mathop.c	/^void imlib_difference(image_t *img, const char *path, image_t *other, int scalar, image_t *mask)$/;"	f
imlib_difference_line_op	src/img/mathop.c	/^static void imlib_difference_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_dilate	src/img/binary.c	/^void imlib_dilate(image_t *img, int ksize, int threshold, image_t *mask)$/;"	f
imlib_div	src/img/mathop.c	/^void imlib_div(image_t *img, const char *path, image_t *other, int scalar, bool invert, bool mod, image_t *mask)$/;"	f
imlib_div_line_op	src/img/mathop.c	/^static void imlib_div_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_div_line_op_state	src/img/mathop.c	/^typedef struct imlib_div_line_op_state {$/;"	s	file:
imlib_div_line_op_state_t	src/img/mathop.c	/^} __attribute__((aligned(8))) imlib_div_line_op_state_t;$/;"	t	typeref:struct:imlib_div_line_op_state	file:
imlib_draw_ascii_string	src/img/font.c	/^void imlib_draw_ascii_string(image_t *img, int x_off, int y_off, const char *str, int c, float scale, int x_spacing, int y_spacing, bool mono_space) {$/;"	f
imlib_draw_circle	src/img/draw.c	/^void imlib_draw_circle(image_t *img, int cx, int cy, int r, int c, int thickness, bool fill)$/;"	f
imlib_draw_ellipse	src/img/draw.c	/^void imlib_draw_ellipse(image_t *img, int cx, int cy, int rx, int ry, int rotation, int c, int thickness, bool fill)$/;"	f
imlib_draw_font	src/img/font.c	/^void imlib_draw_font(image_t *img, int x_off, int y_off, int c, float scale, uint8_t font_h, uint8_t font_w, const uint8_t *font)$/;"	f
imlib_draw_image	src/img/draw.c	/^void imlib_draw_image(image_t *img, image_t *other, int x_off, int y_off, float x_scale, float y_scale, float alpha, image_t *mask)$/;"	f
imlib_draw_line	src/img/draw.c	/^void imlib_draw_line(image_t *img, int x0, int y0, int x1, int y1, int c, int thickness)$/;"	f
imlib_draw_rectangle	src/img/draw.c	/^void imlib_draw_rectangle(image_t *img, int rx, int ry, int rw, int rh, int c, int thickness, bool fill)$/;"	f
imlib_draw_string	src/img/font.c	/^inline void imlib_draw_string(image_t *img, int x_off, int y_off, mp_obj_t str, int c, float scale, int x_spacing, int y_spacing, bool mono_space)$/;"	f
imlib_draw_utf8_string	src/img/font.c	/^void imlib_draw_utf8_string(image_t *img, int x_off, int y_off, mp_obj_t str, int c, float scale, int x_spacing, int y_spacing, bool mono_space) {$/;"	f
imlib_edge_canny	src/img/edge.c	/^void imlib_edge_canny(image_t *src, rectangle_t *roi, int low_thresh, int high_thresh)$/;"	f
imlib_edge_simple	src/img/edge.c	/^void imlib_edge_simple(image_t *src, rectangle_t *roi, int low_thresh, int high_thresh)$/;"	f
imlib_erode	src/img/binary.c	/^void imlib_erode(image_t *img, int ksize, int threshold, image_t *mask)$/;"	f
imlib_erode_dilate	src/img/binary.c	/^static void imlib_erode_dilate(image_t *img, int ksize, int threshold, int e_or_d, image_t *mask)$/;"	f	file:
imlib_find_apriltags	src/img/apriltag.c	/^void imlib_find_apriltags(list_t *out, image_t *ptr, rectangle_t *roi, apriltag_families_t families,$/;"	f
imlib_find_barcodes	src/img/zbar.c	/^void imlib_find_barcodes(list_t *out, image_t *ptr, rectangle_t *roi)$/;"	f
imlib_find_blobs	src/img/blob.c	/^void imlib_find_blobs(list_t *out, image_t *ptr, rectangle_t *roi, unsigned int x_stride, unsigned int y_stride,$/;"	f
imlib_find_circles	src/img/hough.c	/^void imlib_find_circles(list_t *out, image_t *ptr, rectangle_t *roi, unsigned int x_stride, unsigned int y_stride,$/;"	f
imlib_find_datamatrices	src/img/dmtx.c	/^void imlib_find_datamatrices(list_t *out, image_t *ptr, rectangle_t *roi, int effort)$/;"	f
imlib_find_hog	src/img/hog.c	/^void imlib_find_hog(image_t *src, rectangle_t *roi, int cell_size)$/;"	f
imlib_find_iris	src/img/eye.c	/^void imlib_find_iris(image_t *src, point_t *iris, rectangle_t *roi)$/;"	f
imlib_find_line_segments	src/img/hough.c	/^void imlib_find_line_segments(list_t *out, image_t *ptr, rectangle_t *roi, unsigned int x_stride, unsigned int y_stride,$/;"	f
imlib_find_lines	src/img/hough.c	/^void imlib_find_lines(list_t *out, image_t *ptr, rectangle_t *roi, unsigned int x_stride, unsigned int y_stride,$/;"	f
imlib_find_qrcodes	src/img/qrcode.c	/^void imlib_find_qrcodes(list_t *out, image_t *ptr, rectangle_t *roi)$/;"	f
imlib_find_rects	src/img/apriltag.c	/^void imlib_find_rects(list_t *out, image_t *ptr, rectangle_t *roi, uint32_t threshold)$/;"	f
imlib_flood_fill	src/img/draw.c	/^size_t imlib_flood_fill(image_t *img, int x, int y,$/;"	f
imlib_flood_fill_int	src/img/blob.c	/^size_t imlib_flood_fill_int(image_t *out, image_t *img, int x, int y,$/;"	f
imlib_gamma_corr	src/img/mathop.c	/^void imlib_gamma_corr(image_t *img, float gamma, float contrast, float brightness)$/;"	f
imlib_get_histogram	src/img/stats.c	/^void imlib_get_histogram(histogram_t *out, image_t *ptr, rectangle_t *roi, list_t *thresholds, bool invert)$/;"	f
imlib_get_percentile	src/img/stats.c	/^void imlib_get_percentile(percentile_t *out, image_bpp_t bpp, histogram_t *ptr, float percentile)$/;"	f
imlib_get_pixel	src/img/draw.c	/^int imlib_get_pixel(image_t *img, int x, int y)$/;"	f
imlib_get_regression	src/img/stats.c	/^bool imlib_get_regression(find_lines_list_lnk_data_t *out, image_t *ptr, rectangle_t *roi, unsigned int x_stride, unsigned int y_stride,$/;"	f
imlib_get_similarity	src/img/stats.c	/^void imlib_get_similarity(image_t *img, const char *path, image_t *other, int scalar, float *avg, float *std, float *min, float *max)$/;"	f
imlib_get_statistics	src/img/stats.c	/^void imlib_get_statistics(statistics_t *out, image_bpp_t bpp, histogram_t *ptr)$/;"	f
imlib_get_threshold	src/img/stats.c	/^void imlib_get_threshold(threshold_t *out, image_bpp_t bpp, histogram_t *ptr)$/;"	f
imlib_grayscale_to_rgb	src/img/imlib.c	/^void imlib_grayscale_to_rgb(simple_color_t *grayscale, simple_color_t *rgb)$/;"	f
imlib_grayscale_to_rgb	test/python_module/test.c	/^void imlib_grayscale_to_rgb(simple_color_t *grayscale, simple_color_t *rgb)$/;"	f
imlib_histeq	src/img/filter.c	/^void imlib_histeq(image_t *img, image_t *mask)$/;"	f
imlib_illuminvar	src/img/shadow_removal.c	/^void imlib_illuminvar(image_t *img) \/\/ http:\/\/ai.stanford.edu\/~alireza\/publication\/cic15.pdf$/;"	f
imlib_image_mean	src/img/imlib.c	/^int imlib_image_mean(image_t *src, int *r_mean, int *g_mean, int *b_mean)$/;"	f
imlib_image_operation	src/img/imlib.c	/^void imlib_image_operation(image_t *img, const char *path, image_t *other, int scalar, line_op_t op, void *data)$/;"	f
imlib_image_std	src/img/imlib.c	/^int imlib_image_std(image_t *src)$/;"	f
imlib_integral_image	src/img/integral.c	/^void imlib_integral_image(image_t *src, i_image_t *sum)$/;"	f
imlib_integral_image_alloc	src/img/integral.c	/^void imlib_integral_image_alloc(i_image_t *sum, int w, int h)$/;"	f
imlib_integral_image_free	src/img/integral.c	/^void imlib_integral_image_free(i_image_t *sum)$/;"	f
imlib_integral_image_scaled	src/img/integral.c	/^void imlib_integral_image_scaled(image_t *src, i_image_t *sum)$/;"	f
imlib_integral_image_sq	src/img/integral.c	/^void imlib_integral_image_sq(image_t *src, i_image_t *sum)$/;"	f
imlib_integral_lookup	src/img/integral.c	/^uint32_t imlib_integral_lookup(i_image_t *sum, int x, int y, int w, int h)$/;"	f
imlib_integral_mw	src/img/integral_mw.c	/^void imlib_integral_mw(image_t *src, mw_image_t *sum)$/;"	f
imlib_integral_mw_alloc	src/img/integral_mw.c	/^void imlib_integral_mw_alloc(mw_image_t *sum, int w, int h)$/;"	f
imlib_integral_mw_free	src/img/integral_mw.c	/^void imlib_integral_mw_free(mw_image_t *sum)$/;"	f
imlib_integral_mw_lookup	src/img/integral_mw.c	/^long imlib_integral_mw_lookup(mw_image_t *sum, int x, int y, int w, int h)$/;"	f
imlib_integral_mw_scale	src/img/integral_mw.c	/^void imlib_integral_mw_scale(rectangle_t *roi, mw_image_t *sum, int w, int h)$/;"	f
imlib_integral_mw_shift	src/img/integral_mw.c	/^void imlib_integral_mw_shift(image_t *src, mw_image_t *sum, int n)$/;"	f
imlib_integral_mw_shift_sq	src/img/integral_mw.c	/^void imlib_integral_mw_shift_sq(image_t *src, mw_image_t *sum, int n)$/;"	f
imlib_integral_mw_shift_ss	src/img/integral_mw.c	/^void imlib_integral_mw_shift_ss(image_t *src, mw_image_t *sum, mw_image_t *ssq, rectangle_t *roi, int n)$/;"	f
imlib_integral_mw_sq	src/img/integral_mw.c	/^void imlib_integral_mw_sq(image_t *src, mw_image_t *sum)$/;"	f
imlib_integral_mw_ss	src/img/integral_mw.c	/^void imlib_integral_mw_ss(image_t *src, mw_image_t *sum, mw_image_t *ssq, rectangle_t *roi)$/;"	f
imlib_invert	src/img/binary.c	/^void imlib_invert(image_t *img)$/;"	f
imlib_lab_to_rgb	src/img/imlib.c	/^void imlib_lab_to_rgb(simple_color_t *lab, simple_color_t *rgb)$/;"	f
imlib_lbp_desc	src/img/lbp.c	/^uint8_t *imlib_lbp_desc(image_t *image, rectangle_t *roi)$/;"	f
imlib_lbp_desc_distance	src/img/lbp.c	/^int imlib_lbp_desc_distance(uint8_t *d0, uint8_t *d1)$/;"	f
imlib_lbp_desc_load	src/img/lbp.c	/^int imlib_lbp_desc_load(mp_obj_t fp, uint8_t **desc)$/;"	f
imlib_lbp_desc_save	src/img/lbp.c	/^int imlib_lbp_desc_save(mp_obj_t fp, uint8_t *desc)$/;"	f
imlib_lens_corr	src/img/imlib.c	/^void imlib_lens_corr(image_t *img, float strength, float zoom)$/;"	f
imlib_load_cascade	src/img/haar.c	/^int imlib_load_cascade(cascade_t *cascade, const char *path)$/;"	f
imlib_load_cascade_from_file	src/img/haar.c	/^int imlib_load_cascade_from_file(cascade_t *cascade, const char *path)$/;"	f
imlib_logpolar	src/img/phasecorrelation.c	/^void imlib_logpolar(image_t *img, bool linear, bool reverse)$/;"	f
imlib_logpolar_int	src/img/phasecorrelation.c	/^void imlib_logpolar_int(image_t *dst, image_t *src, rectangle_t *roi, bool linear, bool reverse)$/;"	f
imlib_lsd_find_line_segments	src/img/lsd.c	/^void imlib_lsd_find_line_segments(list_t *out, image_t *ptr, rectangle_t *roi, unsigned int merge_distance, unsigned int max_theta_diff)$/;"	f
imlib_max	src/img/mathop.c	/^void imlib_max(image_t *img, const char *path, image_t *other, int scalar, image_t *mask)$/;"	f
imlib_max_line_op	src/img/mathop.c	/^static void imlib_max_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_mean_filter	src/img/filter.c	/^void imlib_mean_filter(image_t *img, const int ksize, bool threshold, int offset, bool invert, image_t *mask)$/;"	f
imlib_mean_pool	src/img/pool.c	/^void imlib_mean_pool(image_t *img_i, image_t *img_o, int x_div, int y_div)$/;"	f
imlib_median_filter	src/img/filter.c	/^void imlib_median_filter(image_t *img, const int ksize, float percentile, bool threshold, int offset, bool invert, image_t *mask)$/;"	f
imlib_midpoint_filter	src/img/filter.c	/^void imlib_midpoint_filter(image_t *img, const int ksize, float bias, bool threshold, int offset, bool invert, image_t *mask)$/;"	f
imlib_midpoint_pool	src/img/pool.c	/^void imlib_midpoint_pool(image_t *img_i, image_t *img_o, int x_div, int y_div, const int bias)$/;"	f
imlib_min	src/img/mathop.c	/^void imlib_min(image_t *img, const char *path, image_t *other, int scalar, image_t *mask)$/;"	f
imlib_min_line_op	src/img/mathop.c	/^static void imlib_min_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_mode_filter	src/img/filter.c	/^void imlib_mode_filter(image_t *img, const int ksize, bool threshold, int offset, bool invert, image_t *mask)$/;"	f
imlib_morph	src/img/filter.c	/^void imlib_morph(image_t *img, const int ksize, const int *krn, const float m, const int b, bool threshold, int offset, bool invert, image_t *mask)$/;"	f
imlib_mul	src/img/mathop.c	/^void imlib_mul(image_t *img, const char *path, image_t *other, int scalar, bool invert, image_t *mask)$/;"	f
imlib_mul_line_op	src/img/mathop.c	/^static void imlib_mul_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_mul_line_op_state	src/img/mathop.c	/^typedef struct imlib_mul_line_op_state {$/;"	s	file:
imlib_mul_line_op_state_t	src/img/mathop.c	/^} __attribute__((aligned(8))) imlib_mul_line_op_state_t;$/;"	t	typeref:struct:imlib_mul_line_op_state	file:
imlib_negate	src/img/mathop.c	/^void imlib_negate(image_t *img)$/;"	f
imlib_open	src/img/binary.c	/^void imlib_open(image_t *img, int ksize, int threshold, image_t *mask)$/;"	f
imlib_remove_shadows	src/img/shadow_removal.c	/^void imlib_remove_shadows(image_t *img, const char *path, image_t *other, int scalar, bool single)$/;"	f
imlib_remove_shadows_kernel_rank	src/img/shadow_removal.c	12;"	d	file:
imlib_remove_shadows_kernel_rank	src/img/shadow_removal.c	361;"	d	file:
imlib_remove_shadows_kernel_size	src/img/shadow_removal.c	13;"	d	file:
imlib_remove_shadows_kernel_size	src/img/shadow_removal.c	360;"	d	file:
imlib_remove_shadows_line_op	src/img/shadow_removal.c	/^static void imlib_remove_shadows_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_remove_shadows_line_op_state	src/img/shadow_removal.c	/^typedef struct imlib_remove_shadows_line_op_state {$/;"	s	file:
imlib_remove_shadows_line_op_state_t	src/img/shadow_removal.c	/^} __attribute__((aligned(8)))imlib_remove_shadows_line_op_state_t;$/;"	t	typeref:struct:imlib_remove_shadows_line_op_state	file:
imlib_remove_shadows_sub_line_op	src/img/shadow_removal.c	/^static void imlib_remove_shadows_sub_line_op(image_t *img, int line, void *data, bool vflipped)$/;"	f	file:
imlib_remove_shadows_sub_sub_line_op	src/img/shadow_removal.c	/^static void imlib_remove_shadows_sub_sub_line_op(image_t *img, int line, void *data, bool vflipped)$/;"	f	file:
imlib_replace	src/img/mathop.c	/^void imlib_replace(image_t *img, const char *path, image_t *other, int scalar, bool hmirror, bool vflip, bool transpose, image_t *mask)$/;"	f
imlib_replace_line_op	src/img/mathop.c	/^static void imlib_replace_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_replace_line_op_state	src/img/mathop.c	/^typedef struct imlib_replace_line_op_state {$/;"	s	file:
imlib_replace_line_op_state_t	src/img/mathop.c	/^} __attribute__((aligned(8))) imlib_replace_line_op_state_t;$/;"	t	typeref:struct:imlib_replace_line_op_state	file:
imlib_rgb_to_grayscale	src/img/imlib.c	/^void imlib_rgb_to_grayscale(simple_color_t *rgb, simple_color_t *grayscale)$/;"	f
imlib_rgb_to_lab	src/img/imlib.c	/^void imlib_rgb_to_lab(simple_color_t *rgb, simple_color_t *lab)$/;"	f
imlib_rotation_corr	src/img/apriltag.c	/^void imlib_rotation_corr(image_t *img, float x_rotation, float y_rotation, float z_rotation,$/;"	f
imlib_selective_search	src/img/selective_search.c	/^array_t *imlib_selective_search(image_t *src, float t, int min_size, float a1, float a2, float a3)$/;"	f
imlib_sepconv3	src/img/imlib.c	/^void imlib_sepconv3(image_t *img, const int8_t *krn, const float m, const int b)$/;"	f
imlib_set_pixel	src/img/draw.c	/^void imlib_set_pixel(image_t *img, int x, int y, int p)$/;"	f
imlib_similarity_line_op	src/img/stats.c	/^void imlib_similarity_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f
imlib_similatiry_line_op_state	src/img/stats.c	/^typedef struct imlib_similatiry_line_op_state {$/;"	s	file:
imlib_similatiry_line_op_state_t	src/img/stats.c	/^}__attribute__((aligned(8))) imlib_similatiry_line_op_state_t;$/;"	t	typeref:struct:imlib_similatiry_line_op_state	file:
imlib_sub	src/img/mathop.c	/^void imlib_sub(image_t *img, const char *path, image_t *other, int scalar, bool reverse, image_t *mask)$/;"	f
imlib_sub_line_op	src/img/mathop.c	/^static void imlib_sub_line_op(image_t *img, int line, void *other, void *data, bool vflipped)$/;"	f	file:
imlib_sub_line_op_state	src/img/mathop.c	/^typedef struct imlib_sub_line_op_state {$/;"	s	file:
imlib_sub_line_op_state_t	src/img/mathop.c	/^} __attribute__((aligned(8))) imlib_sub_line_op_state_t;$/;"	t	typeref:struct:imlib_sub_line_op_state	file:
imlib_template_match_ds	src/img/template.c	/^float imlib_template_match_ds(image_t *f, image_t *t, rectangle_t *r)$/;"	f
imlib_template_match_ex	src/img/template.c	/^float imlib_template_match_ex(image_t *f, image_t *t, rectangle_t *roi, int step, rectangle_t *r)$/;"	f
imlib_top_hat	src/img/binary.c	/^void imlib_top_hat(image_t *img, int ksize, int threshold, image_t *mask)$/;"	f
imlib_yuv_to_rgb	src/img/imlib.c	/^ALWAYS_INLINE uint16_t imlib_yuv_to_rgb(uint8_t y, int8_t u, int8_t v)$/;"	f
imul_b1_b3	src/img/picojpeg.c	/^static PJPG_INLINE int16 imul_b1_b3(int16 w)$/;"	f	file:
imul_b2	src/img/picojpeg.c	/^static PJPG_INLINE int16 imul_b2(int16 w)$/;"	f	file:
imul_b4	src/img/picojpeg.c	/^static PJPG_INLINE int16 imul_b4(int16 w)$/;"	f	file:
imul_b5	src/img/picojpeg.c	/^static PJPG_INLINE int16 imul_b5(int16 w)$/;"	f	file:
index	src/img/font.c	/^  uint8_t index;$/;"	m	struct:font	file:
index	src/img/qrcode.c	/^    int     index;$/;"	m	struct:neighbour	file:
index	src/include/array.h	/^    int index;$/;"	m	struct:__anon45
init	src/img/picojpeg.c	/^static uint8 init(void)$/;"	f	file:
init5_8_pattern	src/img/agast.c	/^static void init5_8_pattern(int image_width)$/;"	f	file:
initFrame	src/img/picojpeg.c	/^static uint8 initFrame(void)$/;"	f	file:
initScan	src/img/picojpeg.c	/^static uint8 initScan(void)$/;"	f	file:
initialize	zbar/refcnt.c	/^static void initialize (void)$/;"	f	file:
initialized	zbar/refcnt.c	/^pthread_once_t initialized = PTHREAD_ONCE_INIT;$/;"	v
int16	src/img/picojpeg.c	/^typedef signed short    int16;$/;"	t	file:
int8	src/img/picojpeg.c	/^typedef signed char     int8;$/;"	t	file:
int_clog2	src/img/fft.c	/^ALWAYS_INLINE static int int_clog2(int x) \/\/ ceiling log 2$/;"	f	file:
int_flog2	src/img/fft.c	/^ALWAYS_INLINE static int int_flog2(int x) \/\/ floor log 2$/;"	f	file:
integral_image	src/img/include/imlib.h	/^typedef struct integral_image {$/;"	s
integrate_partial	src/img/zbar.c	/^static inline zbar_symbol_type_t integrate_partial (ean_decoder_t *ean,$/;"	f	file:
inter_hi	src/img/lsd.c	/^static double inter_hi(double x, double x1, double y1, double x2, double y2)$/;"	f	file:
inter_low	src/img/lsd.c	/^static double inter_low(double x, double x1, double y1, double x2, double y2)$/;"	f	file:
inv	zbar/qrdec.c	/^  int inv[2][2];$/;"	m	struct:qr_aff	file:
inv	zbar/qrdec.c	/^  int inv[3][2];$/;"	m	struct:qr_hom	file:
inv22	zbar/qrdec.c	/^  int inv22;$/;"	m	struct:qr_hom	file:
invariant_table	src/img/invariant_tab.c	/^const uint16_t invariant_table[65536] = {$/;"	v
invert	src/img/mathop.c	/^    bool invert, mod;$/;"	m	struct:imlib_div_line_op_state	file:
invert	src/img/mathop.c	/^    bool invert;$/;"	m	struct:imlib_mul_line_op_state	file:
irand	src/img/apriltag.c	/^static inline int irand(int bound)$/;"	f	file:
is_busy_sending	src/ide_dbg.c	/^static volatile bool    is_busy_sending = false; \/\/ sending data$/;"	v	file:
is_ide_dbg_mode	src/ide_dbg.c	/^bool is_ide_dbg_mode()$/;"	f
is_ide_mode	src/ide_dbg.c	/^static volatile bool is_ide_mode = false;$/;"	v	file:
is_img_data_in_main_fb	src/sensor.c	/^bool is_img_data_in_main_fb(uint8_t *data)$/;"	f
is_sending_jpeg	src/ide_dbg.c	/^static volatile bool    is_sending_jpeg = false; \/\/ sending jpeg (frame buf) data$/;"	v	file:
is_spd	src/img/apriltag.c	/^    int is_spd;$/;"	m	struct:__anon8	file:
is_vertex	src/img/apriltag.c	/^    int is_vertex;$/;"	m	struct:segment	file:
isaac	zbar/qrdec.c	/^    isaac_ctx isaac;$/;"	m	struct:qr_reader	file:
isaac_ctx	zbar/isaac.h	/^struct isaac_ctx{$/;"	s
isaac_ctx	zbar/isaac.h	/^typedef struct isaac_ctx isaac_ctx;$/;"	t	typeref:struct:isaac_ctx
isaac_init	zbar/isaac.c	/^void isaac_init(isaac_ctx *_ctx,const void *_seed,int _nseed){$/;"	f
isaac_mix	zbar/isaac.c	/^static void isaac_mix(unsigned _x[8]){$/;"	f	file:
isaac_next_uint	zbar/isaac.c	/^unsigned isaac_next_uint(isaac_ctx *_ctx,unsigned _n){$/;"	f
isaac_next_uint32	zbar/isaac.c	/^unsigned isaac_next_uint32(isaac_ctx *_ctx){$/;"	f
isaac_update	zbar/isaac.c	/^static void isaac_update(isaac_ctx *_ctx){$/;"	f	file:
isaligned	src/img/lsd.c	/^static int isaligned( int x, int y, image_int angles, double theta,$/;"	f	file:
isbn10_calc_checksum	src/img/zbar.c	/^static inline unsigned char isbn10_calc_checksum (ean_decoder_t *ean)$/;"	f	file:
isbn10_config	src/img/zbar.c	/^    unsigned isbn10_config;$/;"	m	struct:ean_decoder_s	file:
isbn13_config	src/img/zbar.c	/^    unsigned isbn13_config;$/;"	m	struct:ean_decoder_s	file:
isq	src/img/apriltag.c	/^static inline int isq(int v)$/;"	f	file:
iterator_get	src/img/collections.c	/^void iterator_get(list_t *ptr, list_lnk_t *lnk, void *data)$/;"	f
iterator_next	src/img/collections.c	/^list_lnk_t *iterator_next(list_lnk_t *lnk)$/;"	f
iterator_prev	src/img/collections.c	/^list_lnk_t *iterator_prev(list_lnk_t *lnk)$/;"	f
iterator_set	src/img/collections.c	/^void iterator_set(list_t *ptr, list_lnk_t *lnk, void *data)$/;"	f
iterator_start_from_head	src/img/collections.c	/^list_lnk_t *iterator_start_from_head(list_t *ptr)$/;"	f
iterator_start_from_tail	src/img/collections.c	/^list_lnk_t *iterator_start_from_tail(list_t *ptr)$/;"	f
jiggle_perspective	src/img/qrcode.c	/^static void jiggle_perspective(struct quirc *q, int index)$/;"	f	file:
jpeg_buf_t	src/img/jpeg.c	/^} __attribute__((aligned(8))) jpeg_buf_t;$/;"	t	typeref:struct:__anon34	file:
jpeg_calcBits	src/img/jpeg.c	/^static void jpeg_calcBits(int val, uint16_t bits[2]) {$/;"	f	file:
jpeg_compress	src/img/jpeg.c	/^bool jpeg_compress(image_t *src, image_t *dst, int quality, bool realloc)$/;"	f
jpeg_enc	src/img/jpeg.c	/^static jpeg_enc_t jpeg_enc;$/;"	v	file:
jpeg_enc_t	src/img/jpeg.c	/^} __attribute__((aligned(8))) jpeg_enc_t;$/;"	t	typeref:struct:_jpeg_enc	file:
jpeg_fb_framebuffer	src/framebuffer.c	/^    jpegbuffer_t* jpeg_fb_framebuffer = &_jpeg_fb_framebuffer;$/;"	v
jpeg_get_mcu	src/img/jpeg.c	/^void jpeg_get_mcu(image_t *img, int mcu_w, int mcu_h, int x_offs, int y_offs, int bpp, void *buf)$/;"	f
jpeg_init	src/img/jpeg.c	/^static void jpeg_init(int quality)$/;"	f	file:
jpeg_processDU	src/img/jpeg.c	/^static int jpeg_processDU(jpeg_buf_t *jpeg_buf, int8_t *CDU, float *fdtbl, int DC, const uint16_t (*HTDC)[2], const uint16_t (*HTAC)[2])$/;"	f	file:
jpeg_put_bytes	src/img/jpeg.c	/^static void jpeg_put_bytes(jpeg_buf_t *jpeg_buf, const void *data, int size)$/;"	f	file:
jpeg_put_char	src/img/jpeg.c	/^static void jpeg_put_char(jpeg_buf_t *jpeg_buf, char c)$/;"	f	file:
jpeg_read	src/img/jpeg.c	/^void jpeg_read(image_t *img, const char *path)$/;"	f
jpeg_read_geometry	src/img/jpeg.c	/^void jpeg_read_geometry(mp_obj_t fp, image_t *img)$/;"	f
jpeg_read_pixels	src/img/jpeg.c	/^bool jpeg_read_pixels(mp_obj_t fp, image_t *img)$/;"	f
jpeg_subsample	src/img/include/imlib.h	/^typedef enum  jpeg_subsample {$/;"	g
jpeg_subsample_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) jpeg_subsample_t;$/;"	t	typeref:enum:jpeg_subsample
jpeg_write	src/img/jpeg.c	/^void jpeg_write(image_t *img, const char *path, int quality)$/;"	f
jpeg_writeBits	src/img/jpeg.c	/^static void jpeg_writeBits(jpeg_buf_t *jpeg_buf, const uint16_t *bs)$/;"	f	file:
jpeg_write_headers	src/img/jpeg.c	/^static void jpeg_write_headers(jpeg_buf_t *jpeg_buf, int w, int h, int bpp, jpeg_subsample_t jpeg_subsample)$/;"	f	file:
jpegbuffer	src/include/framebuffer.h	/^typedef struct jpegbuffer {$/;"	s
jpegbuffer_t	src/include/framebuffer.h	/^} __attribute__((aligned(8))) jpegbuffer_t;$/;"	t	typeref:struct:jpegbuffer
jpg_bpp2_1x1	src/img/jpeg.c	/^int jpg_bpp2_1x1(int ps)$/;"	f
jpg_bpp2_1x1_unit	src/img/jpeg.c	/^__inline static void jpg_bpp2_1x1_unit(int x, int y, image_t *src, int* DCY, int* DCU, int* DCV, jpeg_buf_t* jpeg_buf)$/;"	f	file:
jpg_bpp2_2x1	src/img/jpeg.c	/^int jpg_bpp2_2x1(int ps)$/;"	f
jpg_bpp2_2x1_unit	src/img/jpeg.c	/^__inline static void jpg_bpp2_2x1_unit(int x, int y, image_t *src, int* DCY, int* DCU, int* DCV, jpeg_buf_t* jpeg_buf)$/;"	f	file:
jpg_bpp2_2x2	src/img/jpeg.c	/^int jpg_bpp2_2x2(int ps)$/;"	f
jpg_bpp2_2x2_unit	src/img/jpeg.c	/^__inline static void jpg_bpp2_2x2_unit(int x, int y, image_t *src, int* DCY, int* DCU, int* DCV, jpeg_buf_t* jpeg_buf)$/;"	f	file:
jpg_bpp2_end	src/img/jpeg.c	/^void jpg_bpp2_end(jpeg_buf_t*  jpeg_buf0, jpeg_buf_t*  jpeg_buf1)$/;"	f
jpg_bpp2_init	src/img/jpeg.c	770;"	d	file:
jumpSize	src/img/dmtx.c	/^   int             jumpSize;      \/* Distance in pixels between cross centers *\/$/;"	m	struct:DmtxScanGrid_struct	file:
jumpToNeg	src/img/dmtx.c	/^   int             jumpToNeg;     \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
jumpToPos	src/img/dmtx.c	/^   int             jumpToPos;     \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
kernel_gauss_3	src/img/imlib.c	/^const int8_t kernel_gauss_3[3*3] = {$/;"	v
kernel_gauss_5	src/img/imlib.c	/^const int8_t kernel_gauss_5[5*5] = {$/;"	v
kernel_high_pass_3	src/img/imlib.c	/^const int kernel_high_pass_3[3*3] = {$/;"	v
kernel_laplacian_3	src/img/imlib.c	/^const int kernel_laplacian_3[3*3] = {$/;"	v
keywdarg_methods	test/python_module/test/keywdarg.c	/^static PyMethodDef keywdarg_methods[] = {$/;"	v	file:
keywdarg_parrot	test/python_module/test/keywdarg.c	/^keywdarg_parrot(PyObject *self, PyObject *args, PyObject *keywds)$/;"	f	file:
keywdargmodule	test/python_module/test/keywdarg.c	/^static struct PyModuleDef keywdargmodule = {$/;"	v	typeref:struct:PyModuleDef	file:
kp	src/img/include/imlib.h	/^typedef struct kp {$/;"	s
kp_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) kp_t;$/;"	t	typeref:struct:kp
kpt_comp	src/img/orb.c	/^static int kpt_comp(const kp_t *kp1, const kp_t *kp2)$/;"	f	file:
kptmatch_obj_size	src/py/py_image.c	148;"	d	file:
kpts	src/py/py_image.c	/^    array_t *kpts;$/;"	m	struct:_py_kp_obj_t	file:
kpu_done	src/img/conv.c	/^static int kpu_done(void *ctx)$/;"	f	file:
kz_pixel_t	src/img/clahe.c	/^typedef unsigned char kz_pixel_t;        \/* for 8 bit-per-pixel images *\/$/;"	t	file:
kz_pixel_t	src/img/clahe.c	/^typedef unsigned short kz_pixel_t;       \/* for 12 bit-per-pixel images (default) *\/$/;"	t	file:
l	src/img/blob.c	/^    int16_t x, y, l, r;$/;"	m	struct:xylf	file:
l	src/img/fmath.c	/^    uint32_t l;$/;"	m	union:__anon22	file:
l	src/img/qrcode.c	/^    int16_t x, y, l, r;$/;"	m	struct:xylf	file:
lab_table	src/img/lab_tab.c	/^const int8_t lab_table[196608] = {$/;"	v
lab_table	src/img/lab_tab.c	/^int8_t lab_table(uint32_t idx)$/;"	f
lab_table_small	src/img/lab_tab.c	/^const int8_t lab_table_small[24576] = {$/;"	v
last_edge	src/img/zbar.c	/^    unsigned last_edge;     \/* interpolated position of last located edge *\/$/;"	m	struct:zbar_scanner_s	file:
last_edge	zbar/scanner.c	/^    unsigned last_edge;     \/* interpolated position of last located edge *\/$/;"	m	struct:zbar_scanner_s	file:
lb_clip_line	src/img/imlib.c	/^bool lb_clip_line(line_t *l, int x, int y, int w, int h) \/\/ line is drawn if this returns true$/;"	f
lbp_weights	src/img/lbp.c	/^const static int8_t lbp_weights [49]= {$/;"	v	file:
lcd	src/py/py_lcd.c	/^lcd_t *lcd = NULL;$/;"	v
lcd_module	src/py/py_lcd.c	/^const mp_obj_module_t lcd_module = {$/;"	v
lcd_para	src/py/py_lcd.c	/^lcd_para_t lcd_para = {$/;"	v
lcd_set_mirror_helper	src/py/py_lcd.c	/^STATIC void lcd_set_mirror_helper()$/;"	f
left	src/img/apriltag.c	/^    int left, right; \/\/ left vertex, right vertex$/;"	m	struct:remove_vertex	file:
left	src/img/apriltag.c	/^    int left, right;$/;"	m	struct:segment	file:
left	src/img/zbar.c	/^    zbar_symbol_type_t left;    \/* current holding buffer contents *\/$/;"	m	struct:ean_decoder_s	file:
leftAngle	src/img/dmtx.c	/^   int             leftAngle;     \/* hough angle of left edge *\/$/;"	m	struct:DmtxRegion_struct	file:
leftKnown	src/img/dmtx.c	/^   int             leftKnown;     \/* known == 1; unknown == 0 *\/$/;"	m	struct:DmtxRegion_struct	file:
leftLine	src/img/dmtx.c	/^   DmtxBestLine    leftLine;      \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
leftLoc	src/img/dmtx.c	/^   DmtxPixelLoc    leftLoc;       \/* known (arbitrary) location on left edge *\/$/;"	m	struct:DmtxRegion_struct	file:
len	src/img/include/collections.h	/^    size_t head_ptr, tail_ptr, len, size, data_len;$/;"	m	struct:fifo
len	src/img/include/collections.h	/^    size_t len, size, data_len;$/;"	m	struct:lifo
len	zbar/qrcode.h	/^  int      len;$/;"	m	struct:qr_finder_line
len	zbar/qrdec.h	/^      int            len;$/;"	m	struct:qr_code_data_entry::__anon65::__anon66
length	src/img/dmtx.c	/^   int length;$/;"	m	struct:DmtxByteList_struct	file:
length	src/img/jpeg.c	/^    int length;$/;"	m	struct:__anon34	file:
length	src/include/array.h	/^    int length;$/;"	m	struct:__anon45
length	src/py/py_image.c	/^    mp_obj_t x1, y1, x2, y2, length, magnitude, theta, rho;$/;"	m	struct:py_line_obj	file:
lifo	src/img/include/collections.h	/^typedef struct lifo$/;"	s
lifo_alloc	src/img/collections.c	/^void lifo_alloc(lifo_t *ptr, size_t size, size_t data_len)$/;"	f
lifo_alloc_all	src/img/collections.c	/^void lifo_alloc_all(lifo_t *ptr, size_t *size, size_t data_len)$/;"	f
lifo_clear	src/img/collections.c	/^void lifo_clear(lifo_t *ptr)$/;"	f
lifo_dequeue	src/img/collections.c	/^void lifo_dequeue(lifo_t *ptr, void *data)$/;"	f
lifo_enqueue	src/img/collections.c	/^void lifo_enqueue(lifo_t *ptr, void *data)$/;"	f
lifo_free	src/img/collections.c	/^void lifo_free(lifo_t *ptr)$/;"	f
lifo_is_not_empty	src/img/collections.c	/^bool lifo_is_not_empty(lifo_t *ptr)$/;"	f
lifo_is_not_full	src/img/collections.c	/^bool lifo_is_not_full(lifo_t *ptr)$/;"	f
lifo_peek	src/img/collections.c	/^void lifo_peek(lifo_t *ptr, void *data)$/;"	f
lifo_poke	src/img/collections.c	/^void lifo_poke(lifo_t *ptr, void *data)$/;"	f
lifo_size	src/img/collections.c	/^size_t lifo_size(lifo_t *ptr)$/;"	f
lifo_t	src/img/include/collections.h	/^__attribute__((aligned(8)))lifo_t;$/;"	t	typeref:struct:lifo
line	src/img/apriltag.c	/^    g2d_line_t line;$/;"	m	struct:__anon10	file:
line	src/img/include/imlib.h	/^    line_t line;$/;"	m	struct:find_lines_list_lnk_data
line	src/img/include/imlib.h	/^typedef struct line {$/;"	s
line	src/sensor.c	/^static volatile int line = 0;$/;"	v	file:
line	zbar/qr_finder.h	/^    qr_finder_line line;        \/* position info needed by decoder *\/$/;"	m	struct:qr_finder_s
line_fit_pt	src/img/apriltag.c	/^struct line_fit_pt$/;"	s	file:
line_intersect	src/img/qrcode.c	/^static int line_intersect(const struct quirc_point *p0,$/;"	f	file:
line_op_t	src/img/include/imlib.h	/^typedef void (*line_op_t)(image_t*, int, void*, void*, bool);$/;"	t
line_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) line_t;$/;"	t	typeref:struct:line
lines	zbar/qrdec.c	/^    qr_finder_line *lines;$/;"	m	struct:qr_finder_lines	file:
lines	zbar/qrdec.c	/^  qr_finder_line **lines;$/;"	m	struct:qr_finder_cluster	file:
lines_processed	src/img/shadow_removal.c	/^    int lines_processed;$/;"	m	struct:imlib_remove_shadows_line_op_state	file:
lines_processed	src/img/stats.c	/^    int lines_processed;$/;"	m	struct:imlib_similatiry_line_op_state	file:
list	src/img/include/collections.h	/^typedef struct list$/;"	s
list_clear	src/img/collections.c	/^void list_clear(list_t *ptr)$/;"	f
list_copy	src/img/collections.c	/^void list_copy(list_t *dst, list_t *src)$/;"	f
list_free	src/img/collections.c	/^void list_free(list_t *ptr)$/;"	f
list_get	src/img/collections.c	/^void list_get(list_t *ptr, void *data, size_t index)$/;"	f
list_get_back	src/img/collections.c	/^void list_get_back(list_t *ptr, void *data)$/;"	f
list_get_front	src/img/collections.c	/^void list_get_front(list_t *ptr, void *data)$/;"	f
list_init	src/img/collections.c	/^void list_init(list_t *ptr, size_t data_len)$/;"	f
list_insert	src/img/collections.c	/^void list_insert(list_t *ptr, void *data, size_t index)$/;"	f
list_lnk	src/img/include/collections.h	/^typedef struct list_lnk$/;"	s
list_lnk_t	src/img/include/collections.h	/^__attribute__((aligned(8)))list_lnk_t;$/;"	t	typeref:struct:list_lnk
list_pop_back	src/img/collections.c	/^void list_pop_back(list_t *ptr, void *data)$/;"	f
list_pop_front	src/img/collections.c	/^void list_pop_front(list_t *ptr, void *data)$/;"	f
list_push_back	src/img/collections.c	/^void list_push_back(list_t *ptr, void *data)$/;"	f
list_push_front	src/img/collections.c	/^void list_push_front(list_t *ptr, void *data)$/;"	f
list_remove	src/img/collections.c	/^void list_remove(list_t *ptr, void *data, size_t index)$/;"	f
list_set	src/img/collections.c	/^void list_set(list_t *ptr, void *data, size_t index)$/;"	f
list_set_back	src/img/collections.c	/^void list_set_back(list_t *ptr, void *data)$/;"	f
list_set_front	src/img/collections.c	/^void list_set_front(list_t *ptr, void *data)$/;"	f
list_size	src/img/collections.c	/^size_t list_size(list_t *ptr)$/;"	f
list_t	src/img/include/collections.h	/^__attribute__((aligned(8)))list_t;$/;"	t	typeref:struct:list
ll_angle	src/img/lsd.c	/^static image_int ll_angle( image_char in, double threshold,$/;"	f	file:
lo_base	src/img/zbar.c	/^static const unsigned char lo_base[8] = {$/;"	v	file:
lo_offset	src/img/zbar.c	/^static const unsigned char lo_offset[0x80] = {$/;"	v	file:
loc	src/img/dmtx.c	/^   DmtxPixelLoc    loc;$/;"	m	struct:DmtxBresLine_struct	file:
loc	src/img/dmtx.c	/^   DmtxPixelLoc    loc;$/;"	m	struct:DmtxFollow_struct	file:
loc	src/img/dmtx.c	/^   DmtxPixelLoc    loc;$/;"	m	struct:DmtxPointFlow_struct	file:
loc0	src/img/dmtx.c	/^   DmtxPixelLoc    loc0;$/;"	m	struct:DmtxBresLine_struct	file:
loc1	src/img/dmtx.c	/^   DmtxPixelLoc    loc1;$/;"	m	struct:DmtxBresLine_struct	file:
locBeg	src/img/dmtx.c	/^   DmtxPixelLoc    locBeg;$/;"	m	struct:DmtxBestLine_struct	file:
locNeg	src/img/dmtx.c	/^   DmtxPixelLoc    locNeg;$/;"	m	struct:DmtxBestLine_struct	file:
locPos	src/img/dmtx.c	/^   DmtxPixelLoc    locPos;$/;"	m	struct:DmtxBestLine_struct	file:
locR	src/img/dmtx.c	/^   DmtxPixelLoc    locR;          \/* remove if stepR works above *\/$/;"	m	struct:DmtxRegion_struct	file:
locT	src/img/dmtx.c	/^   DmtxPixelLoc    locT;          \/* remove if stepT works above *\/$/;"	m	struct:DmtxRegion_struct	file:
locals_dict_table	src/py/py_gif.c	/^static const mp_map_elem_t locals_dict_table[] = {$/;"	v	file:
locals_dict_table	src/py/py_image.c	/^static const mp_rom_map_elem_t locals_dict_table[] = {$/;"	v	file:
locals_dict_table	src/py/py_mjpeg.c	/^static const mp_map_elem_t locals_dict_table[] = {$/;"	v	file:
locateSOFMarker	src/img/picojpeg.c	/^static uint8 locateSOFMarker(void)$/;"	f	file:
locateSOIMarker	src/img/picojpeg.c	/^static uint8 locateSOIMarker(void)$/;"	f	file:
locateSOSMarker	src/img/picojpeg.c	/^static uint8 locateSOSMarker(uint8* pFoundEOI)$/;"	f	file:
lock	src/img/zbar.c	/^    zbar_symbol_type_t lock;            \/* buffer lock *\/$/;"	m	struct:zbar_decoder_s	file:
lock	src/include/framebuffer.h	/^    mutex_t lock;$/;"	m	struct:jpegbuffer
lock	src/include/mutex.h	/^    uint32_t lock;$/;"	m	struct:__anon47
lock	zbar/decoder.h	/^    zbar_symbol_type_t lock;            \/* buffer lock *\/$/;"	m	struct:zbar_decoder_s
lock_tmp	src/framebuffer.c	/^mutex_t lock_tmp;$/;"	v
log	src/img/apriltag.c	76;"	d	file:
log	src/img/dmtx.c	47;"	d	file:
log	src/img/lsd.c	40;"	d	file:
log	src/img/qrcode.c	/^    const uint8_t   *log;$/;"	m	struct:galois_field	file:
log	zbar/rs.h	/^  unsigned char log[256];$/;"	m	struct:rs_gf256
log10	src/img/lsd.c	41;"	d	file:
log2	src/img/apriltag.c	78;"	d	file:
log2	src/img/apriltag.c	79;"	d	file:
log2	src/img/dmtx.c	49;"	d	file:
log2	src/img/dmtx.c	50;"	d	file:
log2f	src/img/apriltag.c	80;"	d	file:
log2f	src/img/apriltag.c	81;"	d	file:
log2f	src/img/dmtx.c	51;"	d	file:
log2f	src/img/dmtx.c	52;"	d	file:
log301	src/img/dmtx.c	/^static DmtxByte log301[] =$/;"	v	file:
log_gamma	src/img/lsd.c	1390;"	d	file:
log_gamma_lanczos	src/img/lsd.c	/^static double log_gamma_lanczos(double x)$/;"	f	file:
log_gamma_windschitl	src/img/lsd.c	/^static double log_gamma_windschitl(double x)$/;"	f	file:
logf	src/img/apriltag.c	77;"	d	file:
logf	src/img/dmtx.c	48;"	d	file:
lookup_sequence	src/img/zbar.c	/^lookup_sequence (databar_segment_t *seg,$/;"	f	file:
loop	src/py/py_gif.c	/^    bool loop;$/;"	m	struct:py_gif_obj	file:
lsd	src/img/lsd.c	/^double * lsd(int * n_out, unsigned char * img, int X, int Y)$/;"	f
lsd_point	src/img/lsd.c	/^struct lsd_point {int16_t x,y;}__attribute__((aligned(8)));$/;"	s	file:
lsd_scale	src/img/lsd.c	/^double * lsd_scale(int * n_out, unsigned char * img, int X, int Y, double scale)$/;"	f
lsd_scale_region	src/img/lsd.c	/^double * lsd_scale_region( int * n_out,$/;"	f
lu	src/img/apriltag.c	/^    matd_t *lu; \/\/ combined L and U matrices, permuted so they can be triangular.$/;"	m	struct:__anon7	file:
m	src/img/fmath.c	/^        uint32_t m : 20;$/;"	m	struct:__anon22::__anon23	file:
m	src/img/hog.c	/^    int m;$/;"	m	struct:bin	file:
m	src/img/include/imlib.h	/^    float m;$/;"	m	struct:_vector
m	zbar/isaac.h	/^  unsigned m[ISAAC_SZ];$/;"	m	struct:isaac_ctx
m1	src/img/apriltag.c	/^const uint64_t m1  = 0x5555555555555555; \/\/binary: 0101...$/;"	v
m16	src/img/apriltag.c	/^const uint64_t m16 = 0x0000ffff0000ffff; \/\/binary: 16 zeros, 16 ones ...$/;"	v
m2	src/img/apriltag.c	/^const uint64_t m2  = 0x3333333333333333; \/\/binary: 00110011..$/;"	v
m32	src/img/apriltag.c	/^const uint64_t m32 = 0x00000000ffffffff; \/\/binary: 32 zeros, 32 ones$/;"	v
m4	src/img/apriltag.c	/^const uint64_t m4  = 0x0f0f0f0f0f0f0f0f; \/\/binary:  4 zeros,  4 ones ...$/;"	v
m8	src/img/apriltag.c	/^const uint64_t m8  = 0x00ff00ff00ff00ff; \/\/binary:  8 zeros,  8 ones ...$/;"	v
mMaxCode	src/img/picojpeg.c	/^   uint16 mMaxCode[16];$/;"	m	struct:HuffTableT	file:
mMinCode	src/img/picojpeg.c	/^   uint16 mMinCode[16];$/;"	m	struct:HuffTableT	file:
mValPtr	src/img/picojpeg.c	/^   uint8 mValPtr[16];$/;"	m	struct:HuffTableT	file:
m_MCUHeight	src/img/include/picojpeg.h	/^   int m_MCUHeight;$/;"	m	struct:__anon32
m_MCUSPerCol	src/img/include/picojpeg.h	/^   int m_MCUSPerCol;$/;"	m	struct:__anon32
m_MCUSPerRow	src/img/include/picojpeg.h	/^   int m_MCUSPerRow;$/;"	m	struct:__anon32
m_MCUWidth	src/img/include/picojpeg.h	/^   int m_MCUWidth;$/;"	m	struct:__anon32
m_comps	src/img/include/picojpeg.h	/^   int m_comps;$/;"	m	struct:__anon32
m_count_max_now	src/fb_alloc.c	/^static uint8_t m_count_max_now = 0;$/;"	v	file:
m_fb_alloc_addr	src/fb_alloc.c	/^static fb_alloc_addr_info_t m_fb_alloc_addr[FB_MAX_ALLOC_TIMES]; \/\/must <255$/;"	v	file:
m_height	src/img/include/picojpeg.h	/^   int m_height;$/;"	m	struct:__anon32
m_mark_max_now	src/fb_alloc.c	/^static uint8_t m_mark_max_now = 0;$/;"	v	file:
m_pMCUBufB	src/img/include/picojpeg.h	/^   unsigned char *m_pMCUBufB;$/;"	m	struct:__anon32
m_pMCUBufG	src/img/include/picojpeg.h	/^   unsigned char *m_pMCUBufG;$/;"	m	struct:__anon32
m_pMCUBufR	src/img/include/picojpeg.h	/^   unsigned char *m_pMCUBufR;$/;"	m	struct:__anon32
m_scanType	src/img/include/picojpeg.h	/^   pjpeg_scan_type_t m_scanType;$/;"	m	struct:__anon32
m_width	src/img/include/picojpeg.h	/^   int m_width;$/;"	m	struct:__anon32
mag	src/img/dmtx.c	/^   int             mag;$/;"	m	struct:DmtxBestLine_struct	file:
mag	src/img/dmtx.c	/^   int             mag;$/;"	m	struct:DmtxPointFlow_struct	file:
magic	zbar/error.h	/^    uint32_t magic;             \/* just in case *\/$/;"	m	struct:errinfo_s
magic	zbar/image.c	/^    uint32_t magic, format;$/;"	m	struct:zimg_hdr_s	file:
magnitude	src/img/include/imlib.h	/^    uint32_t magnitude;$/;"	m	struct:find_lines_list_lnk_data
magnitude	src/img/include/imlib.h	/^    uint32_t magnitude;$/;"	m	struct:find_rects_list_lnk_data
magnitude	src/img/include/imlib.h	/^    uint32_t r, magnitude;$/;"	m	struct:find_circles_list_lnk_data
magnitude	src/py/py_image.c	/^    mp_obj_t x, y, r, magnitude;$/;"	m	struct:py_circle_obj	file:
magnitude	src/py/py_image.c	/^    mp_obj_t x, y, w, h, magnitude;$/;"	m	struct:py_rect_obj	file:
magnitude	src/py/py_image.c	/^    mp_obj_t x1, y1, x2, y2, length, magnitude, theta, rho;$/;"	m	struct:py_line_obj	file:
main	src/img/apriltag.c	/^int main(int argc, char *argv[])$/;"	f
main	test/test.c	/^int main(int argc,char * argv[])$/;"	f
main	zbar/binarize.c	/^int main(int _argc,char **_argv){$/;"	f
main	zbar/rs.c	/^int main(void){$/;"	f
main	zbar/util.c	/^int main(void){$/;"	f
make_offsets	src/img/fast.c	/^static void make_offsets(int pixel[], int row_stride)$/;"	f	file:
malloc	src/img/apriltag.c	49;"	d	file:
malloc	src/img/dmtx.c	20;"	d	file:
malloc	src/img/lsd.c	22;"	d	file:
malloc	src/img/zbar.c	18;"	d	file:
mappingCols	src/img/dmtx.c	/^   int             mappingCols;   \/* Number of data columns in symbol *\/$/;"	m	struct:DmtxRegion_struct	file:
mappingRows	src/img/dmtx.c	/^   int             mappingRows;   \/* Number of data rows in symbol *\/$/;"	m	struct:DmtxRegion_struct	file:
mark	src/fb_alloc.c	/^    uint8_t mark;$/;"	m	struct:__anon1	file:
mask	src/img/include/imlib.h	/^    uint8_t version, ecc_level, mask, data_type;$/;"	m	struct:find_qrcodes_list_lnk_data
mask	src/img/mathop.c	/^    image_t *mask;$/;"	m	struct:imlib_blend_line_op_state	file:
mask	src/img/mathop.c	/^    image_t *mask;$/;"	m	struct:imlib_div_line_op_state	file:
mask	src/img/mathop.c	/^    image_t *mask;$/;"	m	struct:imlib_mul_line_op_state	file:
mask	src/img/mathop.c	/^    image_t *mask;$/;"	m	struct:imlib_replace_line_op_state	file:
mask	src/img/mathop.c	/^    image_t *mask;$/;"	m	struct:imlib_sub_line_op_state	file:
mask	src/img/qrcode.c	/^    int         mask;$/;"	m	struct:quirc_data	file:
mask	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;$/;"	m	struct:py_qrcode_obj	file:
mask_bit	src/img/qrcode.c	/^static int mask_bit(int mask, int i, int j)$/;"	f	file:
mat33_chol	src/img/apriltag.c	/^static inline void mat33_chol(const double *A,$/;"	f	file:
mat33_lower_tri_inv	src/img/apriltag.c	/^static inline void mat33_lower_tri_inv(const double *A,$/;"	f	file:
mat33_sym_solve	src/img/apriltag.c	/^static inline void mat33_sym_solve(const double *A,$/;"	f	file:
match	src/py/py_image.c	/^    mp_obj_t match;$/;"	m	struct:_py_kptmatch_obj_t	file:
match_segment	src/img/zbar.c	/^match_segment (zbar_decoder_t *dcode,$/;"	f	file:
match_segment_exp	src/img/zbar.c	/^match_segment_exp (zbar_decoder_t *dcode,$/;"	f	file:
matched	src/img/include/imlib.h	/^    uint16_t matched;$/;"	m	struct:kp
matd_add	src/img/apriltag.c	/^matd_t *matd_add(const matd_t *a, const matd_t *b)$/;"	f
matd_add_inplace	src/img/apriltag.c	/^void matd_add_inplace(matd_t *a, const matd_t *b)$/;"	f
matd_chol	src/img/apriltag.c	/^matd_chol_t *matd_chol(matd_t *A)$/;"	f
matd_chol_destroy	src/img/apriltag.c	/^void matd_chol_destroy(matd_chol_t *chol)$/;"	f
matd_chol_inverse	src/img/apriltag.c	/^matd_t *matd_chol_inverse(matd_t *a)$/;"	f
matd_chol_solve	src/img/apriltag.c	/^matd_t *matd_chol_solve(const matd_chol_t *chol, const matd_t *b)$/;"	f
matd_chol_t	src/img/apriltag.c	/^} __attribute__((aligned(8)))matd_chol_t;$/;"	t	typeref:struct:__anon8	file:
matd_copy	src/img/apriltag.c	/^matd_t *matd_copy(const matd_t *m)$/;"	f
matd_create	src/img/apriltag.c	/^matd_t *matd_create(int rows, int cols)$/;"	f
matd_create_data	src/img/apriltag.c	/^matd_t *matd_create_data(int rows, int cols, const TYPE *data)$/;"	f
matd_create_dataf	src/img/apriltag.c	/^matd_t *matd_create_dataf(int rows, int cols, const float *data)$/;"	f
matd_create_scalar	src/img/apriltag.c	/^matd_t *matd_create_scalar(TYPE v)$/;"	f
matd_crossproduct	src/img/apriltag.c	/^matd_t *matd_crossproduct(const matd_t *a, const matd_t *b)$/;"	f
matd_destroy	src/img/apriltag.c	/^void matd_destroy(matd_t *m)$/;"	f
matd_det	src/img/apriltag.c	/^double matd_det(const matd_t *a)$/;"	f
matd_det_general	src/img/apriltag.c	/^double matd_det_general(const matd_t *a)$/;"	f	file:
matd_err_inf	src/img/apriltag.c	/^TYPE matd_err_inf(const matd_t *a, const matd_t *b)$/;"	f
matd_get	src/img/apriltag.c	/^TYPE matd_get(const matd_t *m, int row, int col)$/;"	f
matd_get_scalar	src/img/apriltag.c	/^TYPE matd_get_scalar(const matd_t *m)$/;"	f
matd_identity	src/img/apriltag.c	/^matd_t *matd_identity(int dim)$/;"	f
matd_inverse	src/img/apriltag.c	/^matd_t *matd_inverse(const matd_t *x)$/;"	f
matd_is_scalar	src/img/apriltag.c	/^static inline int matd_is_scalar(const matd_t *a)$/;"	f	file:
matd_is_vector	src/img/apriltag.c	/^static inline int matd_is_vector(const matd_t *a)$/;"	f	file:
matd_is_vector_len	src/img/apriltag.c	/^static inline int matd_is_vector_len(const matd_t *a, int len)$/;"	f	file:
matd_ltransposetriangle_solve	src/img/apriltag.c	/^void matd_ltransposetriangle_solve(matd_t *u, const TYPE *b, TYPE *x)$/;"	f
matd_ltriangle_solve	src/img/apriltag.c	/^void matd_ltriangle_solve(matd_t *L, const TYPE *b, TYPE *x)$/;"	f
matd_max	src/img/apriltag.c	/^double matd_max(matd_t *m)$/;"	f
matd_multiply	src/img/apriltag.c	/^matd_t *matd_multiply(const matd_t *a, const matd_t *b)$/;"	f
matd_op	src/img/apriltag.c	/^matd_t *matd_op(const char *expr, ...)$/;"	f
matd_op_gobble_right	src/img/apriltag.c	/^static inline matd_t *matd_op_gobble_right(const char *expr, int *pos, matd_t *acc, matd_t **garb, int *garbpos)$/;"	f	file:
matd_op_recurse	src/img/apriltag.c	/^static matd_t *matd_op_recurse(const char *expr, int *pos, matd_t *acc, matd_t **args, int *argpos,$/;"	f	file:
matd_plu	src/img/apriltag.c	/^matd_plu_t *matd_plu(const matd_t *a)$/;"	f
matd_plu_destroy	src/img/apriltag.c	/^void matd_plu_destroy(matd_plu_t *mlu)$/;"	f
matd_plu_det	src/img/apriltag.c	/^double matd_plu_det(const matd_plu_t *mlu)$/;"	f
matd_plu_l	src/img/apriltag.c	/^matd_t *matd_plu_l(const matd_plu_t *mlu)$/;"	f
matd_plu_p	src/img/apriltag.c	/^matd_t *matd_plu_p(const matd_plu_t *mlu)$/;"	f
matd_plu_solve	src/img/apriltag.c	/^matd_t *matd_plu_solve(const matd_plu_t *mlu, const matd_t *b)$/;"	f
matd_plu_t	src/img/apriltag.c	/^} __attribute__((aligned(8)))matd_plu_t;$/;"	t	typeref:struct:__anon7	file:
matd_plu_u	src/img/apriltag.c	/^matd_t *matd_plu_u(const matd_plu_t *mlu)$/;"	f
matd_print	src/img/apriltag.c	/^void matd_print(const matd_t *m, const char *fmt)$/;"	f
matd_print_transpose	src/img/apriltag.c	/^void matd_print_transpose(const matd_t *m, const char *fmt)$/;"	f
matd_put	src/img/apriltag.c	/^void matd_put(matd_t *m, int row, int col, TYPE value)$/;"	f
matd_put_scalar	src/img/apriltag.c	/^void matd_put_scalar(matd_t *m, TYPE value)$/;"	f
matd_scale	src/img/apriltag.c	/^matd_t *matd_scale(const matd_t *a, double s)$/;"	f
matd_scale_inplace	src/img/apriltag.c	/^void matd_scale_inplace(matd_t *a, double s)$/;"	f
matd_select	src/img/apriltag.c	/^matd_t *matd_select(const matd_t * a, int r0, int r1, int c0, int c1)$/;"	f
matd_set_data	src/img/apriltag.c	/^static inline void matd_set_data(matd_t *m, const double *data)$/;"	f	file:
matd_solve	src/img/apriltag.c	/^matd_t *matd_solve(matd_t *A, matd_t *b)$/;"	f
matd_subtract	src/img/apriltag.c	/^matd_t *matd_subtract(const matd_t *a, const matd_t *b)$/;"	f
matd_subtract_inplace	src/img/apriltag.c	/^void matd_subtract_inplace(matd_t *a, const matd_t *b)$/;"	f
matd_svd	src/img/apriltag.c	/^matd_svd_t matd_svd(matd_t *A)$/;"	f
matd_svd_flags	src/img/apriltag.c	/^matd_svd_t matd_svd_flags(matd_t *A, int flags)$/;"	f
matd_svd_t	src/img/apriltag.c	/^} __attribute__((aligned(8)))matd_svd_t;$/;"	t	typeref:struct:__anon6	file:
matd_svd_tall	src/img/apriltag.c	/^static matd_svd_t matd_svd_tall(matd_t *A, int flags)$/;"	f	file:
matd_t	src/img/apriltag.c	/^} __attribute__((aligned(8)))matd_t;$/;"	t	typeref:struct:__anon5	file:
matd_transpose	src/img/apriltag.c	/^matd_t *matd_transpose(const matd_t *a)$/;"	f
matd_utriangle_solve	src/img/apriltag.c	/^void matd_utriangle_solve(matd_t *u, const TYPE *b, TYPE *x)$/;"	f
matd_vec_dist	src/img/apriltag.c	/^double matd_vec_dist(const matd_t *a, const matd_t *b)$/;"	f
matd_vec_dist_n	src/img/apriltag.c	/^double matd_vec_dist_n(const matd_t *a, const matd_t *b, int n)$/;"	f
matd_vec_dot_product	src/img/apriltag.c	/^double matd_vec_dot_product(const matd_t *a, const matd_t *b)$/;"	f
matd_vec_mag	src/img/apriltag.c	/^double matd_vec_mag(const matd_t *a)$/;"	f
matd_vec_normalize	src/img/apriltag.c	/^matd_t *matd_vec_normalize(const matd_t *a)$/;"	f
max	src/img/apriltag.c	818;"	d	file:
max	src/img/dmtx.c	613;"	d	file:
max	src/img/dmtx.c	614;"	d	file:
max	src/img/picojpeg_util.c	24;"	d	file:
max	src/img/selective_search.c	/^inline static int max (int a, int b) { return (a > b) ? a : b; }$/;"	f	file:
max	src/py/py_image.c	/^    mp_obj_t avg, std, min, max;$/;"	m	struct:py_similarity_obj	file:
max	src/py/py_image.c	/^static float max(uint8_t* data, uint16_t x, uint16_t y)$/;"	f	file:
maxExtent	src/img/dmtx.c	/^   int             maxExtent;     \/* Size of bounding grid region (2^N - 1) *\/$/;"	m	struct:DmtxScanGrid_struct	file:
max_err	src/img/picojpeg_util.c	/^   double max_err;$/;"	m	struct:image_compare_results_tag	file:
max_idx	src/img/apriltag.c	/^static inline int max_idx(const matd_t *A, int row, int maxcol)$/;"	f	file:
max_line_fit_mse	src/img/apriltag.c	/^    float max_line_fit_mse;$/;"	m	struct:apriltag_quad_thresh_params	file:
max_nmaxima	src/img/apriltag.c	/^    int max_nmaxima;$/;"	m	struct:apriltag_quad_thresh_params	file:
max_size	src/img/lsd.c	/^  unsigned int max_size;$/;"	m	struct:ntuple_list_s	file:
maxf	src/img/selective_search.c	/^inline static float maxf (float a, float b) { return (a > b) ? a : b; }$/;"	f	file:
mcu_row	src/img/jpeg.c	/^    int mcu_row;$/;"	m	struct:_jpeg_enc	file:
mcu_size	src/img/jpeg.c	/^    int mcu_size;$/;"	m	struct:_jpeg_enc	file:
mcubuf	src/img/jpeg.c	/^static uint8_t mcubuf[512];$/;"	v	file:
mean	src/img/filter.c	/^    int mean;$/;"	m	struct:imlib_cartoon_filter_fill_state	file:
mean	src/img/picojpeg_util.c	/^   double mean;$/;"	m	struct:image_compare_results_tag	file:
mean_squared	src/img/picojpeg_util.c	/^   double mean_squared;$/;"	m	struct:image_compare_results_tag	file:
measure_timing_pattern	src/img/qrcode.c	/^static int measure_timing_pattern(struct quirc *q, int index)$/;"	f	file:
med3	src/img/qsort.c	/^static __inline char *med3(char *a, char *b, char *c, int (*cmp)(const void *, const void *))$/;"	f	file:
merge_alot	src/img/line.c	/^void merge_alot(list_t *out, int threshold, int theta_threshold)$/;"	f
merge_line	src/img/line.c	/^static bool merge_line(line_t *big, line_t *small, unsigned int threshold)$/;"	f	file:
merge_segment	src/img/zbar.c	/^merge_segment (databar_decoder_t *db,$/;"	f	file:
min	src/img/apriltag.c	819;"	d	file:
min	src/img/dmtx.c	610;"	d	file:
min	src/img/dmtx.c	611;"	d	file:
min	src/img/picojpeg_util.c	27;"	d	file:
min	src/img/qsort.c	31;"	d	file:
min	src/img/selective_search.c	/^inline static int min (int a, int b) { return (a < b) ? a : b; }$/;"	f	file:
min	src/py/py_image.c	/^    mp_obj_t avg, std, min, max;$/;"	m	struct:py_similarity_obj	file:
min	src/py/py_image.c	/^static float min(uint8_t* data, uint16_t x, uint16_t y)$/;"	f	file:
minExtent	src/img/dmtx.c	/^   int             minExtent;     \/* Smallest cross size used in scan *\/$/;"	m	struct:DmtxScanGrid_struct	file:
min_cluster_pixels	src/img/apriltag.c	/^    int min_cluster_pixels;$/;"	m	struct:apriltag_quad_thresh_params	file:
min_white_black_diff	src/img/apriltag.c	/^    int min_white_black_diff;$/;"	m	struct:apriltag_quad_thresh_params	file:
minf	src/img/selective_search.c	/^inline static float minf (float a, float b) { return (a < b) ? a : b; }$/;"	f	file:
mirror	src/py/py_lcd.c	/^static bool mirror = false;$/;"	v	file:
mjpeg_add_frame	src/img/mjpeg.c	/^void mjpeg_add_frame(mp_obj_t fp, uint32_t *frames, uint32_t *bytes, image_t *img, int quality)$/;"	f
mjpeg_close	src/img/mjpeg.c	/^void mjpeg_close(mp_obj_t fp, uint32_t *frames, uint32_t *bytes, float fps)$/;"	f
mjpeg_module	src/py/py_mjpeg.c	/^const mp_obj_module_t mjpeg_module = {$/;"	v
mjpeg_open	src/img/mjpeg.c	/^void mjpeg_open(mp_obj_t fp, int width, int height)$/;"	f
mod	src/img/mathop.c	/^    bool invert, mod;$/;"	m	struct:imlib_div_line_op_state	file:
mod2pi	src/img/apriltag.c	/^static inline double mod2pi(double vin)$/;"	f	file:
mod2pi_positive	src/img/apriltag.c	/^static inline double mod2pi_positive(double vin)$/;"	f	file:
mod2pi_ref	src/img/apriltag.c	/^static inline double mod2pi_ref(double ref, double vin)$/;"	f	file:
mod360	src/img/apriltag.c	/^static inline double mod360(double vin)$/;"	f	file:
mod360_positive	src/img/apriltag.c	/^static inline double mod360_positive(double vin)$/;"	f	file:
mod_str	zbar/error.c	/^static const char *  mod_str[] = {$/;"	v	file:
mode	zbar/qrdec.h	/^  qr_mode mode;$/;"	m	struct:qr_code_data_entry
modifiers	src/img/zbar.c	/^    unsigned int modifiers;     \/* symbology modifier bitmask *\/$/;"	m	struct:zbar_symbol_s	file:
modifiers	src/img/zbar.c	/^    unsigned modifiers;                 \/* symbology modifier *\/$/;"	m	struct:zbar_decoder_s	file:
module	zbar/error.h	/^    errmodule_t module;         \/* reporting module *\/$/;"	m	struct:errinfo_s
movedelta	src/img/zbar.c	2124;"	d	file:
movedelta	zbar/img_scanner.c	593;"	d	file:
mp_const_ide_interrupt	src/ide_dbg.c	/^static mp_obj_t mp_const_ide_interrupt = (mp_obj_t)(&ide_exception);$/;"	v	file:
mp_obj_get_int	test/python_module/test.c	/^int mp_obj_get_int(mp_obj_t O)$/;"	f
mp_obj_new_int	test/python_module/test.c	34;"	d	file:
mp_obj_new_tuple	test/python_module/test.c	/^PyObject* mp_obj_new_tuple(size_t n, const mp_obj_t *items)$/;"	f
mp_obj_t	src/img/include/imlib.h	/^typedef void *mp_obj_t;$/;"	t
mp_obj_t	test/python_module/test.c	33;"	d	file:
ms	src/py/py_image.c	/^    uint32_t ms;$/;"	m	struct:py_imagereader_obj	file:
ms	src/py/py_image.c	/^    uint32_t ms;$/;"	m	struct:py_imagewriter_obj	file:
mt9d111_get_exposure_us	src/mt9d111.c	/^static int mt9d111_get_exposure_us(sensor_t *sensor, int *exposure_us)$/;"	f	file:
mt9d111_get_gain_db	src/mt9d111.c	/^static int mt9d111_get_gain_db(sensor_t *sensor, float *gain_db)$/;"	f	file:
mt9d111_get_rgb_gain_db	src/mt9d111.c	/^static int mt9d111_get_rgb_gain_db(sensor_t *sensor, float *r_gain_db, float *g_gain_db, float *b_gain_db)$/;"	f	file:
mt9d111_init	src/mt9d111.c	/^int mt9d111_init(sensor_t *sensor)$/;"	f
mt9d111_read_id	src/mt9d111.c	/^uint16_t mt9d111_read_id(i2c_device_number_t extern_i2c_dev_tmp)$/;"	f
mt9d111_read_reg	src/mt9d111.c	/^static int mt9d111_read_reg(sensor_t *sensor, uint8_t reg_addr)$/;"	f	file:
mt9d111_reset	src/mt9d111.c	/^static int mt9d111_reset(sensor_t *sensor)$/;"	f	file:
mt9d111_set_auto_exposure	src/mt9d111.c	/^static int mt9d111_set_auto_exposure(sensor_t *sensor, int enable, int exposure_us)$/;"	f	file:
mt9d111_set_auto_gain	src/mt9d111.c	/^static int mt9d111_set_auto_gain(sensor_t *sensor, int enable, float gain_db, float gain_db_ceiling)$/;"	f	file:
mt9d111_set_auto_whitebal	src/mt9d111.c	/^static int mt9d111_set_auto_whitebal(sensor_t *sensor, int enable, float r_gain_db, float g_gain_db, float b_gain_db)$/;"	f	file:
mt9d111_set_brightness	src/mt9d111.c	/^static int mt9d111_set_brightness(sensor_t *sensor, int level)$/;"	f	file:
mt9d111_set_colorbar	src/mt9d111.c	/^static int mt9d111_set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
mt9d111_set_contrast	src/mt9d111.c	/^static int mt9d111_set_contrast(sensor_t *sensor, int level)$/;"	f	file:
mt9d111_set_framerate	src/mt9d111.c	/^static int mt9d111_set_framerate(sensor_t *sensor, framerate_t framerate)$/;"	f	file:
mt9d111_set_framesize	src/mt9d111.c	/^static int mt9d111_set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
mt9d111_set_gainceiling	src/mt9d111.c	/^static int mt9d111_set_gainceiling(sensor_t *sensor, gainceiling_t gainceiling)$/;"	f	file:
mt9d111_set_hmirror	src/mt9d111.c	/^static int mt9d111_set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
mt9d111_set_pixformat	src/mt9d111.c	/^static int mt9d111_set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
mt9d111_set_quality	src/mt9d111.c	/^static int mt9d111_set_quality(sensor_t *sensor, int qs)$/;"	f	file:
mt9d111_set_saturation	src/mt9d111.c	/^static int mt9d111_set_saturation(sensor_t *sensor, int level)$/;"	f	file:
mt9d111_set_vflip	src/mt9d111.c	/^static int mt9d111_set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
mt9d111_write_reg	src/mt9d111.c	/^static int mt9d111_write_reg(sensor_t *sensor, uint8_t reg_addr, uint16_t reg_data)$/;"	f	file:
mt9d11_read	src/mt9d111.c	/^static uint16_t mt9d11_read(i2c_device_number_t i2c_dev_tmp, uint8_t reg)$/;"	f	file:
mt9d11_write	src/mt9d111.c	/^static int mt9d11_write(i2c_device_number_t i2c_dev_tmp, uint8_t reg, uint16_t val)$/;"	f	file:
mutex_init	src/mutex.c	/^void mutex_init(mutex_t *mutex)$/;"	f
mutex_lock	src/mutex.c	/^void mutex_lock(mutex_t *mutex, uint32_t tid)$/;"	f
mutex_t	src/include/mutex.h	/^} mutex_t;$/;"	t	typeref:struct:__anon47
mutex_try_lock	src/mutex.c	/^int mutex_try_lock(mutex_t *mutex, uint32_t tid)$/;"	f
mutex_unlock	src/mutex.c	/^void mutex_unlock(mutex_t *mutex, uint32_t tid)$/;"	f
mw_image_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) mw_image_t;$/;"	t	typeref:struct:__anon28
my_methods	test/python_module/test.c	/^static PyMethodDef my_methods[] = {$/;"	v	file:
mymodule	test/python_module/test.c	/^static struct PyModuleDef mymodule = {$/;"	v	typeref:struct:PyModuleDef	file:
n	src/img/qrcode.c	/^    struct neighbour    n[QUIRC_MAX_CAPSTONES];$/;"	m	struct:neighbour_list	typeref:struct:neighbour_list::neighbour	file:
n	zbar/isaac.h	/^  unsigned n;$/;"	m	struct:isaac_ctx
n_features	src/img/include/imlib.h	/^    int n_features;                 \/\/ Number of features in the cascade.$/;"	m	struct:cascade
n_rectangles	src/img/include/imlib.h	/^    int n_rectangles;               \/\/ Number of rectangles in the cascade.$/;"	m	struct:cascade
n_stages	src/img/include/imlib.h	/^    int n_stages;                   \/\/ Number of stages in the cascade.$/;"	m	struct:cascade
name	pybind_test/whjy.h	/^    string name;  $/;"	m	struct:student
ncells	zbar/qrdec.c	/^  int             ncells;$/;"	m	struct:qr_sampling_grid	file:
ncodes	src/img/apriltag.c	/^    uint32_t ncodes;$/;"	m	struct:apriltag_family	file:
ncols	src/img/apriltag.c	/^    unsigned int nrows, ncols;$/;"	m	struct:__anon5	file:
nedge_pts	zbar/qrdec.c	/^  int                nedge_pts;$/;"	m	struct:qr_finder_center	file:
nedge_pts	zbar/qrdec.c	/^  int                nedge_pts[4];$/;"	m	struct:qr_finder	file:
nedges	src/img/apriltag.c	/^    uint32_t nedges;$/;"	m	struct:apriltag_detector	file:
neighbor	src/img/dmtx.c	/^   unsigned char   neighbor;$/;"	m	struct:DmtxFollow_struct	file:
neighbour	src/img/qrcode.c	/^struct neighbour {$/;"	s	file:
neighbour_list	src/img/qrcode.c	/^struct neighbour_list {$/;"	s	file:
nentries	src/img/apriltag.c	/^    int nentries;$/;"	m	struct:quick_decode	file:
nentries	zbar/qrdec.h	/^  int                 nentries;$/;"	m	struct:qr_code_data
new_image_char	src/img/lsd.c	/^static image_char new_image_char(unsigned int xsize, unsigned int ysize)$/;"	f	file:
new_image_char_ini	src/img/lsd.c	/^static image_char new_image_char_ini( unsigned int xsize, unsigned int ysize,$/;"	f	file:
new_image_char_ptr	src/img/lsd.c	/^static image_char new_image_char_ptr( unsigned int xsize,$/;"	f	file:
new_image_double	src/img/lsd.c	/^static image_double new_image_double(unsigned int xsize, unsigned int ysize)$/;"	f	file:
new_image_double_ptr	src/img/lsd.c	/^static image_double new_image_double_ptr( unsigned int xsize,$/;"	f	file:
new_image_int	src/img/lsd.c	/^static image_int new_image_int(unsigned int xsize, unsigned int ysize)$/;"	f	file:
new_image_int_ini	src/img/lsd.c	/^static image_int new_image_int_ini( unsigned int xsize, unsigned int ysize,$/;"	f	file:
new_ntuple_list	src/img/lsd.c	/^static ntuple_list new_ntuple_list(unsigned int dim)$/;"	f	file:
next	src/img/apriltag.c	/^    struct uint32_zarray_entry *next;$/;"	m	struct:uint32_zarray_entry	typeref:struct:uint32_zarray_entry::	file:
next	src/img/lsd.c	/^  struct coorlist * next;$/;"	m	struct:coorlist	typeref:struct:coorlist::	file:
next	src/img/zbar.c	/^    zbar_symbol_t *next;        \/* linked list of results (or siblings) *\/$/;"	m	struct:zbar_symbol_s	file:
next	src/umm_malloc.c	/^  unsigned short int next;$/;"	m	struct:umm_ptr_t	file:
next	zbar/image.h	/^    zbar_image_t *next;         \/* internal image lists *\/$/;"	m	struct:zbar_image_s
next	zbar/symbol.h	/^    zbar_symbol_t *next;        \/* linked list of results (or siblings) *\/$/;"	m	struct:zbar_symbol_s
nextMarker	src/img/picojpeg.c	/^static uint8 nextMarker(void)$/;"	f	file:
next_ptr	src/img/include/collections.h	/^    struct list_lnk *next_ptr, *prev_ptr;$/;"	m	struct:list_lnk	typeref:struct:list_lnk::
nfa	src/img/lsd.c	/^static double nfa(int n, int k, double p, double logNT)$/;"	f	file:
nihao	test/test.c	/^uint8_t *nihao(void)$/;"	f
ninliers	zbar/qrdec.c	/^  int                ninliers[4];$/;"	m	struct:qr_finder	file:
nlines	zbar/qrdec.c	/^    int nlines, clines;$/;"	m	struct:qr_finder_lines	file:
nlines	zbar/qrdec.c	/^  int              nlines;$/;"	m	struct:qr_finder_cluster	file:
nonmax_suppression	src/img/agast.c	/^static void nonmax_suppression(corner_t *corners, int num_corners, array_t *keypoints)$/;"	f	file:
nonmax_suppression	src/img/fast.c	/^static void nonmax_suppression(corner_t *corners, int num_corners, array_t *keypoints)$/;"	f	file:
normalized	src/py/py_image.c	/^    bool normalized;$/;"	m	struct:_py_kp_obj_t	file:
npts	src/img/zbar.c	/^    unsigned npts;              \/* number of points in location polygon *\/$/;"	m	struct:zbar_symbol_s	file:
npts	zbar/symbol.h	/^    unsigned npts;              \/* number of points in location polygon *\/$/;"	m	struct:zbar_symbol_s
nqrdata	zbar/qrdec.h	/^  int           nqrdata;$/;"	m	struct:qr_code_data_list
nquads	src/img/apriltag.c	/^    uint32_t nquads;$/;"	m	struct:apriltag_detector	file:
nrows	src/img/apriltag.c	/^    unsigned int nrows, ncols;$/;"	m	struct:__anon5	file:
ns	src/img/qrcode.c	/^    uint8_t ns; \/* Number of small blocks *\/$/;"	m	struct:quirc_rs_params	file:
nsegments	src/img/apriltag.c	/^    uint32_t nsegments;$/;"	m	struct:apriltag_detector	file:
nsyms	src/img/zbar.c	/^    int nsyms;                  \/* number of filtered symbols *\/$/;"	m	struct:zbar_symbol_set_s	file:
nsyms	src/img/zbar.c	/^    int nsyms;$/;"	m	struct:recycle_bucket_s	file:
nsyms	zbar/img_scanner.c	/^    int nsyms;$/;"	m	struct:recycle_bucket_s	file:
nsyms	zbar/symbol.h	/^    int nsyms;                  \/* number of filtered symbols *\/$/;"	m	struct:zbar_symbol_set_s
ntuple_list	src/img/lsd.c	/^} * __attribute__((aligned(8)))ntuple_list;$/;"	t	typeref:struct:ntuple_list_s	file:
ntuple_list_s	src/img/lsd.c	/^typedef struct ntuple_list_s$/;"	s	file:
num	src/img/selective_search.c	/^    int num;$/;"	m	struct:__anon42	file:
num_capstones	src/img/qrcode.c	/^    int                     num_capstones;$/;"	m	struct:quirc	file:
num_grids	src/img/qrcode.c	/^    int                     num_grids;$/;"	m	struct:quirc	file:
num_rectangles_array	src/img/include/imlib.h	/^    int8_t *num_rectangles_array;   \/\/ Number of rectangles per features (1 per feature).$/;"	m	struct:cascade
num_regions	src/img/qrcode.c	/^    int                     num_regions;$/;"	m	struct:quirc	file:
numeric_tuple	src/img/qrcode.c	/^static int numeric_tuple(struct quirc_data *data,$/;"	f	file:
o	zbar/qrdec.c	/^  qr_point           o;$/;"	m	struct:qr_finder	file:
octave	src/img/include/imlib.h	/^    uint16_t octave;$/;"	m	struct:kp
offColor	src/img/dmtx.c	/^   int             offColor;      \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
omv_init	src/omv.c	/^bool omv_init()$/;"	f
omv_init_once	src/omv.c	/^bool omv_init_once()$/;"	f
omv_module	src/py/py_omv.c	/^const mp_obj_module_t omv_module = {$/;"	v
onColor	src/img/dmtx.c	/^   int             onColor;       \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
optimize_quad_generic	src/img/apriltag.c	/^double optimize_quad_generic(apriltag_family_t *family, image_u8_t *im, struct quad *quad0,$/;"	f
orb_cluster_dist	src/img/orb.c	/^float orb_cluster_dist(int cx, int cy, void *kp_in)$/;"	f
orb_filter_keypoints	src/img/orb.c	/^int orb_filter_keypoints(array_t *kpts, rectangle_t *r, point_t *c)$/;"	f
orb_find_keypoints	src/img/orb.c	/^array_t *orb_find_keypoints(image_t *img, bool normalized, int threshold,$/;"	f
orb_load_descriptor	src/img/orb.c	/^int orb_load_descriptor(mp_obj_t fp, array_t *kpts)$/;"	f
orb_match_keypoints	src/img/orb.c	/^int orb_match_keypoints(array_t *kpts1, array_t *kpts2, int *match, int threshold, rectangle_t *r, point_t *c, int *angle)$/;"	f
orb_save_descriptor	src/img/orb.c	/^int orb_save_descriptor(mp_obj_t fp, array_t *kpts)$/;"	f
orient	src/img/zbar.c	/^    zbar_orientation_t orient;  \/* coarse orientation *\/$/;"	m	struct:zbar_symbol_s	file:
ostu	src/img/stats.c	/^static int ostu(int bincount, float *bins)$/;"	f	file:
other_lines	src/img/shadow_removal.c	/^    uint16_t *other_lines[imlib_remove_shadows_kernel_size];$/;"	m	struct:imlib_remove_shadows_line_op_state	file:
out_lines	src/img/shadow_removal.c	/^    uint16_t *out_lines[imlib_remove_shadows_kernel_size];$/;"	m	struct:imlib_remove_shadows_line_op_state	file:
out_size	src/img/jpeg.c	/^    int out_size;$/;"	m	struct:_jpeg_enc	file:
output	src/img/dmtx.c	/^   unsigned char  *output;        \/* Pointer to internal storage of decoded output *\/$/;"	m	struct:DmtxMessage_struct	file:
outputIdx	src/img/dmtx.c	/^   int             outputIdx;     \/* Internal index used to store output progress *\/$/;"	m	struct:DmtxMessage_struct	file:
outputSize	src/img/dmtx.c	/^   size_t          outputSize;    \/* Size of buffer used to hold decoded data *\/$/;"	m	struct:DmtxMessage_struct	file:
outward	src/img/dmtx.c	/^   int             outward;$/;"	m	struct:DmtxBresLine_struct	file:
ov2640_default	src/ov2640.c	/^static const uint8_t ov2640_default[][2] = { \/\/k210 $/;"	v	file:
ov2640_init	src/ov2640.c	/^int ov2640_init(sensor_t *sensor)$/;"	f
ov3660_default	src/ov3660.c	/^static const cmd_a16_d8_t ov3660_default[] = { \/\/k210 $/;"	v	file:
ov3660_init	src/ov3660.c	/^int ov3660_init(sensor_t *sensor)$/;"	f
ov5640_init	src/ov5640.c	/^int ov5640_init(sensor_t *sensor)$/;"	f
ov5642_init	src/ov5642.c	/^int ov5642_init(sensor_t *sensor)$/;"	f
ov7740_init	src/ov7740.c	/^int ov7740_init(sensor_t *sensor)$/;"	f
ov7740_sleep	src/ov7740.c	/^static int ov7740_sleep(sensor_t *sensor, int enable)$/;"	f	file:
overflow	src/img/jpeg.c	/^    bool overflow;$/;"	m	struct:__anon34	file:
overflow	src/img/jpeg.c	/^    bool overflow;$/;"	m	struct:_jpeg_enc	file:
p	src/fb_alloc.c	/^    void* p;$/;"	m	struct:__anon1	file:
p	src/img/apriltag.c	/^    double p[2];$/;"	m	struct:__anon9	file:
p	src/img/apriltag.c	/^    double p[4][2];$/;"	m	struct:apriltag_detection	file:
p	src/img/apriltag.c	/^    float p[4][2]; \/\/ corners$/;"	m	struct:quad	file:
p	src/img/dmtx.c	/^   DmtxVector2     p;$/;"	m	struct:DmtxRay2_struct	file:
p	src/img/include/imlib.h	/^    point_t p;$/;"	m	struct:find_circles_list_lnk_data
p	src/img/lsd.c	/^  double p;            \/* probability of a point with angle within 'prec' *\/$/;"	m	struct:rect	file:
p	src/img/qrcode.c	/^    int             p;$/;"	m	struct:galois_field	file:
p	src/img/selective_search.c	/^    uint16_t p;$/;"	m	struct:__anon41	file:
p	zbar/image.h	/^    } p;$/;"	m	struct:zbar_format_def_s	typeref:union:zbar_format_def_s::__anon62
p1	src/img/apriltag.c	/^    double p1[2];$/;"	m	struct:__anon10	file:
p_data_temp	src/ide_dbg.c	/^static uint8_t* p_data_temp = NULL;$/;"	v	file:
pack_fft	src/img/fft.c	/^static void pack_fft(float *in, float *out, int N_pow2)$/;"	f	file:
packorder	zbar/image.h	/^            uint8_t packorder;          \/* channel ordering flags$/;"	m	struct:zbar_format_def_s::__anon62::__anon64
padCount	src/img/dmtx.c	/^   int             padCount;$/;"	m	struct:DmtxMessage_struct	file:
padding	src/img/include/imlib.h	/^    uint16_t capacity, padding;$/;"	m	struct:find_datamatrices_list_lnk_data
padding	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;$/;"	m	struct:py_datamatrix_obj	file:
pair_width	src/img/zbar.c	/^static inline unsigned pair_width (const zbar_decoder_t *dcode,$/;"	f	file:
pair_width	zbar/decoder.h	/^static inline unsigned pair_width (const zbar_decoder_t *dcode,$/;"	f
parent	src/img/apriltag.c	/^    uint16_t parent;$/;"	m	struct:ufrec	file:
parity_decode	src/img/zbar.c	/^static const unsigned char parity_decode[] = {$/;"	v	file:
partial	src/img/zbar.c	/^    unsigned partial : 1;       \/* unpaired partial segment *\/$/;"	m	struct:databar_segment_s	file:
pass	src/img/zbar.c	/^    ean_pass_t pass[4];         \/* state of each parallel decode attempt *\/$/;"	m	struct:ean_decoder_s	file:
payload	src/img/include/imlib.h	/^    char *payload;$/;"	m	struct:find_barcodes_list_lnk_data
payload	src/img/include/imlib.h	/^    char *payload;$/;"	m	struct:find_datamatrices_list_lnk_data
payload	src/img/include/imlib.h	/^    char *payload;$/;"	m	struct:find_qrcodes_list_lnk_data
payload	src/img/qrcode.c	/^    uint8_t     payload[QUIRC_MAX_PAYLOAD];$/;"	m	struct:quirc_data	file:
payload	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;$/;"	m	struct:py_datamatrix_obj	file:
payload	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, type, rotation, quality;$/;"	m	struct:py_barcode_obj	file:
payload	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;$/;"	m	struct:py_qrcode_obj	file:
payload	zbar/qrdec.h	/^  }payload;$/;"	m	struct:qr_code_data_entry	typeref:union:qr_code_data_entry::__anon65
payload_len	src/img/include/imlib.h	/^    size_t payload_len;$/;"	m	struct:find_barcodes_list_lnk_data
payload_len	src/img/include/imlib.h	/^    size_t payload_len;$/;"	m	struct:find_datamatrices_list_lnk_data
payload_len	src/img/include/imlib.h	/^    size_t payload_len;$/;"	m	struct:find_qrcodes_list_lnk_data
payload_len	src/img/qrcode.c	/^    int         payload_len;$/;"	m	struct:quirc_data	file:
pdf417	src/img/zbar.c	/^    pdf417_decoder_t pdf417;            \/* PDF417 decode state *\/$/;"	m	struct:zbar_decoder_s	file:
pdf417	zbar/decoder.h	/^    pdf417_decoder_t pdf417;            \/* PDF417 decode state *\/$/;"	m	struct:zbar_decoder_s
pdf417_decode8	src/img/zbar.c	/^static inline signed short pdf417_decode8 (zbar_decoder_t *dcode)$/;"	f	file:
pdf417_decode_start	src/img/zbar.c	/^static inline signed char pdf417_decode_start(zbar_decoder_t *dcode)$/;"	f	file:
pdf417_decoder_s	src/img/zbar.c	/^typedef struct pdf417_decoder_s {$/;"	s	file:
pdf417_decoder_t	src/img/zbar.c	/^} __attribute__((aligned(8)))pdf417_decoder_t;$/;"	t	typeref:struct:pdf417_decoder_s	file:
pdf417_hash	src/img/zbar.c	/^static const signed short pdf417_hash[PDF417_HASH_MASK + 1] = {$/;"	v	file:
pdf417_reset	src/img/zbar.c	/^static inline void pdf417_reset (pdf417_decoder_t *pdf417)$/;"	f	file:
peak_snr	src/img/picojpeg_util.c	/^   double peak_snr;$/;"	m	struct:image_compare_results_tag	file:
percentile	src/img/include/imlib.h	/^typedef struct percentile {$/;"	s
percentile_t	src/img/include/imlib.h	/^} percentile_t;$/;"	t	typeref:struct:percentile
perror	src/img/dmtx.c	15;"	d	file:
perspective_map	src/img/qrcode.c	/^static void perspective_map(const float *c,$/;"	f	file:
perspective_setup	src/img/qrcode.c	/^static void perspective_setup(float *c,$/;"	f	file:
perspective_unmap	src/img/qrcode.c	/^static void perspective_unmap(const float *c,$/;"	f	file:
picojpeg_util_read	src/img/picojpeg_util.c	/^int picojpeg_util_read(image_t* img, mp_obj_t file, uint8_t* buf, uint32_t buf_len, int max_width, int max_height)$/;"	f
pin_clk	src/sensor.c	/^    uint8_t pin_clk;$/;"	m	struct:sensor_config_t	file:
pin_sda	src/sensor.c	/^    uint8_t pin_sda;$/;"	m	struct:sensor_config_t	file:
piv	src/img/apriltag.c	/^    unsigned int *piv; \/\/ permutation indices$/;"	m	struct:__anon7	file:
pivsign	src/img/apriltag.c	/^    int pivsign; \/\/ either +1 or -1$/;"	m	struct:__anon7	file:
pix_ai	src/img/include/imdefs.h	/^	uint8_t *pix_ai;	\/\/for MAIX AI speed up$/;"	m	struct:image
pix_ai	src/img/include/imdefs.h	/^	uint8_t *pix_ai;	\/\/for MAIX AI speed up$/;"	m	struct:image_py
pix_ai	src/include/framebuffer.h	/^	uint8_t* pix_ai;$/;"	m	struct:framebuffer
pix_ai	src/include/framebuffer.h	/^	uint8_t* pix_ai[SENSOR_BUFFER_NUM];$/;"	m	struct:framebuffer
pix_fill_8uv2	src/img/yuv_tab.c	/^void pix_fill_8uv2(uint16_t* pixels, uint32_t ofs, int8_t* u, int8_t* v)$/;"	f
pix_fill_8y	src/img/yuv_tab.c	/^void pix_fill_8y(uint16_t* pixels, uint32_t ofs, int8_t* y)$/;"	f
pix_fill_8yuv	src/img/yuv_tab.c	/^void pix_fill_8yuv(uint16_t* pixels, uint32_t ofs, int8_t* y, int8_t* u, int8_t* v)$/;"	f
pix_fill_yuv	src/img/yuv_tab.c	/^void pix_fill_yuv(uint32_t idx, int8_t* y, int8_t* u, int8_t* v)$/;"	f
pixel	src/img/fast.c	/^static int pixel[16];$/;"	v	file:
pixelCount	src/img/dmtx.c	/^   int             pixelCount;    \/* Progress (pixel count) within current cross pattern *\/$/;"	m	struct:DmtxScanGrid_struct	file:
pixelPacking	src/img/dmtx.c	/^   int             pixelPacking;$/;"	m	struct:DmtxImage_struct	file:
pixelTotal	src/img/dmtx.c	/^   int             pixelTotal;    \/* Total pixel count within an individual cross path *\/$/;"	m	struct:DmtxScanGrid_struct	file:
pixel_magnitude	src/img/line.c	/^static void pixel_magnitude(image_t *ptr, int x, int y, int *theta, uint32_t *mag)$/;"	f	file:
pixels	src/img/filter.c	/^    int r_acc, g_acc, b_acc, pixels;$/;"	m	struct:imlib_cartoon_filter_mean_state	file:
pixels	src/img/include/imdefs.h	/^        uint8_t *pixels;$/;"	m	union:image::__anon24
pixels	src/img/include/imlib.h	/^    uint32_t pixels;$/;"	m	struct:find_blobs_list_lnk_data
pixels	src/img/qrcode.c	/^    quirc_pixel_t           *pixels;$/;"	m	struct:quirc	file:
pixels	src/include/framebuffer.h	/^	uint8_t* pixels[SENSOR_BUFFER_NUM];$/;"	m	struct:framebuffer
pixels	src/include/framebuffer.h	/^    uint8_t* pixels;$/;"	m	struct:framebuffer
pixels	src/include/framebuffer.h	/^    uint8_t* pixels;$/;"	m	struct:jpegbuffer
pixels	src/py/py_image.c	/^    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count;$/;"	m	struct:py_blob_obj	file:
pixels16	src/img/jpeg.c	/^        uint16_t *pixels16;$/;"	m	union:_jpeg_enc::__anon33	file:
pixels8	src/img/jpeg.c	/^        uint8_t  *pixels8;$/;"	m	union:_jpeg_enc::__anon33	file:
pixels_setup	src/img/qrcode.c	/^static void pixels_setup(struct quirc *q)$/;"	f	file:
pixformat	src/include/sensor.h	/^    pixformat_t pixformat;      \/\/ Pixel format$/;"	m	struct:_sensor
pixformat_t	src/include/sensor.h	/^} pixformat_t;$/;"	t	typeref:enum:__anon48
pjpeg_decode_init	src/img/picojpeg.c	/^unsigned char pjpeg_decode_init(pjpeg_image_info_t *pInfo, pjpeg_need_bytes_callback_t pNeed_bytes_callback, void *pCallback_data, unsigned char reduce)$/;"	f
pjpeg_decode_mcu	src/img/picojpeg.c	/^unsigned char pjpeg_decode_mcu(void)$/;"	f
pjpeg_image_info_t	src/img/include/picojpeg.h	/^} pjpeg_image_info_t;$/;"	t	typeref:struct:__anon32
pjpeg_load_from_file	src/img/picojpeg_util.c	/^uint8 *pjpeg_load_from_file(mp_obj_t file, uint8_t* buf, uint32_t buf_len, int *x, int *y, int *comps, pjpeg_scan_type_t *pScan_type, int reduce, bool rgb565, uint8_t* pixels, int max_width, int max_height, int* err)$/;"	f
pjpeg_need_bytes_callback	src/img/picojpeg_util.c	/^unsigned char pjpeg_need_bytes_callback(unsigned char* pBuf, unsigned char buf_size, unsigned char *pBytes_actually_read, void *pCallback_data)$/;"	f
pjpeg_need_bytes_callback_t	src/img/include/picojpeg.h	/^typedef unsigned char (*pjpeg_need_bytes_callback_t)(unsigned char* pBuf, unsigned char buf_size, unsigned char *pBytes_actually_read, void *pCallback_data);$/;"	t
pjpeg_scan_type_t	src/img/include/picojpeg.h	/^} pjpeg_scan_type_t;$/;"	t	typeref:enum:__anon31
plane	src/img/dmtx.c	/^   int             plane;$/;"	m	struct:DmtxPointFlow_struct	file:
plusmod47	src/img/zbar.c	/^plusmod47 (int acc,$/;"	f	file:
point	src/img/include/imlib.h	/^typedef struct point {$/;"	s
point_alloc	src/img/point.c	/^point_t *point_alloc(int16_t x, int16_t y)$/;"	f
point_copy	src/img/imlib.c	/^void point_copy(point_t *dst, point_t *src)$/;"	f
point_distance	src/img/point.c	/^float point_distance(point_t *p1, point_t *p2)$/;"	f
point_equal	src/img/point.c	/^bool point_equal(point_t *p1, point_t *p2)$/;"	f
point_equal_fast	src/img/imlib.c	/^bool point_equal_fast(point_t *ptr0, point_t *ptr1)$/;"	f
point_fill	src/img/draw.c	/^static void point_fill(image_t *img, int cx, int cy, int r0, int r1, int c)$/;"	f	file:
point_init	src/img/imlib.c	/^void point_init(point_t *ptr, int x, int y)$/;"	f
point_quadrance	src/img/imlib.c	/^int point_quadrance(point_t *ptr0, point_t *ptr1)$/;"	f
point_s	zbar/symbol.h	/^typedef struct point_s {$/;"	s
point_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) point_t;$/;"	t	typeref:struct:point
point_t	zbar/symbol.h	/^} point_t;$/;"	t	typeref:struct:point_s
points	src/img/include/imlib.h	/^    array_t *points;$/;"	m	struct:cluster
polarity	src/img/dmtx.c	/^   int             polarity;      \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
polarity_t	src/include/sensor.h	/^} polarity_t;$/;"	t	typeref:enum:__anon54
poly_add	src/img/qrcode.c	/^static void poly_add(uint8_t *dst, const uint8_t *src, uint8_t c,$/;"	f	file:
poly_eval	src/img/qrcode.c	/^static uint8_t poly_eval(const uint8_t *s, uint8_t x,$/;"	f	file:
polygon_score_data	src/img/qrcode.c	/^struct polygon_score_data {$/;"	s	file:
popcount	src/img/orb.c	/^static inline uint32_t popcount(uint32_t i)$/;"	f	file:
popcount64a	src/img/apriltag.c	/^int popcount64a(uint64_t x)$/;"	f
popcount64b	src/img/apriltag.c	/^int popcount64b(uint64_t x)$/;"	f
popcount64c	src/img/apriltag.c	/^int popcount64c(uint64_t x)$/;"	f
pos	zbar/qrcode.h	/^  qr_point pos;$/;"	m	struct:qr_finder_line
pos	zbar/qrdec.c	/^  qr_point           pos;$/;"	m	struct:qr_finder_center	file:
pos	zbar/qrdec.c	/^  qr_point pos;$/;"	m	struct:qr_finder_edge_pt	file:
postprocess	src/img/zbar.c	/^static inline unsigned char postprocess (zbar_decoder_t *dcode)$/;"	f	file:
postprocess_c	src/img/zbar.c	/^static inline unsigned postprocess_c (zbar_decoder_t *dcode,$/;"	f	file:
pow	src/img/lsd.c	44;"	d	file:
pow2	src/img/include/omv_fft.h	/^    int pow2;$/;"	m	struct:fft1d_controller
ppm_fmt	src/img/include/imlib.h	/^    uint8_t ppm_fmt;$/;"	m	struct:ppm_read_settings
ppm_read	src/img/ppm.c	/^void ppm_read(image_t *img, const char *path)$/;"	f
ppm_read_geometry	src/img/ppm.c	/^void ppm_read_geometry(mp_obj_t fp, image_t *img, const char *path, ppm_read_settings_t *rs)$/;"	f
ppm_read_pixels	src/img/ppm.c	/^void ppm_read_pixels(mp_obj_t fp, image_t *img, int line_start, int line_end, ppm_read_settings_t *rs)$/;"	f
ppm_read_settings	src/img/include/imlib.h	/^typedef struct ppm_read_settings {$/;"	s
ppm_read_settings_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) ppm_read_settings_t;$/;"	t	typeref:struct:ppm_read_settings
ppm_rs	src/img/include/imlib.h	/^        ppm_read_settings_t ppm_rs;$/;"	m	union:img_read_settings::__anon29
ppm_write_subimg	src/img/ppm.c	/^void ppm_write_subimg(image_t *img, const char *path, rectangle_t *r)$/;"	f
prec	src/img/lsd.c	/^  double prec;         \/* tolerance angle *\/$/;"	m	struct:rect	file:
prefer_smaller	src/img/apriltag.c	/^int prefer_smaller(int pref, double q0, double q1)$/;"	f
prepare_complex_input	src/img/fft.c	/^static void prepare_complex_input(float *in, float *out, int N_pow2, int stride)$/;"	f	file:
prepare_real_input	src/img/fft.c	/^static void prepare_real_input(uint8_t *in, int in_len, float *out, int N_pow2)$/;"	f	file:
prepare_real_input_again	src/img/fft.c	/^static void prepare_real_input_again(float *in, int in_len, float *out, int N_pow2)$/;"	f	file:
prev	src/umm_malloc.c	/^  unsigned short int prev;$/;"	m	struct:umm_ptr_t	file:
prev_ptr	src/img/include/collections.h	/^    struct list_lnk *next_ptr, *prev_ptr;$/;"	m	struct:list_lnk	typeref:struct:list_lnk::
printk	test/mf_qr.c	14;"	d	file:
processMarkers	src/img/picojpeg.c	/^static uint8 processMarkers(uint8* pMarker)$/;"	f	file:
processRestart	src/img/picojpeg.c	/^static uint8 processRestart(void)$/;"	f	file:
process_edge	src/img/zbar.c	/^static inline zbar_symbol_type_t process_edge (zbar_scanner_t *scn,$/;"	f	file:
process_edge	zbar/scanner.c	/^static inline zbar_symbol_type_t process_edge (zbar_scanner_t *scn,$/;"	f	file:
project	test/Makefile	/^project=.\/libimg.so$/;"	m
project	zbar/makefile	/^project=.\/libzbar.so$/;"	m
pt	src/img/apriltag.c	/^struct pt$/;"	s	file:
pt_compare_theta	src/img/apriltag.c	/^int pt_compare_theta(const void *_a, const void *_b)$/;"	f
ptr	src/img/dmtx.c	/^   unsigned char  *ptr;$/;"	m	struct:DmtxFollow_struct	file:
ptr	src/img/qrcode.c	/^    int     ptr;$/;"	m	struct:datastream	file:
pts	src/img/zbar.c	/^    zbar_point_t *pts;          \/* list of points in location polygon *\/$/;"	m	struct:zbar_symbol_s	file:
pts	zbar/symbol.h	/^    point_t *pts;               \/* list of points in location polygon *\/$/;"	m	struct:zbar_symbol_s
pts_alloc	src/img/zbar.c	/^    unsigned pts_alloc;         \/* allocation size of pts *\/$/;"	m	struct:zbar_symbol_s	file:
pts_alloc	zbar/symbol.h	/^    unsigned pts_alloc;         \/* allocation size of pts *\/$/;"	m	struct:zbar_symbol_s
ptsort	src/img/apriltag.c	/^static inline void ptsort(struct pt *pts, int sz)$/;"	f	file:
pwdn_pol	src/include/sensor.h	/^    polarity_t pwdn_pol; \/\/ PWDN polarity (TODO move to hw_flags)$/;"	m	struct:_sensor
pxl	src/img/dmtx.c	/^   unsigned char  *pxl;$/;"	m	struct:DmtxImage_struct	file:
py_apriltag_corners	src/py/py_image.c	/^mp_obj_t py_apriltag_corners(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->corners; }$/;"	f
py_apriltag_cx	src/py/py_image.c	/^mp_obj_t py_apriltag_cx(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->cx; }$/;"	f
py_apriltag_cy	src/py/py_image.c	/^mp_obj_t py_apriltag_cy(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->cy; }$/;"	f
py_apriltag_decision_margin	src/py/py_image.c	/^mp_obj_t py_apriltag_decision_margin(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->decision_margin; }$/;"	f
py_apriltag_family	src/py/py_image.c	/^mp_obj_t py_apriltag_family(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->family; }$/;"	f
py_apriltag_goodness	src/py/py_image.c	/^mp_obj_t py_apriltag_goodness(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->goodness; }$/;"	f
py_apriltag_h	src/py/py_image.c	/^mp_obj_t py_apriltag_h(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->h; }$/;"	f
py_apriltag_hamming	src/py/py_image.c	/^mp_obj_t py_apriltag_hamming(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->hamming; }$/;"	f
py_apriltag_id	src/py/py_image.c	/^mp_obj_t py_apriltag_id(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->id; }$/;"	f
py_apriltag_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_apriltag_locals_dict_table[] = {$/;"	v
py_apriltag_obj	src/py/py_image.c	/^typedef struct py_apriltag_obj {$/;"	s	file:
py_apriltag_obj_size	src/py/py_image.c	4720;"	d	file:
py_apriltag_obj_t	src/py/py_image.c	/^} py_apriltag_obj_t;$/;"	t	typeref:struct:py_apriltag_obj	file:
py_apriltag_print	src/py/py_image.c	/^static void py_apriltag_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_apriltag_rect	src/py/py_image.c	/^mp_obj_t py_apriltag_rect(mp_obj_t self_in)$/;"	f
py_apriltag_rotation	src/py/py_image.c	/^mp_obj_t py_apriltag_rotation(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->rotation; }$/;"	f
py_apriltag_subscr	src/py/py_image.c	/^static mp_obj_t py_apriltag_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_apriltag_type	src/py/py_image.c	/^static const mp_obj_type_t py_apriltag_type = {$/;"	v	file:
py_apriltag_w	src/py/py_image.c	/^mp_obj_t py_apriltag_w(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->w; }$/;"	f
py_apriltag_x	src/py/py_image.c	/^mp_obj_t py_apriltag_x(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->x; }$/;"	f
py_apriltag_x_rotation	src/py/py_image.c	/^mp_obj_t py_apriltag_x_rotation(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->x_rotation; }$/;"	f
py_apriltag_x_translation	src/py/py_image.c	/^mp_obj_t py_apriltag_x_translation(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->x_translation; }$/;"	f
py_apriltag_y	src/py/py_image.c	/^mp_obj_t py_apriltag_y(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->y; }$/;"	f
py_apriltag_y_rotation	src/py/py_image.c	/^mp_obj_t py_apriltag_y_rotation(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->y_rotation; }$/;"	f
py_apriltag_y_translation	src/py/py_image.c	/^mp_obj_t py_apriltag_y_translation(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->y_translation; }$/;"	f
py_apriltag_z_rotation	src/py/py_image.c	/^mp_obj_t py_apriltag_z_rotation(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->z_rotation; }$/;"	f
py_apriltag_z_translation	src/py/py_image.c	/^mp_obj_t py_apriltag_z_translation(mp_obj_t self_in) { return ((py_apriltag_obj_t *) self_in)->z_translation; }$/;"	f
py_barcode_corners	src/py/py_image.c	/^mp_obj_t py_barcode_corners(mp_obj_t self_in) { return ((py_barcode_obj_t *) self_in)->corners; }$/;"	f
py_barcode_h	src/py/py_image.c	/^mp_obj_t py_barcode_h(mp_obj_t self_in) { return ((py_barcode_obj_t *) self_in)->h; }$/;"	f
py_barcode_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_barcode_locals_dict_table[] = {$/;"	v
py_barcode_obj	src/py/py_image.c	/^typedef struct py_barcode_obj {$/;"	s	file:
py_barcode_obj_size	src/py/py_image.c	5103;"	d	file:
py_barcode_obj_t	src/py/py_image.c	/^} py_barcode_obj_t;$/;"	t	typeref:struct:py_barcode_obj	file:
py_barcode_payload_fun	src/py/py_image.c	/^mp_obj_t py_barcode_payload_fun(mp_obj_t self_in) { return ((py_barcode_obj_t *) self_in)->payload; }$/;"	f
py_barcode_print	src/py/py_image.c	/^static void py_barcode_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_barcode_quality_fun	src/py/py_image.c	/^mp_obj_t py_barcode_quality_fun(mp_obj_t self_in) { return ((py_barcode_obj_t *) self_in)->quality; }$/;"	f
py_barcode_rect	src/py/py_image.c	/^mp_obj_t py_barcode_rect(mp_obj_t self_in)$/;"	f
py_barcode_rotation_fun	src/py/py_image.c	/^mp_obj_t py_barcode_rotation_fun(mp_obj_t self_in) { return ((py_barcode_obj_t *) self_in)->rotation; }$/;"	f
py_barcode_subscr	src/py/py_image.c	/^static mp_obj_t py_barcode_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_barcode_type	src/py/py_image.c	/^static const mp_obj_type_t py_barcode_type = {$/;"	v	file:
py_barcode_type_fun	src/py/py_image.c	/^mp_obj_t py_barcode_type_fun(mp_obj_t self_in) { return ((py_barcode_obj_t *) self_in)->type; }$/;"	f
py_barcode_w	src/py/py_image.c	/^mp_obj_t py_barcode_w(mp_obj_t self_in) { return ((py_barcode_obj_t *) self_in)->w; }$/;"	f
py_barcode_x	src/py/py_image.c	/^mp_obj_t py_barcode_x(mp_obj_t self_in) { return ((py_barcode_obj_t *) self_in)->x; }$/;"	f
py_barcode_y	src/py/py_image.c	/^mp_obj_t py_barcode_y(mp_obj_t self_in) { return ((py_barcode_obj_t *) self_in)->y; }$/;"	f
py_binocular_sensor_reset	src/py/py_sensor.c	/^static mp_obj_t py_binocular_sensor_reset(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_blob_area	src/py/py_image.c	/^mp_obj_t py_blob_area(mp_obj_t self_in) {$/;"	f
py_blob_code	src/py/py_image.c	/^mp_obj_t py_blob_code(mp_obj_t self_in) { return ((py_blob_obj_t *) self_in)->code; }$/;"	f
py_blob_count	src/py/py_image.c	/^mp_obj_t py_blob_count(mp_obj_t self_in) { return ((py_blob_obj_t *) self_in)->count; }$/;"	f
py_blob_cx	src/py/py_image.c	/^mp_obj_t py_blob_cx(mp_obj_t self_in) { return ((py_blob_obj_t *) self_in)->cx; }$/;"	f
py_blob_cy	src/py/py_image.c	/^mp_obj_t py_blob_cy(mp_obj_t self_in) { return ((py_blob_obj_t *) self_in)->cy; }$/;"	f
py_blob_density	src/py/py_image.c	/^mp_obj_t py_blob_density(mp_obj_t self_in) {$/;"	f
py_blob_h	src/py/py_image.c	/^mp_obj_t py_blob_h(mp_obj_t self_in) { return ((py_blob_obj_t *) self_in)->h; }$/;"	f
py_blob_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_blob_locals_dict_table[] = {$/;"	v
py_blob_obj	src/py/py_image.c	/^typedef struct py_blob_obj {$/;"	s	file:
py_blob_obj_size	src/py/py_image.c	3979;"	d	file:
py_blob_obj_t	src/py/py_image.c	/^} py_blob_obj_t;$/;"	t	typeref:struct:py_blob_obj	file:
py_blob_pixels	src/py/py_image.c	/^mp_obj_t py_blob_pixels(mp_obj_t self_in) { return ((py_blob_obj_t *) self_in)->pixels; }$/;"	f
py_blob_print	src/py/py_image.c	/^static void py_blob_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_blob_rect	src/py/py_image.c	/^mp_obj_t py_blob_rect(mp_obj_t self_in)$/;"	f
py_blob_rotation	src/py/py_image.c	/^mp_obj_t py_blob_rotation(mp_obj_t self_in) { return ((py_blob_obj_t *) self_in)->rotation; }$/;"	f
py_blob_subscr	src/py/py_image.c	/^static mp_obj_t py_blob_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_blob_type	src/py/py_image.c	/^static const mp_obj_type_t py_blob_type = {$/;"	v	file:
py_blob_w	src/py/py_image.c	/^mp_obj_t py_blob_w(mp_obj_t self_in) { return ((py_blob_obj_t *) self_in)->w; }$/;"	f
py_blob_x	src/py/py_image.c	/^mp_obj_t py_blob_x(mp_obj_t self_in) { return ((py_blob_obj_t *) self_in)->x; }$/;"	f
py_blob_y	src/py/py_image.c	/^mp_obj_t py_blob_y(mp_obj_t self_in) { return ((py_blob_obj_t *) self_in)->y; }$/;"	f
py_cascade_cobj	src/py/py_image.c	/^void *py_cascade_cobj(mp_obj_t cascade)$/;"	f
py_cascade_obj_t	src/py/py_image.c	/^} py_cascade_obj_t;$/;"	t	typeref:struct:_py_cascade_obj_t	file:
py_cascade_print	src/py/py_image.c	/^static void py_cascade_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_cascade_type	src/py/py_image.c	/^static const mp_obj_type_t py_cascade_type = {$/;"	v	file:
py_cascade_type	src/py/py_image.c	/^static const mp_obj_type_t py_cascade_type;$/;"	v	file:
py_circle_circle	src/py/py_image.c	/^mp_obj_t py_circle_circle(mp_obj_t self_in)$/;"	f
py_circle_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_circle_locals_dict_table[] = {$/;"	v
py_circle_magnitude	src/py/py_image.c	/^mp_obj_t py_circle_magnitude(mp_obj_t self_in) { return ((py_circle_obj_t *) self_in)->magnitude; }$/;"	f
py_circle_obj	src/py/py_image.c	/^typedef struct py_circle_obj {$/;"	s	file:
py_circle_obj_size	src/py/py_image.c	4297;"	d	file:
py_circle_obj_t	src/py/py_image.c	/^} py_circle_obj_t;$/;"	t	typeref:struct:py_circle_obj	file:
py_circle_print	src/py/py_image.c	/^static void py_circle_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_circle_r	src/py/py_image.c	/^mp_obj_t py_circle_r(mp_obj_t self_in) { return ((py_circle_obj_t *) self_in)->r; }$/;"	f
py_circle_subscr	src/py/py_image.c	/^static mp_obj_t py_circle_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_circle_type	src/py/py_image.c	/^static const mp_obj_type_t py_circle_type = {$/;"	v	file:
py_circle_x	src/py/py_image.c	/^mp_obj_t py_circle_x(mp_obj_t self_in) { return ((py_circle_obj_t *) self_in)->x; }$/;"	f
py_circle_y	src/py/py_image.c	/^mp_obj_t py_circle_y(mp_obj_t self_in) { return ((py_circle_obj_t *) self_in)->y; }$/;"	f
py_datamatrix_capacity	src/py/py_image.c	/^mp_obj_t py_datamatrix_capacity(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->capacity; }$/;"	f
py_datamatrix_columns	src/py/py_image.c	/^mp_obj_t py_datamatrix_columns(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->columns; }$/;"	f
py_datamatrix_corners	src/py/py_image.c	/^mp_obj_t py_datamatrix_corners(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->corners; }$/;"	f
py_datamatrix_h	src/py/py_image.c	/^mp_obj_t py_datamatrix_h(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->h; }$/;"	f
py_datamatrix_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_datamatrix_locals_dict_table[] = {$/;"	v
py_datamatrix_obj	src/py/py_image.c	/^typedef struct py_datamatrix_obj {$/;"	s	file:
py_datamatrix_obj_size	src/py/py_image.c	4943;"	d	file:
py_datamatrix_obj_t	src/py/py_image.c	/^} py_datamatrix_obj_t;$/;"	t	typeref:struct:py_datamatrix_obj	file:
py_datamatrix_padding	src/py/py_image.c	/^mp_obj_t py_datamatrix_padding(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->padding; }$/;"	f
py_datamatrix_payload	src/py/py_image.c	/^mp_obj_t py_datamatrix_payload(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->payload; }$/;"	f
py_datamatrix_print	src/py/py_image.c	/^static void py_datamatrix_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_datamatrix_rect	src/py/py_image.c	/^mp_obj_t py_datamatrix_rect(mp_obj_t self_in)$/;"	f
py_datamatrix_rotation	src/py/py_image.c	/^mp_obj_t py_datamatrix_rotation(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->rotation; }$/;"	f
py_datamatrix_rows	src/py/py_image.c	/^mp_obj_t py_datamatrix_rows(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->rows; }$/;"	f
py_datamatrix_subscr	src/py/py_image.c	/^static mp_obj_t py_datamatrix_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_datamatrix_type	src/py/py_image.c	/^static const mp_obj_type_t py_datamatrix_type = {$/;"	v	file:
py_datamatrix_w	src/py/py_image.c	/^mp_obj_t py_datamatrix_w(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->w; }$/;"	f
py_datamatrix_x	src/py/py_image.c	/^mp_obj_t py_datamatrix_x(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->x; }$/;"	f
py_datamatrix_y	src/py/py_image.c	/^mp_obj_t py_datamatrix_y(mp_obj_t self_in) { return ((py_datamatrix_obj_t *) self_in)->y; }$/;"	f
py_displacement_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_displacement_locals_dict_table[] = {$/;"	v
py_displacement_obj	src/py/py_image.c	/^typedef struct py_displacement_obj {$/;"	s	file:
py_displacement_obj_size	src/py/py_image.c	5249;"	d	file:
py_displacement_obj_t	src/py/py_image.c	/^} py_displacement_obj_t;$/;"	t	typeref:struct:py_displacement_obj	file:
py_displacement_print	src/py/py_image.c	/^static void py_displacement_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_displacement_response	src/py/py_image.c	/^mp_obj_t py_displacement_response(mp_obj_t self_in) { return ((py_displacement_obj_t *) self_in)->response; }$/;"	f
py_displacement_rotation	src/py/py_image.c	/^mp_obj_t py_displacement_rotation(mp_obj_t self_in) { return ((py_displacement_obj_t *) self_in)->rotation; }$/;"	f
py_displacement_scale	src/py/py_image.c	/^mp_obj_t py_displacement_scale(mp_obj_t self_in) { return ((py_displacement_obj_t *) self_in)->scale; }$/;"	f
py_displacement_subscr	src/py/py_image.c	/^static mp_obj_t py_displacement_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_displacement_type	src/py/py_image.c	/^static const mp_obj_type_t py_displacement_type = {$/;"	v	file:
py_displacement_x_translation	src/py/py_image.c	/^mp_obj_t py_displacement_x_translation(mp_obj_t self_in) { return ((py_displacement_obj_t *) self_in)->x_translation; }$/;"	f
py_displacement_y_translation	src/py/py_image.c	/^mp_obj_t py_displacement_y_translation(mp_obj_t self_in) { return ((py_displacement_obj_t *) self_in)->y_translation; }$/;"	f
py_draw_line	test/python_module/image.c	/^py_draw_line(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
py_draw_line	test/python_module/image_new.c	/^py_draw_line(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
py_draw_rectangle	test/python_module/image.c	/^py_draw_rectangle(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
py_draw_rectangle	test/python_module/image_new.c	/^py_draw_rectangle(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
py_find_blobs	test/python_module/image.c	/^py_find_blobs(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
py_find_blobs	test/python_module/image_new.c	/^py_find_blobs(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
py_func_unavailable	src/py/py_helper.c	/^mp_obj_t py_func_unavailable(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_gif_add_frame	src/py/py_gif.c	/^static mp_obj_t py_gif_add_frame(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_gif_close	src/py/py_gif.c	/^static mp_obj_t py_gif_close(mp_obj_t gif_obj)$/;"	f	file:
py_gif_format	src/py/py_gif.c	/^static mp_obj_t py_gif_format(mp_obj_t gif_obj)$/;"	f	file:
py_gif_height	src/py/py_gif.c	/^static mp_obj_t py_gif_height(mp_obj_t gif_obj)$/;"	f	file:
py_gif_loop	src/py/py_gif.c	/^static mp_obj_t py_gif_loop(mp_obj_t gif_obj)$/;"	f	file:
py_gif_obj	src/py/py_gif.c	/^typedef struct py_gif_obj {$/;"	s	file:
py_gif_obj_t	src/py/py_gif.c	/^} py_gif_obj_t;$/;"	t	typeref:struct:py_gif_obj	file:
py_gif_open	src/py/py_gif.c	/^static mp_obj_t py_gif_open(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_gif_print	src/py/py_gif.c	/^static void py_gif_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_gif_size	src/py/py_gif.c	/^static mp_obj_t py_gif_size(mp_obj_t gif_obj)$/;"	f	file:
py_gif_type	src/py/py_gif.c	/^static const mp_obj_type_t py_gif_type = {$/;"	v	file:
py_gif_type	src/py/py_gif.c	/^static const mp_obj_type_t py_gif_type; \/\/ forward declare$/;"	v	file:
py_gif_width	src/py/py_gif.c	/^static mp_obj_t py_gif_width(mp_obj_t gif_obj)$/;"	f	file:
py_helper_arg_to_image_color	src/py/py_helper.c	/^image_t *py_helper_arg_to_image_color(const mp_obj_t arg)$/;"	f
py_helper_arg_to_image_grayscale	src/py/py_helper.c	/^image_t *py_helper_arg_to_image_grayscale(const mp_obj_t arg)$/;"	f
py_helper_arg_to_image_mutable	src/py/py_helper.c	/^image_t *py_helper_arg_to_image_mutable(const mp_obj_t arg)$/;"	f
py_helper_arg_to_image_mutable_bayer	src/py/py_helper.c	/^image_t *py_helper_arg_to_image_mutable_bayer(const mp_obj_t arg)$/;"	f
py_helper_arg_to_ksize	src/py/py_helper.c	/^int py_helper_arg_to_ksize(const mp_obj_t arg)$/;"	f
py_helper_arg_to_thresholds	src/py/py_helper.c	/^void py_helper_arg_to_thresholds(const mp_obj_t arg, list_t *thresholds)$/;"	f
py_helper_consume_array	src/py/py_helper.c	/^uint py_helper_consume_array(size_t n_args, const mp_obj_t *args, uint arg_index, size_t len, const mp_obj_t **items)$/;"	f
py_helper_keyword_color	src/py/py_helper.c	/^int py_helper_keyword_color(image_t *img, uint n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_corner_array	src/py/py_helper.c	/^float *py_helper_keyword_corner_array(uint n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_float	src/py/py_helper.c	/^float py_helper_keyword_float(size_t n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_float_array	src/py/py_helper.c	/^void py_helper_keyword_float_array(size_t n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_int	src/py/py_helper.c	/^int py_helper_keyword_int(size_t n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_int_array	src/py/py_helper.c	/^void py_helper_keyword_int_array(size_t n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_object	src/py/py_helper.c	/^mp_obj_t py_helper_keyword_object(size_t n_args, const mp_obj_t *args, uint arg_index, mp_map_t *kw_args, mp_obj_t kw)$/;"	f
py_helper_keyword_rectangle	src/py/py_helper.c	/^void py_helper_keyword_rectangle(image_t *img, uint n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_rectangle_roi	src/py/py_helper.c	/^void py_helper_keyword_rectangle_roi(image_t *img, uint n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_thresholds	src/py/py_helper.c	/^void py_helper_keyword_thresholds(size_t n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_to_image_mutable	src/py/py_helper.c	/^image_t *py_helper_keyword_to_image_mutable(size_t n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_to_image_mutable_mask	src/py/py_helper.c	/^image_t *py_helper_keyword_to_image_mutable_mask(size_t n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_keyword_xy	src/py/py_helper.c	/^void py_helper_keyword_xy(image_t *img, uint n_args, const mp_obj_t *args, uint arg_index,$/;"	f
py_helper_ksize_to_n	src/py/py_helper.c	/^int py_helper_ksize_to_n(int ksize)$/;"	f
py_histogram_a_bins	src/py/py_image.c	/^mp_obj_t py_histogram_a_bins(mp_obj_t self_in) { return ((py_histogram_obj_t *) self_in)->ABins; }$/;"	f
py_histogram_b_bins	src/py/py_image.c	/^mp_obj_t py_histogram_b_bins(mp_obj_t self_in) { return ((py_histogram_obj_t *) self_in)->BBins; }$/;"	f
py_histogram_bins	src/py/py_image.c	/^mp_obj_t py_histogram_bins(mp_obj_t self_in) { return ((py_histogram_obj_t *) self_in)->LBins; }$/;"	f
py_histogram_get_percentile	src/py/py_image.c	/^mp_obj_t py_histogram_get_percentile(mp_obj_t self_in, mp_obj_t percentile)$/;"	f
py_histogram_get_statistics	src/py/py_image.c	/^mp_obj_t py_histogram_get_statistics(mp_obj_t self_in)$/;"	f
py_histogram_get_threshold	src/py/py_image.c	/^mp_obj_t py_histogram_get_threshold(mp_obj_t self_in)$/;"	f
py_histogram_l_bins	src/py/py_image.c	/^mp_obj_t py_histogram_l_bins(mp_obj_t self_in) { return ((py_histogram_obj_t *) self_in)->LBins; }$/;"	f
py_histogram_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_histogram_locals_dict_table[] = {$/;"	v
py_histogram_obj	src/py/py_image.c	/^typedef struct py_histogram_obj {$/;"	s	file:
py_histogram_obj_size	src/py/py_image.c	3365;"	d	file:
py_histogram_obj_t	src/py/py_image.c	/^} py_histogram_obj_t;$/;"	t	typeref:struct:py_histogram_obj	file:
py_histogram_print	src/py/py_image.c	/^static void py_histogram_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_histogram_subscr	src/py/py_image.c	/^static mp_obj_t py_histogram_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_histogram_type	src/py/py_image.c	/^static const mp_obj_type_t py_histogram_type = {$/;"	v	file:
py_image	src/py/py_image.c	/^mp_obj_t py_image(int w, int h, int bpp, void *pixels)$/;"	f
py_image_GetAffineTransform	src/py/py_image.c	/^mp_obj_t py_image_GetAffineTransform(mp_obj_t src_list, mp_obj_t dst_list)$/;"	f
py_image_add	src/py/py_image.c	/^STATIC mp_obj_t py_image_add(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_ai_to_pix	src/py/py_image.c	/^static mp_obj_t py_image_ai_to_pix(mp_obj_t img_obj)$/;"	f	file:
py_image_b_and	src/py/py_image.c	/^STATIC mp_obj_t py_image_b_and(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_b_nand	src/py/py_image.c	/^STATIC mp_obj_t py_image_b_nand(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_b_nor	src/py/py_image.c	/^STATIC mp_obj_t py_image_b_nor(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_b_or	src/py/py_image.c	/^STATIC mp_obj_t py_image_b_or(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_b_xnor	src/py/py_image.c	/^STATIC mp_obj_t py_image_b_xnor(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_b_xor	src/py/py_image.c	/^STATIC mp_obj_t py_image_b_xor(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_bilateral	src/py/py_image.c	/^STATIC mp_obj_t py_image_bilateral(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_binary	src/py/py_image.c	/^STATIC mp_obj_t py_image_binary(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_black_hat	src/py/py_image.c	/^STATIC mp_obj_t py_image_black_hat(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_blend	src/py/py_image.c	/^STATIC mp_obj_t py_image_blend(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_cartoon	src/py/py_image.c	/^STATIC mp_obj_t py_image_cartoon(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_chrominvar	src/py/py_image.c	/^STATIC mp_obj_t py_image_chrominvar(mp_obj_t img_obj)$/;"	f
py_image_clear	src/py/py_image.c	/^STATIC mp_obj_t py_image_clear(mp_obj_t img_obj)$/;"	f
py_image_close	src/py/py_image.c	/^STATIC mp_obj_t py_image_close(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_cobj	src/py/py_image.c	/^void *py_image_cobj(mp_obj_t img_obj)$/;"	f
py_image_compress	src/py/py_image.c	/^static mp_obj_t py_image_compress(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_compress_for_ide	src/py/py_image.c	/^static mp_obj_t py_image_compress_for_ide(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_compressed	src/py/py_image.c	/^static mp_obj_t py_image_compressed(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_compressed_for_ide	src/py/py_image.c	/^static mp_obj_t py_image_compressed_for_ide(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_conv3	src/py/py_image.c	/^static mp_obj_t py_image_conv3(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_copy	src/py/py_image.c	/^static mp_obj_t py_image_copy(uint n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_copy_int	src/py/py_image.c	/^static mp_obj_t py_image_copy_int(uint n_args, const mp_obj_t *args, mp_map_t *kw_args, bool mode)$/;"	f	file:
py_image_crop	src/py/py_image.c	/^static mp_obj_t py_image_crop(uint n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_cut	src/py/py_image.c	/^static mp_obj_t py_image_cut(size_t n_args, const mp_obj_t *args)$/;"	f	file:
py_image_del	src/py/py_image.c	/^static mp_obj_t py_image_del(mp_obj_t img_obj)$/;"	f	file:
py_image_descriptor_from_roi	src/py/py_image.c	/^int py_image_descriptor_from_roi(image_t *img, const char *path, rectangle_t *roi)$/;"	f
py_image_difference	src/py/py_image.c	/^STATIC mp_obj_t py_image_difference(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_dilate	src/py/py_image.c	/^STATIC mp_obj_t py_image_dilate(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_div	src/py/py_image.c	/^STATIC mp_obj_t py_image_div(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_draw_arrow	src/py/py_image.c	/^STATIC mp_obj_t py_image_draw_arrow(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_draw_circle	src/py/py_image.c	/^STATIC mp_obj_t py_image_draw_circle(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_draw_cross	src/py/py_image.c	/^STATIC mp_obj_t py_image_draw_cross(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_draw_ellipse	src/py/py_image.c	/^STATIC mp_obj_t py_image_draw_ellipse(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_draw_font	src/py/py_image.c	/^STATIC mp_obj_t py_image_draw_font(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_draw_image	src/py/py_image.c	/^STATIC mp_obj_t py_image_draw_image(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_draw_keypoints	src/py/py_image.c	/^STATIC mp_obj_t py_image_draw_keypoints(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_draw_line	src/py/py_image.c	/^STATIC mp_obj_t py_image_draw_line(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_draw_rectangle	src/py/py_image.c	/^STATIC mp_obj_t py_image_draw_rectangle(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_draw_string	src/py/py_image.c	/^STATIC mp_obj_t py_image_draw_string(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_dump_roi	src/py/py_image.c	/^static mp_obj_t py_image_dump_roi(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_erode	src/py/py_image.c	/^STATIC mp_obj_t py_image_erode(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_find_apriltags	src/py/py_image.c	/^static mp_obj_t py_image_find_apriltags(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_barcodes	src/py/py_image.c	/^static mp_obj_t py_image_find_barcodes(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_blobs	src/py/py_image.c	/^static mp_obj_t py_image_find_blobs(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_blobs_merge_cb	src/py/py_image.c	/^static bool py_image_find_blobs_merge_cb(void *fun_obj, find_blobs_list_lnk_data_t *blob0, find_blobs_list_lnk_data_t *blob1)$/;"	f	file:
py_image_find_blobs_threshold_cb	src/py/py_image.c	/^static bool py_image_find_blobs_threshold_cb(void *fun_obj, find_blobs_list_lnk_data_t *blob)$/;"	f	file:
py_image_find_circles	src/py/py_image.c	/^static mp_obj_t py_image_find_circles(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_datamatrices	src/py/py_image.c	/^static mp_obj_t py_image_find_datamatrices(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_displacement	src/py/py_image.c	/^static mp_obj_t py_image_find_displacement(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_domain	src/py/py_image.c	/^static mp_obj_t py_image_find_domain(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_edges	src/py/py_image.c	/^static mp_obj_t py_image_find_edges(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_eye	src/py/py_image.c	/^static mp_obj_t py_image_find_eye(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_features	src/py/py_image.c	/^static mp_obj_t py_image_find_features(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_hog	src/py/py_image.c	/^static mp_obj_t py_image_find_hog(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_keypoints	src/py/py_image.c	/^static mp_obj_t py_image_find_keypoints(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_lbp	src/py/py_image.c	/^static mp_obj_t py_image_find_lbp(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_line_segments	src/py/py_image.c	/^static mp_obj_t py_image_find_line_segments(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_lines	src/py/py_image.c	/^static mp_obj_t py_image_find_lines(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_qrcodes	src/py/py_image.c	/^static mp_obj_t py_image_find_qrcodes(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_qrcodes	test/python_module/image_new.c	/^py_image_find_qrcodes(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
py_image_find_rects	src/py/py_image.c	/^static mp_obj_t py_image_find_rects(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_find_template	src/py/py_image.c	/^static mp_obj_t py_image_find_template(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_flood_fill	src/py/py_image.c	/^STATIC mp_obj_t py_image_flood_fill(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_font_free	src/py/py_image.c	/^mp_obj_t py_image_font_free(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_font_load	src/py/py_image.c	/^mp_obj_t py_image_font_load(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_format	src/py/py_image.c	/^static mp_obj_t py_image_format(mp_obj_t img_obj)$/;"	f	file:
py_image_from_struct	src/py/py_image.c	/^mp_obj_t py_image_from_struct(image_t *img)$/;"	f
py_image_gamma_corr	src/py/py_image.c	/^STATIC mp_obj_t py_image_gamma_corr(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_gaussian	src/py/py_image.c	/^STATIC mp_obj_t py_image_gaussian(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_get_buffer	src/py/py_image.c	/^static mp_int_t py_image_get_buffer(mp_obj_t self_in, mp_buffer_info_t *bufinfo, mp_uint_t flags)$/;"	f	file:
py_image_get_histogram	src/py/py_image.c	/^static mp_obj_t py_image_get_histogram(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_get_pixel	src/py/py_image.c	/^STATIC mp_obj_t py_image_get_pixel(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_get_regression	src/py/py_image.c	/^static mp_obj_t py_image_get_regression(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_get_regression	test/python_module/image_new.c	/^py_image_get_regression(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
py_image_get_similarity	src/py/py_image.c	/^static mp_obj_t py_image_get_similarity(mp_obj_t img_obj, mp_obj_t other_obj)$/;"	f	file:
py_image_get_statistics	src/py/py_image.c	/^static mp_obj_t py_image_get_statistics(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_grayscale_to_rgb	src/py/py_image.c	/^mp_obj_t py_image_grayscale_to_rgb(mp_obj_t not_tuple)$/;"	f
py_image_grayscale_to_rgb	test/python_module/test.c	/^mp_obj_t py_image_grayscale_to_rgb(mp_obj_t not_tuple)$/;"	f
py_image_height	src/py/py_image.c	/^static mp_obj_t py_image_height(mp_obj_t img_obj)$/;"	f	file:
py_image_histeq	src/py/py_image.c	/^static mp_obj_t py_image_histeq(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_illuminvar	src/py/py_image.c	/^STATIC mp_obj_t py_image_illuminvar(mp_obj_t img_obj)$/;"	f
py_image_imagereader	src/py/py_image.c	/^mp_obj_t py_image_imagereader(mp_obj_t path)$/;"	f
py_image_imagewriter	src/py/py_image.c	/^mp_obj_t py_image_imagewriter(mp_obj_t path)$/;"	f
py_image_invert	src/py/py_image.c	/^STATIC mp_obj_t py_image_invert(mp_obj_t img_obj)$/;"	f
py_image_lab_to_rgb	src/py/py_image.c	/^mp_obj_t py_image_lab_to_rgb(mp_obj_t tuple)$/;"	f
py_image_laplacian	src/py/py_image.c	/^STATIC mp_obj_t py_image_laplacian(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_lens_corr	src/py/py_image.c	/^STATIC mp_obj_t py_image_lens_corr(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_linpolar	src/py/py_image.c	/^static mp_obj_t py_image_linpolar(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_load_cascade	src/py/py_image.c	/^mp_obj_t py_image_load_cascade(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_load_descriptor	src/py/py_image.c	/^mp_obj_t py_image_load_descriptor(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_load_image	src/py/py_image.c	/^mp_obj_t py_image_load_image(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_logpolar	src/py/py_image.c	/^static mp_obj_t py_image_logpolar(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_match_descriptor	src/py/py_image.c	/^static mp_obj_t py_image_match_descriptor(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_max	src/py/py_image.c	/^STATIC mp_obj_t py_image_max(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_mean	src/py/py_image.c	/^STATIC mp_obj_t py_image_mean(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_mean_pool	src/py/py_image.c	/^static mp_obj_t py_image_mean_pool(mp_obj_t img_obj, mp_obj_t x_div_obj, mp_obj_t y_div_obj)$/;"	f	file:
py_image_mean_pooled	src/py/py_image.c	/^static mp_obj_t py_image_mean_pooled(mp_obj_t img_obj, mp_obj_t x_div_obj, mp_obj_t y_div_obj)$/;"	f	file:
py_image_median	src/py/py_image.c	/^STATIC mp_obj_t py_image_median(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_midpoint	src/py/py_image.c	/^STATIC mp_obj_t py_image_midpoint(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_midpoint_pool	src/py/py_image.c	/^static mp_obj_t py_image_midpoint_pool(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_midpoint_pooled	src/py/py_image.c	/^static mp_obj_t py_image_midpoint_pooled(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_min	src/py/py_image.c	/^STATIC mp_obj_t py_image_min(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_mode	src/py/py_image.c	/^STATIC mp_obj_t py_image_mode(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_morph	src/py/py_image.c	/^STATIC mp_obj_t py_image_morph(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_mul	src/py/py_image.c	/^STATIC mp_obj_t py_image_mul(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_negate	src/py/py_image.c	/^STATIC mp_obj_t py_image_negate(mp_obj_t img_obj)$/;"	f
py_image_obj_is_image	src/py/py_image.c	/^bool py_image_obj_is_image(mp_obj_t obj)$/;"	f
py_image_open	src/py/py_image.c	/^STATIC mp_obj_t py_image_open(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_pix_to_ai	src/py/py_image.c	/^static mp_obj_t py_image_pix_to_ai(mp_obj_t img_obj)$/;"	f	file:
py_image_print	src/py/py_image.c	/^static void py_image_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_image_remove_shadows	src/py/py_image.c	/^STATIC mp_obj_t py_image_remove_shadows(size_t n_args, const mp_obj_t *args)$/;"	f
py_image_replace	src/py/py_image.c	/^STATIC mp_obj_t py_image_replace(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_resize	src/py/py_image.c	/^static mp_obj_t py_image_resize(mp_obj_t img_obj, mp_obj_t w_obj, mp_obj_t h_obj)$/;"	f	file:
py_image_rgb_to_grayscale	src/py/py_image.c	/^mp_obj_t py_image_rgb_to_grayscale(mp_obj_t tuple)$/;"	f
py_image_rgb_to_lab	src/py/py_image.c	/^mp_obj_t py_image_rgb_to_lab(mp_obj_t tuple)$/;"	f
py_image_rotation_corr	src/py/py_image.c	/^STATIC mp_obj_t py_image_rotation_corr(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_save	src/py/py_image.c	/^static mp_obj_t py_image_save(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_save_descriptor	src/py/py_image.c	/^mp_obj_t py_image_save_descriptor(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_selective_search	src/py/py_image.c	/^static mp_obj_t py_image_selective_search(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_set_pixel	src/py/py_image.c	/^STATIC mp_obj_t py_image_set_pixel(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_size	src/py/py_image.c	/^static mp_obj_t py_image_size(mp_obj_t img_obj)$/;"	f	file:
py_image_strech_char	src/py/py_image.c	/^static mp_obj_t py_image_strech_char(mp_obj_t img_obj, mp_obj_t de_dark_obj)$/;"	f	file:
py_image_stretch	src/py/py_image.c	/^static mp_obj_t py_image_stretch(mp_obj_t img_obj, mp_obj_t min_obj, mp_obj_t max_obj)$/;"	f	file:
py_image_sub	src/py/py_image.c	/^STATIC mp_obj_t py_image_sub(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_subscr	src/py/py_image.c	/^static mp_obj_t py_image_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_image_to_bitmap	src/py/py_image.c	/^static mp_obj_t py_image_to_bitmap(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_to_bytes	src/py/py_image.c	/^static mp_obj_t py_image_to_bytes(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_to_grayscale	src/py/py_image.c	/^static mp_obj_t py_image_to_grayscale(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_to_grayscale	test/python_module/image_new.c	/^py_image_to_grayscale(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
py_image_to_rainbow	src/py/py_image.c	/^static mp_obj_t py_image_to_rainbow(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_to_rgb565	src/py/py_image.c	/^static mp_obj_t py_image_to_rgb565(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_image_top_hat	src/py/py_image.c	/^STATIC mp_obj_t py_image_top_hat(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_image_type	src/py/py_image.c	/^static const mp_obj_type_t py_image_type = {$/;"	v	file:
py_image_type	src/py/py_image.c	/^static const mp_obj_type_t py_image_type;$/;"	v	file:
py_image_warpAffine_ai	src/py/py_image.c	/^mp_obj_t py_image_warpAffine_ai(mp_obj_t src_img_obj , mp_obj_t dst_img_obj , mp_obj_t transform_obj)$/;"	f
py_image_width	src/py/py_image.c	/^static mp_obj_t py_image_width(mp_obj_t img_obj)$/;"	f	file:
py_imagereader_close	src/py/py_image.c	/^mp_obj_t py_imagereader_close(mp_obj_t self_in)$/;"	f
py_imagereader_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_imagereader_locals_dict_table[] = {$/;"	v
py_imagereader_next_frame	src/py/py_image.c	/^mp_obj_t py_imagereader_next_frame(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f
py_imagereader_obj	src/py/py_image.c	/^typedef struct py_imagereader_obj {$/;"	s	file:
py_imagereader_obj_t	src/py/py_image.c	/^} py_imagereader_obj_t;$/;"	t	typeref:struct:py_imagereader_obj	file:
py_imagereader_print	src/py/py_image.c	/^static void py_imagereader_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_imagereader_size	src/py/py_image.c	/^mp_obj_t py_imagereader_size(mp_obj_t self_in)$/;"	f
py_imagereader_type	src/py/py_image.c	/^static const mp_obj_type_t py_imagereader_type = {$/;"	v	file:
py_imagewriter_add_frame	src/py/py_image.c	/^mp_obj_t py_imagewriter_add_frame(mp_obj_t self_in, mp_obj_t img_obj)$/;"	f
py_imagewriter_close	src/py/py_image.c	/^mp_obj_t py_imagewriter_close(mp_obj_t self_in)$/;"	f
py_imagewriter_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_imagewriter_locals_dict_table[] = {$/;"	v
py_imagewriter_obj	src/py/py_image.c	/^typedef struct py_imagewriter_obj {$/;"	s	file:
py_imagewriter_obj_t	src/py/py_image.c	/^} py_imagewriter_obj_t;$/;"	t	typeref:struct:py_imagewriter_obj	file:
py_imagewriter_print	src/py/py_image.c	/^static void py_imagewriter_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_imagewriter_size	src/py/py_image.c	/^mp_obj_t py_imagewriter_size(mp_obj_t self_in)$/;"	f
py_imagewriter_type	src/py/py_image.c	/^static const mp_obj_type_t py_imagewriter_type = {$/;"	v	file:
py_img_back_rgb888	test/python_module/image.c	/^py_img_back_rgb888(PyObject *self, PyObject *args)$/;"	f	file:
py_img_close	test/python_module/image.c	/^py_img_close(PyObject *self, PyObject *args)$/;"	f	file:
py_kp_obj_t	src/py/py_image.c	/^} py_kp_obj_t;$/;"	t	typeref:struct:_py_kp_obj_t	file:
py_kp_print	src/py/py_image.c	/^static void py_kp_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_kp_subscr	src/py/py_image.c	/^static mp_obj_t py_kp_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_kp_type	src/py/py_image.c	/^static const mp_obj_type_t py_kp_type = {$/;"	v	file:
py_kp_unary_op	src/py/py_image.c	/^mp_obj_t py_kp_unary_op(mp_unary_op_t op, mp_obj_t self_in){$/;"	f
py_kptmatch_count	src/py/py_image.c	/^mp_obj_t py_kptmatch_count(mp_obj_t self_in)  { return ((py_kptmatch_obj_t *) self_in)->count; }$/;"	f
py_kptmatch_cx	src/py/py_image.c	/^mp_obj_t py_kptmatch_cx(mp_obj_t self_in)     { return ((py_kptmatch_obj_t *) self_in)->cx;    }$/;"	f
py_kptmatch_cy	src/py/py_image.c	/^mp_obj_t py_kptmatch_cy(mp_obj_t self_in)     { return ((py_kptmatch_obj_t *) self_in)->cy;    }$/;"	f
py_kptmatch_h	src/py/py_image.c	/^mp_obj_t py_kptmatch_h (mp_obj_t self_in)     { return ((py_kptmatch_obj_t *) self_in)->h;     }$/;"	f
py_kptmatch_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_kptmatch_locals_dict_table[] = {$/;"	v
py_kptmatch_match	src/py/py_image.c	/^mp_obj_t py_kptmatch_match(mp_obj_t self_in)  { return ((py_kptmatch_obj_t *) self_in)->match; }$/;"	f
py_kptmatch_obj_t	src/py/py_image.c	/^} py_kptmatch_obj_t;$/;"	t	typeref:struct:_py_kptmatch_obj_t	file:
py_kptmatch_print	src/py/py_image.c	/^static void py_kptmatch_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_kptmatch_rect	src/py/py_image.c	/^mp_obj_t py_kptmatch_rect(mp_obj_t  self_in)  {$/;"	f
py_kptmatch_subscr	src/py/py_image.c	/^static mp_obj_t py_kptmatch_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_kptmatch_theta	src/py/py_image.c	/^mp_obj_t py_kptmatch_theta(mp_obj_t self_in)  { return ((py_kptmatch_obj_t *) self_in)->theta; }$/;"	f
py_kptmatch_type	src/py/py_image.c	/^static const mp_obj_type_t py_kptmatch_type = {$/;"	v	file:
py_kptmatch_w	src/py/py_image.c	/^mp_obj_t py_kptmatch_w (mp_obj_t self_in)     { return ((py_kptmatch_obj_t *) self_in)->w;     }$/;"	f
py_kptmatch_x	src/py/py_image.c	/^mp_obj_t py_kptmatch_x (mp_obj_t self_in)     { return ((py_kptmatch_obj_t *) self_in)->x;     }$/;"	f
py_kptmatch_y	src/py/py_image.c	/^mp_obj_t py_kptmatch_y (mp_obj_t self_in)     { return ((py_kptmatch_obj_t *) self_in)->y;     }$/;"	f
py_kpts_obj	src/py/py_image.c	/^py_kp_obj_t *py_kpts_obj(mp_obj_t kpts_obj)$/;"	f
py_lbp_obj_t	src/py/py_image.c	/^} py_lbp_obj_t;$/;"	t	typeref:struct:_py_lbp_obj_t	file:
py_lbp_print	src/py/py_image.c	/^static void py_lbp_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_lbp_type	src/py/py_image.c	/^static const mp_obj_type_t py_lbp_type = {$/;"	v	file:
py_lcd_bgr_to_rgb	src/py/py_lcd.c	/^STATIC mp_obj_t py_lcd_bgr_to_rgb(size_t n_args, const mp_obj_t *args)$/;"	f
py_lcd_clear	src/py/py_lcd.c	/^static mp_obj_t py_lcd_clear(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args)$/;"	f	file:
py_lcd_deinit	src/py/py_lcd.c	/^static mp_obj_t py_lcd_deinit()$/;"	f	file:
py_lcd_direction	src/py/py_lcd.c	/^static mp_obj_t py_lcd_direction(mp_obj_t dir_obj)$/;"	f	file:
py_lcd_display	src/py/py_lcd.c	/^static mp_obj_t py_lcd_display(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_lcd_draw_string	src/py/py_lcd.c	/^STATIC mp_obj_t py_lcd_draw_string(size_t n_args, const mp_obj_t *args)$/;"	f
py_lcd_fill_rectangle	src/py/py_lcd.c	/^STATIC mp_obj_t py_lcd_fill_rectangle(size_t n_args, const mp_obj_t *args)$/;"	f
py_lcd_freq	src/py/py_lcd.c	/^STATIC mp_obj_t py_lcd_freq(size_t n_args, const mp_obj_t *pos_args)$/;"	f
py_lcd_get_backlight	src/py/py_lcd.c	/^static mp_obj_t py_lcd_get_backlight()$/;"	f	file:
py_lcd_height	src/py/py_lcd.c	/^static mp_obj_t py_lcd_height()$/;"	f	file:
py_lcd_init	src/py/py_lcd.c	/^static mp_obj_t py_lcd_init(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args)$/;"	f	file:
py_lcd_load_config	src/py/py_lcd.c	/^void py_lcd_load_config(lcd_para_t *lcd_cfg)$/;"	f
py_lcd_mirror	src/py/py_lcd.c	/^STATIC mp_obj_t py_lcd_mirror(size_t n_args, const mp_obj_t *args)$/;"	f
py_lcd_rotation	src/py/py_lcd.c	/^STATIC mp_obj_t py_lcd_rotation(size_t n_args, const mp_obj_t *args)$/;"	f
py_lcd_set_backlight	src/py/py_lcd.c	/^static mp_obj_t py_lcd_set_backlight(mp_obj_t state_obj)$/;"	f	file:
py_lcd_type	src/py/py_lcd.c	/^static mp_obj_t py_lcd_type()$/;"	f	file:
py_lcd_width	src/py/py_lcd.c	/^static mp_obj_t py_lcd_width()$/;"	f	file:
py_lcd_write_register	src/py/py_lcd.c	/^static mp_obj_t py_lcd_write_register(mp_obj_t addr_obj, mp_obj_t data_obj)$/;"	f	file:
py_line_length	src/py/py_image.c	/^mp_obj_t py_line_length(mp_obj_t self_in) { return ((py_line_obj_t *) self_in)->length; }$/;"	f
py_line_line	src/py/py_image.c	/^mp_obj_t py_line_line(mp_obj_t self_in)$/;"	f
py_line_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_line_locals_dict_table[] = {$/;"	v
py_line_magnitude	src/py/py_image.c	/^mp_obj_t py_line_magnitude(mp_obj_t self_in) { return ((py_line_obj_t *) self_in)->magnitude; }$/;"	f
py_line_obj	src/py/py_image.c	/^typedef struct py_line_obj {$/;"	s	file:
py_line_obj_size	src/py/py_image.c	3826;"	d	file:
py_line_obj_t	src/py/py_image.c	/^} py_line_obj_t;$/;"	t	typeref:struct:py_line_obj	file:
py_line_print	src/py/py_image.c	/^static void py_line_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_line_rho	src/py/py_image.c	/^mp_obj_t py_line_rho(mp_obj_t self_in) { return ((py_line_obj_t *) self_in)->rho; }$/;"	f
py_line_subscr	src/py/py_image.c	/^static mp_obj_t py_line_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_line_theta	src/py/py_image.c	/^mp_obj_t py_line_theta(mp_obj_t self_in) { return ((py_line_obj_t *) self_in)->theta; }$/;"	f
py_line_type	src/py/py_image.c	/^static const mp_obj_type_t py_line_type = {$/;"	v	file:
py_line_x1	src/py/py_image.c	/^mp_obj_t py_line_x1(mp_obj_t self_in) { return ((py_line_obj_t *) self_in)->x1; }$/;"	f
py_line_x2	src/py/py_image.c	/^mp_obj_t py_line_x2(mp_obj_t self_in) { return ((py_line_obj_t *) self_in)->x2; }$/;"	f
py_line_y1	src/py/py_image.c	/^mp_obj_t py_line_y1(mp_obj_t self_in) { return ((py_line_obj_t *) self_in)->y1; }$/;"	f
py_line_y2	src/py/py_image.c	/^mp_obj_t py_line_y2(mp_obj_t self_in) { return ((py_line_obj_t *) self_in)->y2; }$/;"	f
py_mjpeg_add_frame	src/py/py_mjpeg.c	/^static mp_obj_t py_mjpeg_add_frame(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_mjpeg_close	src/py/py_mjpeg.c	/^static mp_obj_t py_mjpeg_close(mp_obj_t mjpeg_obj, mp_obj_t fps_obj)$/;"	f	file:
py_mjpeg_height	src/py/py_mjpeg.c	/^static mp_obj_t py_mjpeg_height(mp_obj_t mjpeg_obj)$/;"	f	file:
py_mjpeg_obj	src/py/py_mjpeg.c	/^typedef struct py_mjpeg_obj {$/;"	s	file:
py_mjpeg_obj_t	src/py/py_mjpeg.c	/^} py_mjpeg_obj_t;$/;"	t	typeref:struct:py_mjpeg_obj	file:
py_mjpeg_open	src/py/py_mjpeg.c	/^static mp_obj_t py_mjpeg_open(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_mjpeg_print	src/py/py_mjpeg.c	/^static void py_mjpeg_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_mjpeg_size	src/py/py_mjpeg.c	/^static mp_obj_t py_mjpeg_size(mp_obj_t mjpeg_obj)$/;"	f	file:
py_mjpeg_type	src/py/py_mjpeg.c	/^static const mp_obj_type_t py_mjpeg_type = {$/;"	v	file:
py_mjpeg_type	src/py/py_mjpeg.c	/^static const mp_obj_type_t py_mjpeg_type; \/\/ forward declare$/;"	v	file:
py_mjpeg_width	src/py/py_mjpeg.c	/^static mp_obj_t py_mjpeg_width(mp_obj_t mjpeg_obj)$/;"	f	file:
py_percentile_a_value	src/py/py_image.c	/^mp_obj_t py_percentile_a_value(mp_obj_t self_in) { return ((py_percentile_obj_t *) self_in)->AValue; }$/;"	f
py_percentile_b_value	src/py/py_image.c	/^mp_obj_t py_percentile_b_value(mp_obj_t self_in) { return ((py_percentile_obj_t *) self_in)->BValue; }$/;"	f
py_percentile_l_value	src/py/py_image.c	/^mp_obj_t py_percentile_l_value(mp_obj_t self_in) { return ((py_percentile_obj_t *) self_in)->LValue; }$/;"	f
py_percentile_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_percentile_locals_dict_table[] = {$/;"	v
py_percentile_obj	src/py/py_image.c	/^typedef struct py_percentile_obj {$/;"	s	file:
py_percentile_obj_size	src/py/py_image.c	3195;"	d	file:
py_percentile_obj_t	src/py/py_image.c	/^} py_percentile_obj_t;$/;"	t	typeref:struct:py_percentile_obj	file:
py_percentile_print	src/py/py_image.c	/^static void py_percentile_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_percentile_subscr	src/py/py_image.c	/^static mp_obj_t py_percentile_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_percentile_type	src/py/py_image.c	/^static const mp_obj_type_t py_percentile_type = {$/;"	v	file:
py_percentile_value	src/py/py_image.c	/^mp_obj_t py_percentile_value(mp_obj_t self_in) { return ((py_percentile_obj_t *) self_in)->LValue; }$/;"	f
py_qrcode_corners	src/py/py_image.c	/^mp_obj_t py_qrcode_corners(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->corners; }$/;"	f
py_qrcode_data_type	src/py/py_image.c	/^mp_obj_t py_qrcode_data_type(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->data_type; }$/;"	f
py_qrcode_ecc_level	src/py/py_image.c	/^mp_obj_t py_qrcode_ecc_level(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->ecc_level; }$/;"	f
py_qrcode_eci	src/py/py_image.c	/^mp_obj_t py_qrcode_eci(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->eci; }$/;"	f
py_qrcode_h	src/py/py_image.c	/^mp_obj_t py_qrcode_h(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->h; }$/;"	f
py_qrcode_is_alphanumeric	src/py/py_image.c	/^mp_obj_t py_qrcode_is_alphanumeric(mp_obj_t self_in) { return mp_obj_new_bool(mp_obj_get_int(((py_qrcode_obj_t *) self_in)->data_type) == 2); }$/;"	f
py_qrcode_is_binary	src/py/py_image.c	/^mp_obj_t py_qrcode_is_binary(mp_obj_t self_in) { return mp_obj_new_bool(mp_obj_get_int(((py_qrcode_obj_t *) self_in)->data_type) == 4); }$/;"	f
py_qrcode_is_kanji	src/py/py_image.c	/^mp_obj_t py_qrcode_is_kanji(mp_obj_t self_in) { return mp_obj_new_bool(mp_obj_get_int(((py_qrcode_obj_t *) self_in)->data_type) == 8); }$/;"	f
py_qrcode_is_numeric	src/py/py_image.c	/^mp_obj_t py_qrcode_is_numeric(mp_obj_t self_in) { return mp_obj_new_bool(mp_obj_get_int(((py_qrcode_obj_t *) self_in)->data_type) == 1); }$/;"	f
py_qrcode_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_qrcode_locals_dict_table[] = {$/;"	v
py_qrcode_mask	src/py/py_image.c	/^mp_obj_t py_qrcode_mask(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->mask; }$/;"	f
py_qrcode_obj	src/py/py_image.c	/^typedef struct py_qrcode_obj {$/;"	s	file:
py_qrcode_obj_size	src/py/py_image.c	4550;"	d	file:
py_qrcode_obj_t	src/py/py_image.c	/^} py_qrcode_obj_t;$/;"	t	typeref:struct:py_qrcode_obj	file:
py_qrcode_payload	src/py/py_image.c	/^mp_obj_t py_qrcode_payload(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->payload; }$/;"	f
py_qrcode_print	src/py/py_image.c	/^static void py_qrcode_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_qrcode_rect	src/py/py_image.c	/^mp_obj_t py_qrcode_rect(mp_obj_t self_in)$/;"	f
py_qrcode_subscr	src/py/py_image.c	/^static mp_obj_t py_qrcode_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_qrcode_type	src/py/py_image.c	/^static const mp_obj_type_t py_qrcode_type = {$/;"	v	file:
py_qrcode_version	src/py/py_image.c	/^mp_obj_t py_qrcode_version(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->version; }$/;"	f
py_qrcode_w	src/py/py_image.c	/^mp_obj_t py_qrcode_w(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->w; }$/;"	f
py_qrcode_x	src/py/py_image.c	/^mp_obj_t py_qrcode_x(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->x; }$/;"	f
py_qrcode_y	src/py/py_image.c	/^mp_obj_t py_qrcode_y(mp_obj_t self_in) { return ((py_qrcode_obj_t *) self_in)->y; }$/;"	f
py_rect_corners	src/py/py_image.c	/^mp_obj_t py_rect_corners(mp_obj_t self_in) { return ((py_rect_obj_t *) self_in)->corners; }$/;"	f
py_rect_h	src/py/py_image.c	/^mp_obj_t py_rect_h(mp_obj_t self_in) { return ((py_rect_obj_t *) self_in)->h; }$/;"	f
py_rect_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_rect_locals_dict_table[] = {$/;"	v
py_rect_magnitude	src/py/py_image.c	/^mp_obj_t py_rect_magnitude(mp_obj_t self_in) { return ((py_rect_obj_t *) self_in)->magnitude; }$/;"	f
py_rect_obj	src/py/py_image.c	/^typedef struct py_rect_obj {$/;"	s	file:
py_rect_obj_size	src/py/py_image.c	4422;"	d	file:
py_rect_obj_t	src/py/py_image.c	/^} py_rect_obj_t;$/;"	t	typeref:struct:py_rect_obj	file:
py_rect_print	src/py/py_image.c	/^static void py_rect_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_rect_rect	src/py/py_image.c	/^mp_obj_t py_rect_rect(mp_obj_t self_in)$/;"	f
py_rect_subscr	src/py/py_image.c	/^static mp_obj_t py_rect_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_rect_type	src/py/py_image.c	/^static const mp_obj_type_t py_rect_type = {$/;"	v	file:
py_rect_w	src/py/py_image.c	/^mp_obj_t py_rect_w(mp_obj_t self_in) { return ((py_rect_obj_t *) self_in)->w; }$/;"	f
py_rect_x	src/py/py_image.c	/^mp_obj_t py_rect_x(mp_obj_t self_in) { return ((py_rect_obj_t *) self_in)->x; }$/;"	f
py_rect_y	src/py/py_image.c	/^mp_obj_t py_rect_y(mp_obj_t self_in) { return ((py_rect_obj_t *) self_in)->y; }$/;"	f
py_sensor_deinit	src/py/py_sensor.c	/^static mp_obj_t py_sensor_deinit()$/;"	f	file:
py_sensor_flush	src/py/py_sensor.c	/^static mp_obj_t py_sensor_flush(void)$/;"	f	file:
py_sensor_get_exposure_us	src/py/py_sensor.c	/^static mp_obj_t py_sensor_get_exposure_us()$/;"	f	file:
py_sensor_get_fb	src/py/py_sensor.c	/^static mp_obj_t py_sensor_get_fb()$/;"	f	file:
py_sensor_get_gain_db	src/py/py_sensor.c	/^static mp_obj_t py_sensor_get_gain_db()$/;"	f	file:
py_sensor_get_id	src/py/py_sensor.c	/^static mp_obj_t py_sensor_get_id()$/;"	f	file:
py_sensor_get_rgb_gain_db	src/py/py_sensor.c	/^static mp_obj_t py_sensor_get_rgb_gain_db()$/;"	f	file:
py_sensor_height	src/py/py_sensor.c	/^static mp_obj_t py_sensor_height()$/;"	f	file:
py_sensor_read_reg	src/py/py_sensor.c	/^static mp_obj_t py_sensor_read_reg(mp_obj_t addr)$/;"	f	file:
py_sensor_reset	src/py/py_sensor.c	/^static mp_obj_t py_sensor_reset(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_sensor_run	src/py/py_sensor.c	/^static mp_obj_t py_sensor_run(mp_obj_t val)$/;"	f	file:
py_sensor_set_auto_exposure	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_auto_exposure(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_sensor_set_auto_gain	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_auto_gain(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_sensor_set_auto_whitebal	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_auto_whitebal(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_sensor_set_brightness	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_brightness(mp_obj_t brightness)$/;"	f	file:
py_sensor_set_colorbar	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_colorbar(mp_obj_t enable)$/;"	f	file:
py_sensor_set_contrast	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_contrast(mp_obj_t contrast)$/;"	f	file:
py_sensor_set_framerate	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_framerate(mp_obj_t framerate)$/;"	f	file:
py_sensor_set_framesize	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_framesize(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_sensor_set_gainceiling	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_gainceiling(mp_obj_t gainceiling)$/;"	f	file:
py_sensor_set_hmirror	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_hmirror(mp_obj_t enable)$/;"	f	file:
py_sensor_set_jpeg_buff_quality	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_jpeg_buff_quality(mp_obj_t quality)$/;"	f	file:
py_sensor_set_lens_correction	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_lens_correction(mp_obj_t enable, mp_obj_t radi, mp_obj_t coef)$/;"	f	file:
py_sensor_set_pixformat	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_pixformat(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_sensor_set_saturation	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_saturation(mp_obj_t saturation)$/;"	f	file:
py_sensor_set_special_effect	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_special_effect(mp_obj_t sde)$/;"	f	file:
py_sensor_set_vflip	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_vflip(mp_obj_t enable)$/;"	f	file:
py_sensor_set_windowing	src/py/py_sensor.c	/^static mp_obj_t py_sensor_set_windowing(mp_obj_t roi_obj)$/;"	f	file:
py_sensor_shutdown	src/py/py_sensor.c	/^static mp_obj_t py_sensor_shutdown(mp_obj_t enable)$/;"	f	file:
py_sensor_skip_frames	src/py/py_sensor.c	/^static mp_obj_t py_sensor_skip_frames(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_sensor_sleep	src/py/py_sensor.c	/^static mp_obj_t py_sensor_sleep(mp_obj_t enable)$/;"	f	file:
py_sensor_snapshot	src/py/py_sensor.c	/^static mp_obj_t py_sensor_snapshot(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args)$/;"	f	file:
py_sensor_width	src/py/py_sensor.c	/^static mp_obj_t py_sensor_width()$/;"	f	file:
py_sensor_write_reg	src/py/py_sensor.c	/^static mp_obj_t py_sensor_write_reg(mp_obj_t addr, mp_obj_t val)$/;"	f	file:
py_similarity_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_similarity_locals_dict_table[] = {$/;"	v
py_similarity_max	src/py/py_image.c	/^mp_obj_t py_similarity_max(mp_obj_t self_in) { return ((py_similarity_obj_t *) self_in)->max; }$/;"	f
py_similarity_mean	src/py/py_image.c	/^mp_obj_t py_similarity_mean(mp_obj_t self_in) { return ((py_similarity_obj_t *) self_in)->avg; }$/;"	f
py_similarity_min	src/py/py_image.c	/^mp_obj_t py_similarity_min(mp_obj_t self_in) { return ((py_similarity_obj_t *) self_in)->min; }$/;"	f
py_similarity_obj	src/py/py_image.c	/^typedef struct py_similarity_obj {$/;"	s	file:
py_similarity_obj_size	src/py/py_image.c	2867;"	d	file:
py_similarity_obj_t	src/py/py_image.c	/^} py_similarity_obj_t;$/;"	t	typeref:struct:py_similarity_obj	file:
py_similarity_print	src/py/py_image.c	/^static void py_similarity_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_similarity_stdev	src/py/py_image.c	/^mp_obj_t py_similarity_stdev(mp_obj_t self_in) { return ((py_similarity_obj_t *) self_in)->std; }$/;"	f
py_similarity_subscr	src/py/py_image.c	/^static mp_obj_t py_similarity_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_similarity_type	src/py/py_image.c	/^static const mp_obj_type_t py_similarity_type = {$/;"	v	file:
py_statistics_a_lq	src/py/py_image.c	/^mp_obj_t py_statistics_a_lq(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->ALQ; }$/;"	f
py_statistics_a_max	src/py/py_image.c	/^mp_obj_t py_statistics_a_max(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->AMax; }$/;"	f
py_statistics_a_mean	src/py/py_image.c	/^mp_obj_t py_statistics_a_mean(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->AMean; }$/;"	f
py_statistics_a_median	src/py/py_image.c	/^mp_obj_t py_statistics_a_median(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->AMedian; }$/;"	f
py_statistics_a_min	src/py/py_image.c	/^mp_obj_t py_statistics_a_min(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->AMin; }$/;"	f
py_statistics_a_mode	src/py/py_image.c	/^mp_obj_t py_statistics_a_mode(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->AMode; }$/;"	f
py_statistics_a_stdev	src/py/py_image.c	/^mp_obj_t py_statistics_a_stdev(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->ASTDev; }$/;"	f
py_statistics_a_uq	src/py/py_image.c	/^mp_obj_t py_statistics_a_uq(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->AUQ; }$/;"	f
py_statistics_b_lq	src/py/py_image.c	/^mp_obj_t py_statistics_b_lq(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->BLQ; }$/;"	f
py_statistics_b_max	src/py/py_image.c	/^mp_obj_t py_statistics_b_max(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->BMax; }$/;"	f
py_statistics_b_mean	src/py/py_image.c	/^mp_obj_t py_statistics_b_mean(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->BMean; }$/;"	f
py_statistics_b_median	src/py/py_image.c	/^mp_obj_t py_statistics_b_median(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->BMedian; }$/;"	f
py_statistics_b_min	src/py/py_image.c	/^mp_obj_t py_statistics_b_min(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->BMin; }$/;"	f
py_statistics_b_mode	src/py/py_image.c	/^mp_obj_t py_statistics_b_mode(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->BMode; }$/;"	f
py_statistics_b_stdev	src/py/py_image.c	/^mp_obj_t py_statistics_b_stdev(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->BSTDev; }$/;"	f
py_statistics_b_uq	src/py/py_image.c	/^mp_obj_t py_statistics_b_uq(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->BUQ; }$/;"	f
py_statistics_l_lq	src/py/py_image.c	/^mp_obj_t py_statistics_l_lq(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LLQ; }$/;"	f
py_statistics_l_max	src/py/py_image.c	/^mp_obj_t py_statistics_l_max(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LMax; }$/;"	f
py_statistics_l_mean	src/py/py_image.c	/^mp_obj_t py_statistics_l_mean(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LMean; }$/;"	f
py_statistics_l_median	src/py/py_image.c	/^mp_obj_t py_statistics_l_median(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LMedian; }$/;"	f
py_statistics_l_min	src/py/py_image.c	/^mp_obj_t py_statistics_l_min(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LMin; }$/;"	f
py_statistics_l_mode	src/py/py_image.c	/^mp_obj_t py_statistics_l_mode(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LMode; }$/;"	f
py_statistics_l_stdev	src/py/py_image.c	/^mp_obj_t py_statistics_l_stdev(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LSTDev; }$/;"	f
py_statistics_l_uq	src/py/py_image.c	/^mp_obj_t py_statistics_l_uq(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LUQ; }$/;"	f
py_statistics_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_statistics_locals_dict_table[] = {$/;"	v
py_statistics_lq	src/py/py_image.c	/^mp_obj_t py_statistics_lq(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LLQ; }$/;"	f
py_statistics_max	src/py/py_image.c	/^mp_obj_t py_statistics_max(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LMax; }$/;"	f
py_statistics_mean	src/py/py_image.c	/^mp_obj_t py_statistics_mean(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LMean; }$/;"	f
py_statistics_median	src/py/py_image.c	/^mp_obj_t py_statistics_median(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LMedian; }$/;"	f
py_statistics_min	src/py/py_image.c	/^mp_obj_t py_statistics_min(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LMin; }$/;"	f
py_statistics_mode	src/py/py_image.c	/^mp_obj_t py_statistics_mode(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LMode; }$/;"	f
py_statistics_obj	src/py/py_image.c	/^typedef struct py_statistics_obj {$/;"	s	file:
py_statistics_obj_size	src/py/py_image.c	2966;"	d	file:
py_statistics_obj_t	src/py/py_image.c	/^} py_statistics_obj_t;$/;"	t	typeref:struct:py_statistics_obj	file:
py_statistics_print	src/py/py_image.c	/^static void py_statistics_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_statistics_stdev	src/py/py_image.c	/^mp_obj_t py_statistics_stdev(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LSTDev; }$/;"	f
py_statistics_subscr	src/py/py_image.c	/^static mp_obj_t py_statistics_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_statistics_type	src/py/py_image.c	/^static const mp_obj_type_t py_statistics_type = {$/;"	v	file:
py_statistics_uq	src/py/py_image.c	/^mp_obj_t py_statistics_uq(mp_obj_t self_in) { return ((py_statistics_obj_t *) self_in)->LUQ; }$/;"	f
py_threshold_a_value	src/py/py_image.c	/^mp_obj_t py_threshold_a_value(mp_obj_t self_in) { return ((py_threshold_obj_t *) self_in)->AValue; }$/;"	f
py_threshold_b_value	src/py/py_image.c	/^mp_obj_t py_threshold_b_value(mp_obj_t self_in) { return ((py_threshold_obj_t *) self_in)->BValue; }$/;"	f
py_threshold_l_value	src/py/py_image.c	/^mp_obj_t py_threshold_l_value(mp_obj_t self_in) { return ((py_threshold_obj_t *) self_in)->LValue; }$/;"	f
py_threshold_locals_dict_table	src/py/py_image.c	/^STATIC const mp_rom_map_elem_t py_threshold_locals_dict_table[] = {$/;"	v
py_threshold_obj	src/py/py_image.c	/^typedef struct py_threshold_obj {$/;"	s	file:
py_threshold_obj_size	src/py/py_image.c	3280;"	d	file:
py_threshold_obj_t	src/py/py_image.c	/^} py_threshold_obj_t;$/;"	t	typeref:struct:py_threshold_obj	file:
py_threshold_print	src/py/py_image.c	/^static void py_threshold_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind)$/;"	f	file:
py_threshold_subscr	src/py/py_image.c	/^static mp_obj_t py_threshold_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value)$/;"	f	file:
py_threshold_type	src/py/py_image.c	/^static const mp_obj_type_t py_threshold_type = {$/;"	v	file:
py_threshold_value	src/py/py_image.c	/^mp_obj_t py_threshold_value(mp_obj_t self_in) { return ((py_threshold_obj_t *) self_in)->LValue; }$/;"	f
python_find_qr	test/python_module/image.c	/^python_find_qr(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
python_send_to_c_image	test/python_module/image.c	/^python_send_to_c_image(PyObject *self, PyObject *args, PyObject* keywds)$/;"	f	file:
python_to_image	test/python_module/image_new.c	/^void python_to_image(image_t *srcpic,PyObject *Opic,int w,int h,int hpp)$/;"	f
qqvga_config	src/gc0328.c	/^static const uint8_t qqvga_config[][2] = { \/\/k210 $/;"	v	file:
qr	src/img/zbar.c	/^    qr_reader *qr;              \/* QR Code 2D reader *\/$/;"	m	struct:zbar_image_scanner_s	file:
qr	zbar/img_scanner.c	/^    qr_reader *qr;              \/* QR Code 2D reader *\/$/;"	m	struct:zbar_image_scanner_s	file:
qr_aff	zbar/qrdec.c	/^struct qr_aff{$/;"	s	file:
qr_aff	zbar/qrdec.c	/^typedef struct qr_aff qr_aff;$/;"	t	typeref:struct:qr_aff	file:
qr_aff_init	zbar/qrdec.c	/^static void qr_aff_init(qr_aff *_aff,$/;"	f	file:
qr_aff_line_step	zbar/qrdec.c	/^static int qr_aff_line_step(const qr_aff *_aff,qr_line _l,$/;"	f	file:
qr_aff_project	zbar/qrdec.c	/^static void qr_aff_project(qr_point _p,const qr_aff *_aff,$/;"	f	file:
qr_aff_unproject	zbar/qrdec.c	/^static void qr_aff_unproject(qr_point _q,const qr_aff *_aff,$/;"	f	file:
qr_alignment_pattern_fetch	zbar/qrdec.c	/^static unsigned qr_alignment_pattern_fetch(qr_point _p[5][5],int _x0,int _y0,$/;"	f	file:
qr_alignment_pattern_search	zbar/qrdec.c	/^static int qr_alignment_pattern_search(qr_point _p,const qr_hom_cell *_cell,$/;"	f	file:
qr_binarize	zbar/binarize.c	/^unsigned char *qr_binarize(const unsigned char *_img,int _width,int _height){$/;"	f
qr_cmp_edge_pt	zbar/qrdec.c	/^static int qr_cmp_edge_pt(const void *_a,const void *_b){$/;"	f	file:
qr_code_data	zbar/qrdec.h	/^struct qr_code_data{$/;"	s
qr_code_data	zbar/qrdec.h	/^typedef struct qr_code_data       qr_code_data;$/;"	t	typeref:struct:qr_code_data
qr_code_data_clear	zbar/qrdec.c	/^static void qr_code_data_clear(qr_code_data *_qrdata){$/;"	f	file:
qr_code_data_entry	zbar/qrdec.h	/^struct qr_code_data_entry{$/;"	s
qr_code_data_entry	zbar/qrdec.h	/^typedef struct qr_code_data_entry qr_code_data_entry;$/;"	t	typeref:struct:qr_code_data_entry
qr_code_data_list	zbar/qrdec.h	/^struct qr_code_data_list{$/;"	s
qr_code_data_list	zbar/qrdec.h	/^typedef struct qr_code_data_list  qr_code_data_list;$/;"	t	typeref:struct:qr_code_data_list
qr_code_data_list_add	zbar/qrdec.c	/^static void qr_code_data_list_add(qr_code_data_list *_qrlist,$/;"	f	file:
qr_code_data_list_clear	zbar/qrdec.c	/^void qr_code_data_list_clear(qr_code_data_list *_qrlist){$/;"	f
qr_code_data_list_extract_text	zbar/qrdectxt.c	/^int qr_code_data_list_extract_text(const qr_code_data_list *_qrlist,$/;"	f
qr_code_data_list_init	zbar/qrdec.c	/^void qr_code_data_list_init(qr_code_data_list *_qrlist){$/;"	f
qr_code_data_parse	zbar/qrdec.c	/^static int qr_code_data_parse(qr_code_data *_qrdata,int _version,$/;"	f	file:
qr_code_decode	zbar/qrdec.c	/^static int qr_code_decode(qr_code_data *_qrdata,const rs_gf256 *_gf,$/;"	f	file:
qr_code_ncodewords	zbar/qrdec.c	/^static int qr_code_ncodewords(unsigned _version){$/;"	f	file:
qr_data_mask_fill	zbar/qrdec.c	/^static void qr_data_mask_fill(unsigned *_mask,int _dim,int _pattern){$/;"	f	file:
qr_eci_encoding	zbar/qrdec.h	/^typedef enum qr_eci_encoding{$/;"	g
qr_eci_encoding	zbar/qrdec.h	/^}qr_eci_encoding;$/;"	t	typeref:enum:qr_eci_encoding
qr_finder	zbar/qrdec.c	/^struct qr_finder{$/;"	s	file:
qr_finder	zbar/qrdec.c	/^typedef struct qr_finder qr_finder;$/;"	t	typeref:struct:qr_finder	file:
qr_finder_center	zbar/qrdec.c	/^struct qr_finder_center{$/;"	s	file:
qr_finder_center	zbar/qrdec.c	/^typedef struct qr_finder_center   qr_finder_center;$/;"	t	typeref:struct:qr_finder_center	file:
qr_finder_center_cmp	zbar/qrdec.c	/^static int qr_finder_center_cmp(const void *_a,const void *_b){$/;"	f	file:
qr_finder_centers_locate	zbar/qrdec.c	/^static int qr_finder_centers_locate(qr_finder_center **_centers,$/;"	f	file:
qr_finder_cluster	zbar/qrdec.c	/^struct qr_finder_cluster{$/;"	s	file:
qr_finder_cluster	zbar/qrdec.c	/^typedef struct qr_finder_cluster qr_finder_cluster;$/;"	t	typeref:struct:qr_finder_cluster	file:
qr_finder_cluster_lines	zbar/qrdec.c	/^static int qr_finder_cluster_lines(qr_finder_cluster *_clusters,$/;"	f	file:
qr_finder_dump_aff_undistorted	zbar/qrdec.c	/^static void qr_finder_dump_aff_undistorted(qr_finder *_ul,qr_finder *_ur,$/;"	f	file:
qr_finder_dump_hom_undistorted	zbar/qrdec.c	/^static void qr_finder_dump_hom_undistorted(qr_finder *_ul,qr_finder *_ur,$/;"	f	file:
qr_finder_edge_pt	zbar/qrdec.c	/^struct qr_finder_edge_pt{$/;"	s	file:
qr_finder_edge_pt	zbar/qrdec.c	/^typedef struct qr_finder_edge_pt  qr_finder_edge_pt;$/;"	t	typeref:struct:qr_finder_edge_pt	file:
qr_finder_edge_pts_aff_classify	zbar/qrdec.c	/^static void qr_finder_edge_pts_aff_classify(qr_finder *_f,const qr_aff *_aff){$/;"	f	file:
qr_finder_edge_pts_fill	zbar/qrdec.c	/^static int qr_finder_edge_pts_fill(qr_finder_edge_pt *_edge_pts,int _nedge_pts,$/;"	f	file:
qr_finder_edge_pts_hom_classify	zbar/qrdec.c	/^static void qr_finder_edge_pts_hom_classify(qr_finder *_f,const qr_hom *_hom){$/;"	f	file:
qr_finder_estimate_module_size_and_version	zbar/qrdec.c	/^static int qr_finder_estimate_module_size_and_version(qr_finder *_f,$/;"	f	file:
qr_finder_find_crossings	zbar/qrdec.c	/^static int qr_finder_find_crossings(qr_finder_center *_centers,$/;"	f	file:
qr_finder_fmt_info_decode	zbar/qrdec.c	/^static int qr_finder_fmt_info_decode(qr_finder *_ul,qr_finder *_ur,$/;"	f	file:
qr_finder_line	zbar/qrcode.h	/^struct qr_finder_line {$/;"	s
qr_finder_line	zbar/qrcode.h	/^typedef struct qr_finder_line qr_finder_line;$/;"	t	typeref:struct:qr_finder_line
qr_finder_lines	zbar/qrdec.c	/^typedef struct qr_finder_lines {$/;"	s	file:
qr_finder_lines	zbar/qrdec.c	/^} qr_finder_lines;$/;"	t	typeref:struct:qr_finder_lines	file:
qr_finder_lines_are_crossing	zbar/qrdec.c	/^static int qr_finder_lines_are_crossing(const qr_finder_line *_hline,$/;"	f	file:
qr_finder_locate_crossing	zbar/qrdec.c	/^static int qr_finder_locate_crossing(const unsigned char *_img,$/;"	f	file:
qr_finder_quick_crossing_check	zbar/qrdec.c	/^static int qr_finder_quick_crossing_check(const unsigned char *_img,$/;"	f	file:
qr_finder_ransac	zbar/qrdec.c	/^static void qr_finder_ransac(qr_finder *_f,const qr_aff *_hom,$/;"	f	file:
qr_finder_reset	zbar/qr_finder.h	/^static inline void qr_finder_reset (qr_finder_t *qrf)$/;"	f
qr_finder_s	zbar/qr_finder.h	/^typedef struct qr_finder_s {$/;"	s
qr_finder_t	zbar/qr_finder.h	/^} qr_finder_t;$/;"	t	typeref:struct:qr_finder_s
qr_finder_version_decode	zbar/qrdec.c	/^static int qr_finder_version_decode(qr_finder *_f,const qr_hom *_hom,$/;"	f	file:
qr_finder_vline_cmp	zbar/qrdec.c	/^static int qr_finder_vline_cmp(const void *_a,const void *_b){$/;"	f	file:
qr_grid	src/img/qrcode.c	/^    int                 qr_grid;$/;"	m	struct:quirc_capstone	file:
qr_hamming_dist	zbar/qrdec.c	/^static int qr_hamming_dist(unsigned _y1,unsigned _y2,int _maxdiff){$/;"	f	file:
qr_handler	src/img/zbar.c	/^static inline void qr_handler (zbar_image_scanner_t *iscn)$/;"	f	file:
qr_handler	zbar/img_scanner.c	/^static inline void qr_handler (zbar_image_scanner_t *iscn)$/;"	f	file:
qr_hom	zbar/qrdec.c	/^struct qr_hom{$/;"	s	file:
qr_hom	zbar/qrdec.c	/^typedef struct qr_hom qr_hom;$/;"	t	typeref:struct:qr_hom	file:
qr_hom_cell	zbar/qrdec.c	/^struct qr_hom_cell{$/;"	s	file:
qr_hom_cell	zbar/qrdec.c	/^typedef struct qr_hom_cell      qr_hom_cell;$/;"	t	typeref:struct:qr_hom_cell	file:
qr_hom_cell_fproject	zbar/qrdec.c	/^static void qr_hom_cell_fproject(qr_point _p,const qr_hom_cell *_cell,$/;"	f	file:
qr_hom_cell_init	zbar/qrdec.c	/^static void qr_hom_cell_init(qr_hom_cell *_cell,int _u0,int _v0,$/;"	f	file:
qr_hom_cell_project	zbar/qrdec.c	/^static void qr_hom_cell_project(qr_point _p,const qr_hom_cell *_cell,$/;"	f	file:
qr_hom_fit	zbar/qrdec.c	/^static int qr_hom_fit(qr_hom *_hom,qr_finder *_ul,qr_finder *_ur,$/;"	f	file:
qr_hom_fproject	zbar/qrdec.c	/^static void qr_hom_fproject(qr_point _p,const qr_hom *_hom,$/;"	f	file:
qr_hom_init	zbar/qrdec.c	/^static void qr_hom_init(qr_hom *_hom,int _x0,int _y0,$/;"	f	file:
qr_hom_project	zbar/qrdec.c	/^static void qr_hom_project(qr_point _p,const qr_hom *_hom,$/;"	f	file:
qr_hom_unproject	zbar/qrdec.c	/^static int qr_hom_unproject(qr_point _q,const qr_hom *_hom,int _x,int _y){$/;"	f	file:
qr_ihypot	zbar/util.c	/^unsigned qr_ihypot(int _x,int _y){$/;"	f
qr_ilog	zbar/util.c	/^int qr_ilog(unsigned _v){$/;"	f
qr_img_get_bit	zbar/qrdec.c	/^static int qr_img_get_bit(const unsigned char *_img,int _width,int _height,$/;"	f	file:
qr_isqrt	zbar/util.c	/^unsigned qr_isqrt(unsigned _val){$/;"	f
qr_line	zbar/qrdec.c	/^typedef int qr_line[3];$/;"	t	file:
qr_line_eval	zbar/qrdec.c	/^static int qr_line_eval(qr_line _line,int _x,int _y){$/;"	f	file:
qr_line_fit	zbar/qrdec.c	/^static void qr_line_fit(qr_line _l,int _x0,int _y0,$/;"	f	file:
qr_line_fit_finder_edge	zbar/qrdec.c	/^static int qr_line_fit_finder_edge(qr_line _l,$/;"	f	file:
qr_line_fit_finder_pair	zbar/qrdec.c	/^static void qr_line_fit_finder_pair(qr_line _l,const qr_aff *_aff,$/;"	f	file:
qr_line_fit_points	zbar/qrdec.c	/^static void qr_line_fit_points(qr_line _l,qr_point *_p,int _np,int _res){$/;"	f	file:
qr_line_isect	zbar/qrdec.c	/^static int qr_line_isect(qr_point _p,const qr_line _l0,const qr_line _l1){$/;"	f	file:
qr_line_orient	zbar/qrdec.c	/^static void qr_line_orient(qr_line _l,int _x,int _y){$/;"	f	file:
qr_mode	zbar/qrdec.h	/^typedef enum qr_mode{$/;"	g
qr_mode	zbar/qrdec.h	/^}qr_mode;$/;"	t	typeref:enum:qr_mode
qr_pack_buf	zbar/qrdec.c	/^struct qr_pack_buf{$/;"	s	file:
qr_pack_buf	zbar/qrdec.c	/^typedef struct qr_pack_buf      qr_pack_buf;$/;"	t	typeref:struct:qr_pack_buf	file:
qr_pack_buf_avail	zbar/qrdec.c	/^static int qr_pack_buf_avail(const qr_pack_buf *_b){$/;"	f	file:
qr_pack_buf_init	zbar/qrdec.c	/^static void qr_pack_buf_init(qr_pack_buf *_b,$/;"	f	file:
qr_pack_buf_read	zbar/qrdec.c	/^static int qr_pack_buf_read(qr_pack_buf *_b,int _bits){$/;"	f	file:
qr_point	zbar/qrcode.h	/^typedef int qr_point[2];$/;"	t
qr_point_ccw	zbar/qrdec.c	/^static int qr_point_ccw(const qr_point _p0,$/;"	f	file:
qr_point_distance2	zbar/qrdec.c	/^static unsigned qr_point_distance2(const qr_point _p1,const qr_point _p2){$/;"	f	file:
qr_point_translate	zbar/qrdec.c	/^static void qr_point_translate(qr_point _point,int _dx,int _dy){$/;"	f	file:
qr_reader	zbar/qr_finder.h	/^typedef struct qr_reader qr_reader;$/;"	t	typeref:struct:qr_reader
qr_reader	zbar/qrcode.h	/^typedef struct qr_reader qr_reader;$/;"	t	typeref:struct:qr_reader
qr_reader	zbar/qrdec.c	/^struct qr_reader {$/;"	s	file:
qr_reader_init	zbar/qrdec.c	/^static void qr_reader_init (qr_reader *reader)$/;"	f	file:
qr_reader_match_centers	zbar/qrdec.c	/^void qr_reader_match_centers(qr_reader *_reader,qr_code_data_list *_qrlist,$/;"	f
qr_reader_try_configuration	zbar/qrdec.c	/^static int qr_reader_try_configuration(qr_reader *_reader,$/;"	f	file:
qr_samples_unpack	zbar/qrdec.c	/^static void qr_samples_unpack(unsigned char **_blocks,int _nblocks,$/;"	f	file:
qr_sampling_grid	zbar/qrdec.c	/^struct qr_sampling_grid{$/;"	s	file:
qr_sampling_grid	zbar/qrdec.c	/^typedef struct qr_sampling_grid qr_sampling_grid;$/;"	t	typeref:struct:qr_sampling_grid	file:
qr_sampling_grid_clear	zbar/qrdec.c	/^static void qr_sampling_grid_clear(qr_sampling_grid *_grid){$/;"	f	file:
qr_sampling_grid_dump	zbar/qrdec.c	/^static void qr_sampling_grid_dump(qr_sampling_grid *_grid,int _version,$/;"	f	file:
qr_sampling_grid_fp_mask_rect	zbar/qrdec.c	/^static void qr_sampling_grid_fp_mask_rect(qr_sampling_grid *_grid,int _dim,$/;"	f	file:
qr_sampling_grid_init	zbar/qrdec.c	/^static void qr_sampling_grid_init(qr_sampling_grid *_grid,int _version,$/;"	f	file:
qr_sampling_grid_is_in_fp	zbar/qrdec.c	/^static int qr_sampling_grid_is_in_fp(const qr_sampling_grid *_grid,int _dim,$/;"	f	file:
qr_sampling_grid_sample	zbar/qrdec.c	/^static void qr_sampling_grid_sample(const qr_sampling_grid *_grid,$/;"	f	file:
qr_svg_centers	zbar/qrdec.c	/^static inline void qr_svg_centers (const qr_finder_center *centers,$/;"	f	file:
qr_svg_points	zbar/qrdec.c	/^static inline void qr_svg_points(const char *cls,$/;"	f	file:
qrdata	zbar/qrdec.h	/^  qr_code_data *qrdata;$/;"	m	struct:qr_code_data_list
qrf	src/img/zbar.c	/^    qr_finder_t qrf;                    \/* QR Code finder state *\/$/;"	m	struct:zbar_decoder_s	file:
qrf	zbar/decoder.h	/^    qr_finder_t qrf;                    \/* QR Code finder state *\/$/;"	m	struct:zbar_decoder_s
qsort	src/img/qsort.c	/^void qsort(void *aa, size_t n, size_t es, int (*cmp)(const void *, const void *))$/;"	f
qtp	src/img/apriltag.c	/^    struct apriltag_quad_thresh_params qtp;$/;"	m	struct:apriltag_detector	typeref:struct:apriltag_detector::apriltag_quad_thresh_params	file:
quad	src/img/apriltag.c	/^struct quad$/;"	s	file:
quad_copy	src/img/apriltag.c	/^struct quad *quad_copy(struct quad *quad)$/;"	f
quad_decode	src/img/apriltag.c	/^float quad_decode(apriltag_family_t *family, image_u8_t *im, struct quad *quad, struct quick_decode_entry *entry, image_u8_t *im_samples)$/;"	f
quad_destroy	src/img/apriltag.c	/^void quad_destroy(struct quad *quad)$/;"	f
quad_goodness	src/img/apriltag.c	/^double quad_goodness(apriltag_family_t *family, image_u8_t *im, struct quad *quad)$/;"	f
quad_segment_maxima	src/img/apriltag.c	/^int quad_segment_maxima(apriltag_detector_t *td, zarray_t *cluster, struct line_fit_pt *lfps, int indices[4])$/;"	f
quad_update_homographies	src/img/apriltag.c	/^int quad_update_homographies(struct quad *quad)$/;"	f
quality	src/img/include/imlib.h	/^    int quality;$/;"	m	struct:find_barcodes_list_lnk_data
quality	src/img/zbar.c	/^    int quality;                \/* relative symbol reliability metric *\/$/;"	m	struct:zbar_symbol_s	file:
quality	src/include/framebuffer.h	/^    int quality;$/;"	m	struct:jpegbuffer
quality	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, type, rotation, quality;$/;"	m	struct:py_barcode_obj	file:
quality	zbar/symbol.h	/^    int quality;                \/* relative symbol reliability metric *\/$/;"	m	struct:zbar_symbol_s
quat_to_matrix	src/img/apriltag.c	/^void quat_to_matrix(const double q[4], matd_t *M)$/;"	f
quick_decode	src/img/apriltag.c	/^struct quick_decode$/;"	s	file:
quick_decode_codeword	src/img/apriltag.c	/^static void quick_decode_codeword(apriltag_family_t *tf, uint64_t rcode,$/;"	f	file:
quick_decode_entry	src/img/apriltag.c	/^struct quick_decode_entry$/;"	s	file:
quicksort	src/array.c	/^static void quicksort(void **head, void **tail, array_comp_t comp)$/;"	f	file:
quiet_border	src/img/zbar.c	/^static inline void quiet_border (zbar_image_scanner_t *iscn)$/;"	f	file:
quiet_border	zbar/img_scanner.c	/^static inline void quiet_border (zbar_image_scanner_t *iscn)$/;"	f	file:
quirc	src/img/qrcode.c	/^struct quirc {$/;"	s	file:
quirc_begin	src/img/qrcode.c	/^uint8_t *quirc_begin(struct quirc *q, int *w, int *h)$/;"	f
quirc_capstone	src/img/qrcode.c	/^struct quirc_capstone {$/;"	s	file:
quirc_code	src/img/qrcode.c	/^struct quirc_code {$/;"	s	file:
quirc_count	src/img/qrcode.c	/^int quirc_count(const struct quirc *q)$/;"	f
quirc_data	src/img/qrcode.c	/^struct quirc_data {$/;"	s	file:
quirc_decode	src/img/qrcode.c	/^quirc_decode_error_t quirc_decode(const struct quirc_code *code,$/;"	f
quirc_decode_error_t	src/img/qrcode.c	/^} quirc_decode_error_t;$/;"	t	typeref:enum:__anon39	file:
quirc_destroy	src/img/qrcode.c	/^void quirc_destroy(struct quirc *q)$/;"	f
quirc_end	src/img/qrcode.c	/^void quirc_end(struct quirc *q)$/;"	f
quirc_extract	src/img/qrcode.c	/^void quirc_extract(const struct quirc *q, int index,$/;"	f
quirc_grid	src/img/qrcode.c	/^struct quirc_grid {$/;"	s	file:
quirc_new	src/img/qrcode.c	/^struct quirc *quirc_new(void)$/;"	f
quirc_pixel_t	src/img/qrcode.c	/^typedef uint16_t quirc_pixel_t;$/;"	t	file:
quirc_pixel_t	src/img/qrcode.c	/^typedef uint8_t quirc_pixel_t;$/;"	t	file:
quirc_point	src/img/qrcode.c	/^struct quirc_point {$/;"	s	file:
quirc_region	src/img/qrcode.c	/^struct quirc_region {$/;"	s	file:
quirc_resize	src/img/qrcode.c	/^int quirc_resize(struct quirc *q, int w, int h)$/;"	f
quirc_rs_params	src/img/qrcode.c	/^struct quirc_rs_params {$/;"	s	file:
quirc_strerror	src/img/qrcode.c	/^const char *quirc_strerror(quirc_decode_error_t err)$/;"	f
quirc_version	src/img/qrcode.c	/^const char *quirc_version(void)$/;"	f
quirc_version_db	src/img/qrcode.c	/^const struct quirc_version_info quirc_version_db[QUIRC_MAX_VERSION + 1] = {$/;"	v	typeref:struct:quirc_version_info
quirc_version_info	src/img/qrcode.c	/^struct quirc_version_info {$/;"	s	file:
qvga_config	src/gc0328.c	/^static const uint8_t qvga_config[][2] = { \/\/k210 $/;"	v	file:
qvga_config	src/ov3660.c	/^static const cmd_a16_d8_t qvga_config[] = { \/\/k210$/;"	v	file:
r	src/img/blob.c	/^    int16_t x, y, l, r;$/;"	m	struct:xylf	file:
r	src/img/include/imlib.h	/^    uint32_t r, magnitude;$/;"	m	struct:find_circles_list_lnk_data
r	src/img/include/omv_fft.h	/^    rectangle_t r;$/;"	m	struct:fft2d_controller
r	src/img/qrcode.c	/^    int16_t x, y, l, r;$/;"	m	struct:xylf	file:
r	src/py/py_image.c	/^    mp_obj_t x, y, r, magnitude;$/;"	m	struct:py_circle_obj	file:
r	zbar/isaac.h	/^  unsigned r[ISAAC_SZ];$/;"	m	struct:isaac_ctx
rHvX	src/img/dmtx.c	/^static int rHvX[] =$/;"	v	file:
rHvY	src/img/dmtx.c	/^static int rHvY[] =$/;"	v	file:
r_acc	src/img/filter.c	/^    int r_acc, g_acc, b_acc, pixels;$/;"	m	struct:imlib_cartoon_filter_mean_state	file:
radToDeg	src/img/lsd.c	46;"	d	file:
rainbow_table	src/img/rainbow_tab.c	/^const uint16_t rainbow_table[256] = {$/;"	v
randf	src/img/apriltag.c	/^static inline float randf()$/;"	f	file:
rank	src/img/selective_search.c	/^    uint16_t rank;$/;"	m	struct:__anon41	file:
raw	src/img/qrcode.c	/^    uint8_t raw[QUIRC_MAX_PAYLOAD];$/;"	m	struct:datastream	file:
raw	src/img/zbar.c	/^    unsigned char raw[7];       \/* decode in process *\/$/;"	m	struct:ean_pass_s	file:
raw2fit	src/img/dmtx.c	/^   DmtxMatrix3     raw2fit;       \/* 3x3 transformation from raw image to fitted barcode grid *\/$/;"	m	struct:DmtxRegion_struct	file:
rb528_table	src/img/rgb2rgb_tab.c	/^const uint8_t rb528_table[32] = {$/;"	v
rb825_table	src/img/rgb2rgb_tab.c	/^const uint8_t rb825_table[256] = {$/;"	v
rcode	src/img/apriltag.c	/^    int64_t rcode;$/;"	m	struct:evaluate_quad_ret	file:
rcode	src/img/apriltag.c	/^    uint64_t rcode;   \/\/ the queried code$/;"	m	struct:quick_decode_entry	file:
readDHTMarker	src/img/picojpeg.c	/^static uint8 readDHTMarker(void)$/;"	f	file:
readDQTMarker	src/img/picojpeg.c	/^static uint8 readDQTMarker(void)$/;"	f	file:
readDRIMarker	src/img/picojpeg.c	/^static uint8 readDRIMarker(void)$/;"	f	file:
readSOFMarker	src/img/picojpeg.c	/^static uint8 readSOFMarker(void)$/;"	f	file:
readSOSMarker	src/img/picojpeg.c	/^static uint8 readSOSMarker(void)$/;"	f	file:
read_bit	src/img/qrcode.c	/^static void read_bit(const struct quirc_code *code,$/;"	f	file:
read_byte	src/vfs_wrapper.c	/^int read_byte(mp_obj_t fp, uint8_t* value)$/;"	f
read_byte_expect	src/vfs_wrapper.c	/^int read_byte_expect(mp_obj_t fp, uint8_t value)$/;"	f
read_byte_ignore	src/vfs_wrapper.c	/^int read_byte_ignore(mp_obj_t fp)$/;"	f
read_byte_raise	src/vfs_wrapper.c	/^int read_byte_raise(mp_obj_t fp, uint8_t* value)$/;"	f
read_cell	src/img/qrcode.c	/^static int read_cell(const struct quirc *q, int index, int x, int y)$/;"	f	file:
read_data	src/img/qrcode.c	/^static void read_data(const struct quirc_code *code,$/;"	f	file:
read_data	src/vfs_wrapper.c	/^int read_data(mp_obj_t fp, void *data, mp_uint_t size)$/;"	f
read_data_raise	src/vfs_wrapper.c	/^int read_data_raise(mp_obj_t fp, void *data, mp_uint_t size)$/;"	f
read_format	src/img/qrcode.c	/^static quirc_decode_error_t read_format(const struct quirc_code *code,$/;"	f	file:
read_int	src/img/ppm.c	/^static void read_int(mp_obj_t fp, uint32_t *i, ppm_read_settings_t *rs)$/;"	f	file:
read_int_c	src/img/include/imlib.h	/^    uint8_t read_int_c;$/;"	m	struct:ppm_read_settings
read_int_c_valid	src/img/include/imlib.h	/^    bool read_int_c_valid;$/;"	m	struct:ppm_read_settings
read_int_reset	src/img/ppm.c	/^static void read_int_reset(ppm_read_settings_t *rs)$/;"	f	file:
read_long	src/vfs_wrapper.c	/^int read_long(mp_obj_t fp, uint32_t* value)$/;"	f
read_long_expect	src/vfs_wrapper.c	/^int read_long_expect(mp_obj_t fp, uint32_t value)$/;"	f
read_long_ignore	src/vfs_wrapper.c	/^int read_long_ignore(mp_obj_t fp)$/;"	f
read_long_raise	src/vfs_wrapper.c	/^int read_long_raise(mp_obj_t fp, uint32_t* value)$/;"	f
read_reg	src/include/sensor.h	/^    int  (*read_reg)            (sensor_t *sensor, uint8_t reg_addr);$/;"	m	struct:_sensor
read_reg	src/ov2640.c	/^static int read_reg(sensor_t *sensor, uint8_t reg_addr)$/;"	f	file:
read_reg	src/ov3660.c	/^static int read_reg(sensor_t *sensor, uint8_t reg_addr)$/;"	f	file:
read_reg	src/ov5640.c	/^static int read_reg(sensor_t *sensor, uint16_t reg_addr)$/;"	f	file:
read_reg	src/ov5642.c	/^static int read_reg(sensor_t *sensor, uint16_t reg_addr)$/;"	f	file:
read_reg	src/ov7740.c	/^static int read_reg(sensor_t *sensor, uint8_t reg_addr)$/;"	f	file:
read_word	src/vfs_wrapper.c	/^int read_word(mp_obj_t fp, uint16_t* value)$/;"	f
read_word_expect	src/vfs_wrapper.c	/^int read_word_expect(mp_obj_t fp, uint16_t value)$/;"	f
read_word_ignore	src/vfs_wrapper.c	/^int read_word_ignore(mp_obj_t fp)$/;"	f
read_word_raise	src/vfs_wrapper.c	/^int read_word_raise(mp_obj_t fp, uint16_t* value)$/;"	f
realloc	src/img/apriltag.c	50;"	d	file:
realloc	src/img/dmtx.c	21;"	d	file:
realloc	src/img/jpeg.c	/^    bool realloc;$/;"	m	struct:__anon34	file:
realloc	src/img/lsd.c	23;"	d	file:
realloc	src/img/zbar.c	19;"	d	file:
record_capstone	src/img/qrcode.c	/^static void record_capstone(struct quirc *q, int ring, int stone)$/;"	f	file:
record_qr_grid	src/img/qrcode.c	/^static void record_qr_grid(struct quirc *q, int a, int b, int c)$/;"	f	file:
rect	src/img/include/imlib.h	/^    rectangle_t rect;$/;"	m	struct:find_apriltags_list_lnk_data
rect	src/img/include/imlib.h	/^    rectangle_t rect;$/;"	m	struct:find_barcodes_list_lnk_data
rect	src/img/include/imlib.h	/^    rectangle_t rect;$/;"	m	struct:find_blobs_list_lnk_data
rect	src/img/include/imlib.h	/^    rectangle_t rect;$/;"	m	struct:find_datamatrices_list_lnk_data
rect	src/img/include/imlib.h	/^    rectangle_t rect;$/;"	m	struct:find_qrcodes_list_lnk_data
rect	src/img/include/imlib.h	/^    rectangle_t rect;$/;"	m	struct:find_rects_list_lnk_data
rect	src/img/lsd.c	/^struct rect$/;"	s	file:
rect_copy	src/img/lsd.c	/^static void rect_copy(struct rect * in, struct rect * out)$/;"	f	file:
rect_improve	src/img/lsd.c	/^static double rect_improve( struct rect * rec, image_int angles,$/;"	f	file:
rect_iter	src/img/lsd.c	/^}__attribute__((aligned(8))) rect_iter;$/;"	t	typeref:struct:__anon35	file:
rect_nfa	src/img/lsd.c	/^static double rect_nfa(struct rect * rec, image_int angles, double logNT)$/;"	f	file:
rectangle	src/img/include/imlib.h	/^typedef struct rectangle {$/;"	s
rectangle_add	src/img/rectangle.c	/^static void rectangle_add(rectangle_t *r1, rectangle_t *r2)$/;"	f	file:
rectangle_alloc	src/img/rectangle.c	/^rectangle_t *rectangle_alloc(int16_t x, int16_t y, int16_t w, int16_t h)$/;"	f
rectangle_copy	src/img/imlib.c	/^void rectangle_copy(rectangle_t *dst, rectangle_t *src)$/;"	f
rectangle_div	src/img/rectangle.c	/^static void rectangle_div(rectangle_t *r, int c)$/;"	f	file:
rectangle_equal	src/img/rectangle.c	/^bool rectangle_equal(rectangle_t *r1, rectangle_t *r2)$/;"	f
rectangle_equal_fast	src/img/imlib.c	/^bool rectangle_equal_fast(rectangle_t *ptr0, rectangle_t *ptr1)$/;"	f
rectangle_expand	src/img/rectangle.c	/^void rectangle_expand(rectangle_t *r, int x, int y)$/;"	f
rectangle_init	src/img/imlib.c	/^void rectangle_init(rectangle_t *ptr, int x, int y, int w, int h)$/;"	f
rectangle_intersected	src/img/imlib.c	/^void rectangle_intersected(rectangle_t *dst, rectangle_t *src)$/;"	f
rectangle_intersects	src/img/rectangle.c	/^bool rectangle_intersects(rectangle_t *r1, rectangle_t *r2)$/;"	f
rectangle_merge	src/img/rectangle.c	/^array_t *rectangle_merge(array_t *rectangles)$/;"	f
rectangle_overlap	src/img/imlib.c	/^bool rectangle_overlap(rectangle_t *ptr0, rectangle_t *ptr1)$/;"	f
rectangle_subimg	src/img/rectangle.c	/^bool rectangle_subimg(image_t *img, rectangle_t *r, rectangle_t *r_out)$/;"	f
rectangle_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) rectangle_t;$/;"	t	typeref:struct:rectangle
rectangle_united	src/img/imlib.c	/^void rectangle_united(rectangle_t *dst, rectangle_t *src)$/;"	f
rectangles_array	src/img/include/imlib.h	/^    int8_t *rectangles_array;       \/\/ Rectangles array.$/;"	m	struct:cascade
recycle	src/img/zbar.c	/^    recycle_bucket_t recycle[RECYCLE_BUCKETS];$/;"	m	struct:zbar_image_scanner_s	file:
recycle	zbar/img_scanner.c	/^    recycle_bucket_t recycle[RECYCLE_BUCKETS];$/;"	m	struct:zbar_image_scanner_s	file:
recycle_bucket_s	src/img/zbar.c	/^typedef struct recycle_bucket_s {$/;"	s	file:
recycle_bucket_s	zbar/img_scanner.c	/^typedef struct recycle_bucket_s {$/;"	s	file:
recycle_bucket_t	src/img/zbar.c	/^}__attribute__((aligned(8))) recycle_bucket_t;$/;"	t	typeref:struct:recycle_bucket_s	file:
recycle_bucket_t	zbar/img_scanner.c	/^} recycle_bucket_t;$/;"	t	typeref:struct:recycle_bucket_s	file:
recycle_syms	src/img/zbar.c	/^static inline int recycle_syms (zbar_image_scanner_t *iscn,$/;"	f	file:
recycle_syms	zbar/img_scanner.c	/^static inline int recycle_syms (zbar_image_scanner_t *iscn,$/;"	f	file:
red	src/img/include/imlib.h	/^        uint8_t red;    \/\/ RGB888 Red$/;"	m	union:simple_color::__anon25
red	test/python_module/test.c	/^        uint8_t red;    \/\/ RGB888 Red$/;"	m	union:simple_color::__anon59	file:
red	zbar/image.h	/^            uint8_t red, green, blue;   \/* size\/location a la RGB_BITS() *\/$/;"	m	struct:zbar_format_def_s::__anon62::__anon63
reduce_region_radius	src/img/lsd.c	/^static int reduce_region_radius( struct lsd_point * reg, int * reg_size,$/;"	f	file:
ref	src/img/qrcode.c	/^    struct quirc_point  ref;$/;"	m	struct:polygon_score_data	typeref:struct:polygon_score_data::quirc_point	file:
refcnt	src/img/zbar.c	/^    refcnt_t refcnt;            \/* reference count *\/$/;"	m	struct:zbar_symbol_s	file:
refcnt	src/img/zbar.c	/^    refcnt_t refcnt;$/;"	m	struct:zbar_symbol_set_s	file:
refcnt	zbar/image.h	/^    refcnt_t refcnt;            \/* reference count *\/$/;"	m	struct:zbar_image_s
refcnt	zbar/symbol.h	/^    refcnt_t refcnt;            \/* reference count *\/$/;"	m	struct:zbar_symbol_s
refcnt	zbar/symbol.h	/^    refcnt_t refcnt;$/;"	m	struct:zbar_symbol_set_s
refcnt_t	src/img/zbar.c	/^typedef int refcnt_t;$/;"	t	file:
refcnt_t	zbar/refcnt.h	/^typedef int refcnt_t;$/;"	t
refcnt_t	zbar/refcnt.h	/^typedef volatile LONG refcnt_t;  \/* FIXME where did volatile come from? *\/$/;"	t
refine	src/img/lsd.c	/^static int refine( struct lsd_point * reg, int * reg_size, image_int modgrad,$/;"	f	file:
refine_decode	src/img/apriltag.c	/^    int refine_decode;$/;"	m	struct:apriltag_detector	file:
refine_edges	src/img/apriltag.c	/^    int refine_edges;$/;"	m	struct:apriltag_detector	file:
refine_edges	src/img/apriltag.c	/^static void refine_edges(apriltag_detector_t *td, image_u8_t *im_orig, struct quad *quad)$/;"	f	file:
refine_pose	src/img/apriltag.c	/^    int refine_pose;$/;"	m	struct:apriltag_detector	file:
reg	src/ov3660.c	/^    uint16_t reg;$/;"	m	struct:__anon55	file:
reg_default_vals	src/mt9d111.c	/^const struct Register reg_default_vals[] = $/;"	v	typeref:struct:Register
reg_vals_qvga_30fps	src/mt9d111.c	/^const struct Register reg_vals_qvga_30fps[] =$/;"	v	typeref:struct:Register
reg_width	src/sensor.c	/^    uint8_t reg_width;$/;"	m	struct:sensor_config_t	file:
region	src/img/selective_search.c	/^} __attribute__((aligned(8)))region;$/;"	t	typeref:struct:__anon40	file:
region2rect	src/img/lsd.c	/^static void region2rect( struct lsd_point * reg, int reg_size,$/;"	f	file:
region_code	src/img/qrcode.c	/^static int region_code(struct quirc *q, int x, int y)$/;"	f	file:
region_grow	src/img/lsd.c	/^static void region_grow( int x, int y, image_int angles, struct lsd_point * reg,$/;"	f	file:
regions	src/img/qrcode.c	/^    struct quirc_region     regions[QUIRC_MAX_REGIONS];$/;"	m	struct:quirc	typeref:struct:quirc::quirc_region	file:
release_lock	src/img/zbar.c	/^static inline char release_lock (zbar_decoder_t *dcode,$/;"	f	file:
remove_vertex	src/img/apriltag.c	/^struct remove_vertex$/;"	s	file:
replicateSignBit16	src/img/picojpeg.c	/^static int16 replicateSignBit16(int8 n)$/;"	f	file:
res	zbar/qrdec.c	/^  int res;$/;"	m	struct:qr_aff	file:
res	zbar/qrdec.c	/^  int res;$/;"	m	struct:qr_hom	file:
reserved_cell	src/img/qrcode.c	/^static int reserved_cell(int version, int i, int j)$/;"	f	file:
reset	src/include/sensor.h	/^    int  (*reset)               (sensor_t *sensor);$/;"	m	struct:_sensor
reset	src/ov2640.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	src/ov3660.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	src/ov5640.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	src/ov5642.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	src/ov7740.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset_pol	src/include/sensor.h	/^    polarity_t reset_pol; \/\/ Reset polarity (TODO move to hw_flags)$/;"	m	struct:_sensor
reset_set	src/include/sensor.h	/^    bool     reset_set;         \/\/ reset called$/;"	m	struct:_sensor
resolution	src/sensor.c	/^const int resolution[][2] = {$/;"	v
response	src/py/py_image.c	/^    mp_obj_t x_translation, y_translation, rotation, scale, response;$/;"	m	struct:py_displacement_obj	file:
rest_lab_table	src/img/lab_tab.c	/^const int8_t rest_lab_table[8*3] = {0,1,3,4,5,6,8,9,0,2,3,5,6,8,9,11,0,1,3,4,6,7,9,10};$/;"	v
rest_yuv_table	src/img/yuv_tab.c	/^const int8_t rest_yuv_table[8*3] = {0,2,5,7,9,12,14,16,  0,-1,-3,-4,-5,-7,-8,-9,  0,-2,-3,-5,-7,-8,-10,-11};$/;"	v
rev	src/img/zbar.c	/^    unsigned char chk, rev, fwd;$/;"	m	struct:char39_s	file:
reverse	src/img/mathop.c	/^    bool reverse;$/;"	m	struct:imlib_sub_line_op_state	file:
reverse_u32pixel	src/sensor.c	/^int reverse_u32pixel(uint32_t *addr, uint32_t length)$/;"	f
reverse_u32pixel_2	src/sensor.c	/^static int reverse_u32pixel_2(int core)$/;"	f	file:
rgb	zbar/image.h	/^        } rgb;$/;"	m	union:zbar_format_def_s::__anon62	typeref:struct:zbar_format_def_s::__anon62::__anon63
rgb565_to_rgb888	pybind_test/conversion.c	/^int rgb565_to_rgb888(const void *psrc, int w, int h, void *pdst)$/;"	f
rgb565_to_rgb888	test/conversion.c	/^int rgb565_to_rgb888(const void *psrc, int w, int h, void *pdst)$/;"	f
rgb565_to_rgb888_img	pybind_test/conversion.c	/^int rgb565_to_rgb888_img(image_t *img_in,image_t *img_out)$/;"	f
rgb565_to_rgb888_img	test/conversion.c	/^int rgb565_to_rgb888_img(image_t *img_in,image_t *img_out)$/;"	f
rgb888_to_rgb565	pybind_test/conversion.c	/^int rgb888_to_rgb565(const void *psrc, int w, int h, void *pdst)$/;"	f
rgb888_to_rgb565	test/conversion.c	/^int rgb888_to_rgb565(const void *psrc, int w, int h, void *pdst)$/;"	f
rgb888_to_rgb565_img	pybind_test/conversion.c	/^void rgb888_to_rgb565_img(image_t *img_in,image_t *img_out)$/;"	f
rgb888_to_rgb565_img	test/conversion.c	/^void rgb888_to_rgb565_img(image_t *img_in,image_t *img_out)$/;"	f
rho	src/img/include/imlib.h	/^    int16_t theta, rho;$/;"	m	struct:find_lines_list_lnk_data
rho	src/py/py_image.c	/^    mp_obj_t x1, y1, x2, y2, length, magnitude, theta, rho;$/;"	m	struct:py_line_obj	file:
ri_del	src/img/lsd.c	/^static void ri_del(rect_iter * iter)$/;"	f	file:
ri_end	src/img/lsd.c	/^static int ri_end(rect_iter * i)$/;"	f	file:
ri_inc	src/img/lsd.c	/^static void ri_inc(rect_iter * i)$/;"	f	file:
ri_ini	src/img/lsd.c	/^static rect_iter * ri_ini(struct rect * r)$/;"	f	file:
right	src/img/apriltag.c	/^    int left, right; \/\/ left vertex, right vertex$/;"	m	struct:remove_vertex	file:
right	src/img/apriltag.c	/^    int left, right;$/;"	m	struct:segment	file:
right	src/img/zbar.c	/^    zbar_symbol_type_t right;$/;"	m	struct:ean_decoder_s	file:
rightAngle	src/img/dmtx.c	/^   int             rightAngle;    \/* hough angle of right edge *\/$/;"	m	struct:DmtxRegion_struct	file:
rightKnown	src/img/dmtx.c	/^   int             rightKnown;    \/* known == 1; unknown == 0 *\/$/;"	m	struct:DmtxRegion_struct	file:
rightLoc	src/img/dmtx.c	/^   DmtxPixelLoc    rightLoc;      \/* known (arbitrary) location on right edge *\/$/;"	m	struct:DmtxRegion_struct	file:
ring	src/img/qrcode.c	/^    int                 ring;$/;"	m	struct:quirc_capstone	file:
riscv_cos_f32	src/img/apriltag.c	/^float32_t riscv_cos_f32($/;"	f
riscv_sin_f32	src/img/apriltag.c	/^float32_t riscv_sin_f32($/;"	f
root_mean_squared	src/img/picojpeg_util.c	/^   double root_mean_squared;$/;"	m	struct:image_compare_results_tag	file:
rotate90	src/img/apriltag.c	/^static uint64_t rotate90(uint64_t w, uint32_t d)$/;"	f	file:
rotate_capstone	src/img/qrcode.c	/^static void rotate_capstone(struct quirc_capstone *cap,$/;"	f	file:
rotation	src/img/apriltag.c	/^    uint8_t rotation; \/\/ number of rotations [0, 3]$/;"	m	struct:quick_decode_entry	file:
rotation	src/img/include/imlib.h	/^    float rotation;$/;"	m	struct:find_blobs_list_lnk_data
rotation	src/img/include/imlib.h	/^    uint16_t rotation;$/;"	m	struct:find_datamatrices_list_lnk_data
rotation	src/img/include/imlib.h	/^    uint16_t type, rotation;$/;"	m	struct:find_barcodes_list_lnk_data
rotation	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
rotation	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;$/;"	m	struct:py_datamatrix_obj	file:
rotation	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, type, rotation, quality;$/;"	m	struct:py_barcode_obj	file:
rotation	src/py/py_image.c	/^    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count;$/;"	m	struct:py_blob_obj	file:
rotation	src/py/py_image.c	/^    mp_obj_t x_translation, y_translation, rotation, scale, response;$/;"	m	struct:py_displacement_obj	file:
rotation	src/py/py_lcd.c	/^static uint8_t rotation = 0;$/;"	v	file:
round	src/img/apriltag.c	64;"	d	file:
round	src/img/dmtx.c	35;"	d	file:
round	src/img/lsd.c	35;"	d	file:
roundf	src/img/apriltag.c	65;"	d	file:
roundf	src/img/dmtx.c	36;"	d	file:
rowPadBytes	src/img/dmtx.c	/^   int             rowPadBytes;$/;"	m	struct:DmtxImage_struct	file:
rowSizeBytes	src/img/dmtx.c	/^   int             rowSizeBytes;$/;"	m	struct:DmtxImage_struct	file:
rows	src/img/include/imlib.h	/^    uint8_t rows, columns;$/;"	m	struct:find_datamatrices_list_lnk_data
rows	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;$/;"	m	struct:py_datamatrix_obj	file:
rs_calc_syndrome	zbar/rs.c	/^static void rs_calc_syndrome(const rs_gf256 *_gf,int _m0,$/;"	f	file:
rs_compute_genpoly	zbar/rs.c	/^void rs_compute_genpoly(const rs_gf256 *_gf,int _m0,$/;"	f
rs_correct	zbar/rs.c	/^int rs_correct(const rs_gf256 *_gf,int _m0,unsigned char *_data,int _ndata,$/;"	f
rs_cubic_solve	zbar/rs.c	/^static int rs_cubic_solve(const rs_gf256 *_gf,$/;"	f	file:
rs_encode	zbar/rs.c	/^void rs_encode(const rs_gf256 *_gf,unsigned char *_data,int _ndata,$/;"	f
rs_find_roots	zbar/rs.c	/^static int rs_find_roots(const rs_gf256 *_gf,unsigned char *_epos,$/;"	f	file:
rs_gdiv	zbar/rs.c	/^static unsigned rs_gdiv(const rs_gf256 *_gf,unsigned _a,unsigned _b){$/;"	f	file:
rs_gf256	zbar/rs.h	/^struct rs_gf256{$/;"	s
rs_gf256	zbar/rs.h	/^typedef struct rs_gf256 rs_gf256;$/;"	t	typeref:struct:rs_gf256
rs_gf256_init	zbar/rs.c	/^void rs_gf256_init(rs_gf256 *_gf,unsigned _ppoly){$/;"	f
rs_gmul	zbar/rs.c	/^static unsigned rs_gmul(const rs_gf256 *_gf,unsigned _a,unsigned _b){$/;"	f	file:
rs_gsqrt	zbar/rs.c	/^static unsigned rs_gsqrt(const rs_gf256 *_gf,unsigned _a){$/;"	f	file:
rs_hgmul	zbar/rs.c	/^static unsigned rs_hgmul(const rs_gf256 *_gf,unsigned _a,unsigned _logb){$/;"	f	file:
rs_init_lambda	zbar/rs.c	/^static void rs_init_lambda(const rs_gf256 *_gf,unsigned char *_lambda,int _npar,$/;"	f	file:
rs_modified_berlekamp_massey	zbar/rs.c	/^static int rs_modified_berlekamp_massey(const rs_gf256 *_gf,$/;"	f	file:
rs_poly_copy	zbar/rs.c	/^static void rs_poly_copy(unsigned char *_p,const unsigned char *_q,int _dp1){$/;"	f	file:
rs_poly_div_x	zbar/rs.c	/^static void rs_poly_div_x(unsigned char *_p,const unsigned char *_q,int _dp1){$/;"	f	file:
rs_poly_mul_x	zbar/rs.c	/^static void rs_poly_mul_x(unsigned char *_p,const unsigned char *_q,int _dp1){$/;"	f	file:
rs_poly_mult	zbar/rs.c	/^static void rs_poly_mult(const rs_gf256 *_gf,unsigned char *_p,int _dp1,$/;"	f	file:
rs_poly_zero	zbar/rs.c	/^static void rs_poly_zero(unsigned char *_p,int _dp1){$/;"	f	file:
rs_quadratic_solve	zbar/rs.c	/^static int rs_quadratic_solve(const rs_gf256 *_gf,unsigned _b,unsigned _c,$/;"	f	file:
rs_quartic_solve	zbar/rs.c	/^static int rs_quartic_solve(const rs_gf256 *_gf,$/;"	f	file:
run_cascade_classifier	src/img/haar.c	/^static int run_cascade_classifier(cascade_t* cascade, point_t pt)$/;"	f	file:
s	src/img/fmath.c	/^        uint32_t s : 1;$/;"	m	struct:__anon22::__anon23	file:
s10	src/img/zbar.c	/^    unsigned s10;               \/* current character width *\/$/;"	m	struct:i25_decoder_s	file:
s4	src/img/zbar.c	/^    unsigned s4, width;         \/* character width *\/$/;"	m	struct:ean_decoder_s	file:
s5	zbar/qr_finder.h	/^    unsigned s5;                \/* finder pattern width *\/$/;"	m	struct:qr_finder_s
s6	src/img/zbar.c	/^    unsigned s6;                        \/* 6-element character width *\/$/;"	m	struct:zbar_decoder_s	file:
s6	src/img/zbar.c	/^    unsigned s6;                \/* character width *\/$/;"	m	struct:code128_decoder_s	file:
s7	src/img/zbar.c	/^    unsigned s7;                \/* current character width *\/$/;"	m	struct:codabar_decoder_s	file:
s8	src/img/zbar.c	/^    unsigned s8;                \/* character width *\/$/;"	m	struct:pdf417_decoder_s	file:
s9	src/img/zbar.c	/^    unsigned s9;                \/* current character width *\/$/;"	m	struct:code39_decoder_s	file:
s_jpeg_ZigZag	src/img/jpeg.c	/^static const uint8_t s_jpeg_ZigZag[] = {$/;"	v	file:
s_offset0	src/img/agast.c	/^static int_fast16_t s_offset0;$/;"	v	file:
s_offset1	src/img/agast.c	/^static int_fast16_t s_offset1;$/;"	v	file:
s_offset2	src/img/agast.c	/^static int_fast16_t s_offset2;$/;"	v	file:
s_offset3	src/img/agast.c	/^static int_fast16_t s_offset3;$/;"	v	file:
s_offset4	src/img/agast.c	/^static int_fast16_t s_offset4;$/;"	v	file:
s_offset5	src/img/agast.c	/^static int_fast16_t s_offset5;$/;"	v	file:
s_offset6	src/img/agast.c	/^static int_fast16_t s_offset6;$/;"	v	file:
s_offset7	src/img/agast.c	/^static int_fast16_t s_offset7;$/;"	v	file:
s_width	src/img/agast.c	/^static int s_width=-1;$/;"	v	file:
sa	zbar/qrdec.h	/^    }sa;$/;"	m	union:qr_code_data_entry::__anon65	typeref:struct:qr_code_data_entry::__anon65::__anon67
sa_index	zbar/qrdec.h	/^      unsigned char sa_index;$/;"	m	struct:qr_code_data_entry::__anon65::__anon67
sa_index	zbar/qrdec.h	/^  unsigned char       sa_index;$/;"	m	struct:qr_code_data
sa_parity	zbar/qrdec.h	/^      unsigned char sa_parity;$/;"	m	struct:qr_code_data_entry::__anon65::__anon67
sa_parity	zbar/qrdec.h	/^  unsigned char       sa_parity;$/;"	m	struct:qr_code_data
sa_size	zbar/qrdec.h	/^      unsigned char sa_size;$/;"	m	struct:qr_code_data_entry::__anon65::__anon67
sa_size	zbar/qrdec.h	/^  unsigned char       sa_size;$/;"	m	struct:qr_code_data
safe_map_pixel	src/img/draw.c	/^static int safe_map_pixel(image_t *dst, image_t *src, int pixel)$/;"	f	file:
sample_pattern	src/img/orb.c	/^const static int sample_pattern[256*4] = {$/;"	v	file:
sample_point_t	src/img/orb.c	/^} __attribute__((aligned(8))) sample_point_t;$/;"	t	typeref:struct:__anon36	file:
saturation_regs	src/gc0328.c	/^static uint8_t saturation_regs[NUM_SATURATION_LEVELS][3]={$/;"	v	file:
saturation_regs	src/gc2145.c	/^static uint8_t saturation_regs[NUM_SATURATION_LEVELS][3] = {$/;"	v	file:
saturation_regs	src/ov2640.c	/^static const uint8_t saturation_regs[NUM_SATURATION_LEVELS + 1][5] = {$/;"	v	file:
saturation_regs	src/ov7740.c	/^static const uint8_t saturation_regs[NUM_SATURATION_LEVELS][2] = {$/;"	v	file:
save_image_format	src/img/include/imlib.h	/^typedef enum save_image_format {$/;"	g
save_image_format_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) save_image_format_t;$/;"	t	typeref:enum:save_image_format
scale	src/img/dmtx.c	/^   int             scale;$/;"	m	struct:DmtxDecode_struct	file:
scale	src/py/py_image.c	/^    mp_obj_t x_translation, y_translation, rotation, scale, response;$/;"	m	struct:py_displacement_obj	file:
scale_factor	src/img/include/imlib.h	/^    float scale_factor;             \/\/ Image scaling factor.$/;"	m	struct:cascade
scanGap	src/img/dmtx.c	/^   int             scanGap;$/;"	m	struct:DmtxDecode_struct	file:
sccb_i2c_init	src/cambus.c	/^int sccb_i2c_init(int8_t i2c, uint8_t pin_clk, uint8_t pin_sda, uint8_t gpio_clk, uint8_t gpio_sda, uint32_t freq)$/;"	f
sccb_i2c_read_byte	src/cambus.c	/^int sccb_i2c_read_byte(int8_t i2c, uint8_t addr, uint16_t reg, uint8_t reg_len, uint8_t *data, uint16_t timeout_ms)$/;"	f
sccb_i2c_recieve_byte	src/cambus.c	/^int sccb_i2c_recieve_byte(int8_t i2c, uint8_t addr, uint8_t *data, uint16_t timeout_ms)$/;"	f
sccb_i2c_write_byte	src/cambus.c	/^int sccb_i2c_write_byte(int8_t i2c, uint8_t addr, uint16_t reg, uint8_t reg_len, uint8_t data, uint16_t timeout_ms)$/;"	f
sccb_reg_width	src/cambus.c	/^static uint8_t sccb_reg_width = 8;$/;"	v	file:
scn	src/img/zbar.c	/^    zbar_scanner_t *scn;        \/* associated linear intensity scanner *\/$/;"	m	struct:zbar_image_scanner_s	file:
scn	zbar/img_scanner.c	/^    zbar_scanner_t *scn;        \/* associated linear intensity scanner *\/$/;"	m	struct:zbar_image_scanner_s	file:
score	src/img/agast.c	/^    uint16_t score;$/;"	m	struct:__anon4	file:
score	src/img/apriltag.c	/^    double  score;$/;"	m	struct:evaluate_quad_ret	file:
score	src/img/fast.c	/^    uint16_t score;$/;"	m	struct:__anon21	file:
score	src/img/include/imlib.h	/^    uint16_t score;$/;"	m	struct:kp
score_decodability	src/img/apriltag.c	/^double score_decodability(apriltag_family_t *family, image_u8_t *im, struct quad *quad, void *user)$/;"	f
score_goodness	src/img/apriltag.c	/^double score_goodness(apriltag_family_t *family, image_u8_t *im, struct quad *quad, void *user)$/;"	f
scores	src/img/qrcode.c	/^    int                 scores[4];$/;"	m	struct:polygon_score_data	file:
scratch_draw_line	src/img/draw.c	/^static void scratch_draw_line(image_t *img, int x0, int y0, int dx, int dy0, int dy1, float shear_dx, float shear_dy, int c)$/;"	f	file:
scratch_draw_pixel	src/img/draw.c	/^static void scratch_draw_pixel(image_t *img, int x0, int y0, int dx, int dy, float shear_dx, float shear_dy, int r0, int r1, int c)$/;"	f	file:
scratch_draw_rotated_ellipse	src/img/draw.c	/^static void scratch_draw_rotated_ellipse(image_t *img, int x, int y, int x_axis, int y_axis, int rotation, bool filled, int c, int thickness)$/;"	f	file:
scratch_draw_sheared_ellipse	src/img/draw.c	/^static void scratch_draw_sheared_ellipse(image_t *img, int x0, int y0, int width, int height, bool filled, float shear_dx, float shear_dy, int c, int thickness)$/;"	f	file:
screen_dir	src/py/py_lcd.c	/^static lcd_dir_t screen_dir = DIR_YX_RLDU;$/;"	v	file:
script_buf	src/ide_dbg.c	/^static vstr_t script_buf;$/;"	v	file:
script_need_interrupt	src/ide_dbg.c	/^static volatile bool script_need_interrupt = false;$/;"	v	file:
script_ready	src/ide_dbg.c	/^static volatile bool script_ready;$/;"	v	file:
script_running	src/ide_dbg.c	/^static volatile bool script_running;$/;"	v	file:
sde	src/include/sensor.h	/^    sde_t sde;                  \/\/ Special digital effects$/;"	m	struct:_sensor
sde_t	src/include/sensor.h	/^} sde_t;$/;"	t	typeref:enum:__anon52
seed	src/img/qrcode.c	/^    struct quirc_point  seed;$/;"	m	struct:quirc_region	typeref:struct:quirc_region::quirc_point	file:
segment	src/img/apriltag.c	/^struct segment$/;"	s	file:
segment_graph	src/img/selective_search.c	/^static void segment_graph(universe *u, int num_vertices, int num_edges, edge *edges, float c)$/;"	f	file:
segs	src/img/zbar.c	/^    databar_segment_t *segs;    \/* active segment list *\/$/;"	m	struct:databar_decoder_s	file:
self_parity	zbar/qrdec.h	/^  unsigned char       self_parity;$/;"	m	struct:qr_code_data
sensor	src/sensor.c	/^sensor_t sensor = {0};$/;"	v
sensor_attr_t	src/include/sensor.h	/^} sensor_attr_t;$/;"	t	typeref:enum:__anon53
sensor_check_buffsize	src/sensor.c	/^static void sensor_check_buffsize()$/;"	f	file:
sensor_config	src/sensor.c	/^} sensor_config = {$/;"	v	typeref:struct:sensor_config_t	file:
sensor_config_t	src/sensor.c	/^static struct sensor_config_t {$/;"	s	file:
sensor_default_regs	src/gc0328.c	/^uint8_t sensor_default_regs[][2] = {$/;"	v
sensor_deinit	src/sensor.c	/^void sensor_deinit()$/;"	f
sensor_flush	src/sensor.c	/^int sensor_flush(void)$/;"	f
sensor_gc2145_default_regs	src/include/gc2145_regs.h	/^const uint8_t sensor_gc2145_default_regs[][2] =$/;"	v
sensor_gc2145_qqvga_config	src/include/gc2145_regs.h	/^const uint8_t sensor_gc2145_qqvga_config[][2] = {$/;"	v
sensor_gc2145_qvga_config	src/include/gc2145_regs.h	/^static const uint8_t sensor_gc2145_qvga_config[][2] = { \/\/k210$/;"	v
sensor_gc2145_vga_config	src/include/gc2145_regs.h	/^static const uint8_t sensor_gc2145_vga_config[][2] = {$/;"	v
sensor_get_exposure_us	src/sensor.c	/^int sensor_get_exposure_us(int *exposure_us)$/;"	f
sensor_get_gain_db	src/sensor.c	/^int sensor_get_gain_db(float *gain_db)$/;"	f
sensor_get_id	src/sensor.c	/^int sensor_get_id()$/;"	f
sensor_get_rgb_gain_db	src/sensor.c	/^int sensor_get_rgb_gain_db(float *r_gain_db, float *g_gain_db, float *b_gain_db)$/;"	f
sensor_init0	src/sensor.c	/^void sensor_init0()$/;"	f
sensor_init_dvp	src/sensor.c	/^int sensor_init_dvp(mp_int_t freq, bool default_freq)$/;"	f
sensor_init_fb	src/sensor.c	/^void sensor_init_fb()$/;"	f
sensor_init_irq	src/sensor.c	/^int sensor_init_irq()$/;"	f
sensor_irq	src/sensor.c	/^static int sensor_irq(void *ctx)$/;"	f	file:
sensor_load_config	src/sensor.c	/^void sensor_load_config(struct sensor_config_t *sensor_cfg)$/;"	f
sensor_module	src/py/py_sensor.c	/^const mp_obj_module_t sensor_module = {$/;"	v
sensor_read_reg	src/sensor.c	/^int sensor_read_reg(uint8_t reg_addr)$/;"	f
sensor_reset	src/sensor.c	/^int sensor_reset(mp_int_t freq, bool default_freq, bool set_regs, bool double_buff, uint8_t choice_dev)$/;"	f
sensor_run	src/sensor.c	/^int sensor_run(int enable)$/;"	f
sensor_set_auto_exposure	src/sensor.c	/^int sensor_set_auto_exposure(int enable, int exposure_us)$/;"	f
sensor_set_auto_gain	src/sensor.c	/^int sensor_set_auto_gain(int enable, float gain_db, float gain_db_ceiling)$/;"	f
sensor_set_auto_whitebal	src/sensor.c	/^int sensor_set_auto_whitebal(int enable, float r_gain_db, float g_gain_db, float b_gain_db)$/;"	f
sensor_set_brightness	src/sensor.c	/^int sensor_set_brightness(int level)$/;"	f
sensor_set_colorbar	src/sensor.c	/^int sensor_set_colorbar(int enable)$/;"	f
sensor_set_contrast	src/sensor.c	/^int sensor_set_contrast(int level)$/;"	f
sensor_set_framerate	src/sensor.c	/^int sensor_set_framerate(framerate_t framerate)$/;"	f
sensor_set_framesize	src/sensor.c	/^int sensor_set_framesize(framesize_t framesize, bool set_regs)$/;"	f
sensor_set_gainceiling	src/sensor.c	/^int sensor_set_gainceiling(gainceiling_t gainceiling)$/;"	f
sensor_set_hmirror	src/sensor.c	/^int sensor_set_hmirror(int enable)$/;"	f
sensor_set_lens_correction	src/sensor.c	/^int sensor_set_lens_correction(int enable, int radi, int coef)$/;"	f
sensor_set_pixformat	src/sensor.c	/^int sensor_set_pixformat(pixformat_t pixformat, bool set_regs)$/;"	f
sensor_set_quality	src/sensor.c	/^int sensor_set_quality(int qs)$/;"	f
sensor_set_saturation	src/sensor.c	/^int sensor_set_saturation(int level)$/;"	f
sensor_set_special_effect	src/sensor.c	/^int sensor_set_special_effect(sde_t sde)$/;"	f
sensor_set_vflip	src/sensor.c	/^int sensor_set_vflip(int enable)$/;"	f
sensor_set_windowing	src/sensor.c	/^int sensor_set_windowing(int x, int y, int w, int h)$/;"	f
sensor_shutdown	src/sensor.c	/^int sensor_shutdown(int enable)$/;"	f
sensor_sleep	src/sensor.c	/^int sensor_sleep(int enable)$/;"	f
sensor_snapshot	src/sensor.c	/^int sensor_snapshot(sensor_t *sensor, image_t *image, streaming_cb_t streaming_cb, bool update_jb)$/;"	f
sensor_t	src/include/sensor.h	/^typedef struct _sensor sensor_t;$/;"	t	typeref:struct:_sensor
sensor_t	src/include/sensor.h	/^} sensor_t __attribute__((aligned (8)));$/;"	t	typeref:struct:_sensor
sensor_write_reg	src/sensor.c	/^int sensor_write_reg(uint8_t reg_addr, uint16_t reg_data)$/;"	f
sensro_gc_detect	src/sensor.c	/^int sensro_gc_detect(sensor_t *sensor, bool pwnd)$/;"	f
sensro_gc_scan	src/sensor.c	/^uint16_t sensro_gc_scan()$/;"	f
sensro_mt_detect	src/sensor.c	/^int sensro_mt_detect(sensor_t *sensor, bool pwnd)$/;"	f
sensro_ov_detect	src/sensor.c	/^int sensro_ov_detect(sensor_t *sensor)$/;"	f
seq	src/img/zbar.c	/^    unsigned seq;               \/* page\/frame sequence number *\/$/;"	m	struct:zbar_image_s	file:
seq	zbar/image.h	/^    unsigned seq;               \/* page\/frame sequence number *\/$/;"	m	struct:zbar_image_s
setName	pybind_test/whjy.h	/^    void setName(string stuName){  $/;"	f	struct:student
set_auto_exposure	src/include/sensor.h	/^    int  (*set_auto_exposure)   (sensor_t *sensor, int enable, int exposure_us);$/;"	m	struct:_sensor
set_auto_exposure	src/ov2640.c	/^static int set_auto_exposure(sensor_t *sensor, int enable, int exposure_us)$/;"	f	file:
set_auto_exposure	src/ov3660.c	/^static int set_auto_exposure(sensor_t *sensor, int enable, int exposure_us)$/;"	f	file:
set_auto_exposure	src/ov5640.c	/^static int set_auto_exposure(sensor_t *sensor, int enable, int exposure_us)$/;"	f	file:
set_auto_exposure	src/ov5642.c	/^static int set_auto_exposure(sensor_t *sensor, int enable, int exposure_us)$/;"	f	file:
set_auto_exposure	src/ov7740.c	/^static int set_auto_exposure(sensor_t *sensor, int enable, int exposure_us)$/;"	f	file:
set_auto_gain	src/include/sensor.h	/^    int  (*set_auto_gain)       (sensor_t *sensor, int enable, float gain_db, float gain_db_ceiling);$/;"	m	struct:_sensor
set_auto_gain	src/ov2640.c	/^static int set_auto_gain(sensor_t *sensor, int enable, float gain_db, float gain_db_ceiling)$/;"	f	file:
set_auto_gain	src/ov3660.c	/^static int set_auto_gain(sensor_t *sensor, int enable, float gain_db, float gain_db_ceiling)$/;"	f	file:
set_auto_gain	src/ov5640.c	/^static int set_auto_gain(sensor_t *sensor, int enable, float gain_db, float gain_db_ceiling)$/;"	f	file:
set_auto_gain	src/ov5642.c	/^static int set_auto_gain(sensor_t *sensor, int enable, float gain_db, float gain_db_ceiling)$/;"	f	file:
set_auto_gain	src/ov7740.c	/^static int set_auto_gain(sensor_t *sensor, int enable, float gain_db, float gain_db_ceiling)$/;"	f	file:
set_auto_whitebal	src/include/sensor.h	/^    int  (*set_auto_whitebal)   (sensor_t *sensor, int enable, float r_gain_db, float g_gain_db, float b_gain_db);$/;"	m	struct:_sensor
set_auto_whitebal	src/ov2640.c	/^static int set_auto_whitebal(sensor_t *sensor, int enable, float r_gain_db, float g_gain_db, float b_gain_db)$/;"	f	file:
set_auto_whitebal	src/ov3660.c	/^static int set_auto_whitebal(sensor_t *sensor, int enable, float r_gain_db, float g_gain_db, float b_gain_db)$/;"	f	file:
set_auto_whitebal	src/ov5640.c	/^static int set_auto_whitebal(sensor_t *sensor, int enable, float r_gain_db, float g_gain_db, float b_gain_db)$/;"	f	file:
set_auto_whitebal	src/ov5642.c	/^static int set_auto_whitebal(sensor_t *sensor, int enable, float r_gain_db, float g_gain_db, float b_gain_db)$/;"	f	file:
set_auto_whitebal	src/ov7740.c	/^static int set_auto_whitebal(sensor_t *sensor, int enable, float r_gain_db, float g_gain_db, float b_gain_db)$/;"	f	file:
set_brightness	src/include/sensor.h	/^    int  (*set_brightness)      (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_brightness	src/ov2640.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_brightness	src/ov3660.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_brightness	src/ov5640.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_brightness	src/ov5642.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_brightness	src/ov7740.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_colorbar	src/include/sensor.h	/^    int  (*set_colorbar)        (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_colorbar	src/ov2640.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	src/ov3660.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	src/ov5640.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	src/ov5642.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	src/ov7740.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_contrast	src/include/sensor.h	/^    int  (*set_contrast)        (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_contrast	src/ov2640.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	src/ov3660.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	src/ov5640.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	src/ov5642.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	src/ov7740.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_dsp	src/img/template.c	/^static void set_dsp(int cx, int cy, point_t *pts, bool sdsp, int step)$/;"	f	file:
set_framerate	src/include/sensor.h	/^    int  (*set_framerate)       (sensor_t *sensor, framerate_t framerate);$/;"	m	struct:_sensor
set_framerate	src/ov2640.c	/^static int set_framerate(sensor_t *sensor, framerate_t framerate)$/;"	f	file:
set_framerate	src/ov3660.c	/^static int set_framerate(sensor_t *sensor, framerate_t framerate)$/;"	f	file:
set_framerate	src/ov5640.c	/^static int set_framerate(sensor_t *sensor, framerate_t framerate)$/;"	f	file:
set_framerate	src/ov5642.c	/^static int set_framerate(sensor_t *sensor, framerate_t framerate)$/;"	f	file:
set_framerate	src/ov7740.c	/^static int set_framerate(sensor_t *sensor, framerate_t framerate)$/;"	f	file:
set_framesize	src/include/sensor.h	/^    int  (*set_framesize)       (sensor_t *sensor, framesize_t framesize);$/;"	m	struct:_sensor
set_framesize	src/ov2640.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	src/ov3660.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	src/ov5640.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	src/ov5642.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	src/ov7740.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_gainceiling	src/include/sensor.h	/^    int  (*set_gainceiling)     (sensor_t *sensor, gainceiling_t gainceiling);$/;"	m	struct:_sensor
set_gainceiling	src/ov2640.c	/^static int set_gainceiling(sensor_t *sensor, gainceiling_t gainceiling)$/;"	f	file:
set_gainceiling	src/ov3660.c	/^static int set_gainceiling(sensor_t *sensor, gainceiling_t gainceiling)$/;"	f	file:
set_gainceiling	src/ov5640.c	/^static int set_gainceiling(sensor_t *sensor, gainceiling_t gainceiling)$/;"	f	file:
set_gainceiling	src/ov5642.c	/^static int set_gainceiling(sensor_t *sensor, gainceiling_t gainceiling)$/;"	f	file:
set_gainceiling	src/ov7740.c	/^static int set_gainceiling(sensor_t *sensor, gainceiling_t gainceiling)$/;"	f	file:
set_hmirror	src/include/sensor.h	/^    int  (*set_hmirror)         (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_hmirror	src/ov2640.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	src/ov3660.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	src/ov5640.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	src/ov5642.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	src/ov7740.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_lens_correction	src/include/sensor.h	/^    int  (*set_lens_correction) (sensor_t *sensor, int enable, int radi, int coef);$/;"	m	struct:_sensor
set_lens_correction	src/ov5640.c	/^static int set_lens_correction(sensor_t *sensor, int enable, int radi, int coef)$/;"	f	file:
set_lens_correction	src/ov5642.c	/^static int set_lens_correction(sensor_t *sensor, int enable, int radi, int coef)$/;"	f	file:
set_lens_correction	src/ov7740.c	/^static int set_lens_correction(sensor_t *sensor, int enable, int radi, int coef)$/;"	f	file:
set_pixformat	src/include/sensor.h	/^    int  (*set_pixformat)       (sensor_t *sensor, pixformat_t pixformat);$/;"	m	struct:_sensor
set_pixformat	src/ov2640.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	src/ov3660.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	src/ov5640.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	src/ov5642.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	src/ov7740.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_quality	src/include/sensor.h	/^    int  (*set_quality)         (sensor_t *sensor, int quality);$/;"	m	struct:_sensor
set_quality	src/ov2640.c	/^static int set_quality(sensor_t *sensor, int qs)$/;"	f	file:
set_quality	src/ov3660.c	/^static int set_quality(sensor_t *sensor, int qs)$/;"	f	file:
set_saturation	src/include/sensor.h	/^    int  (*set_saturation)      (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_saturation	src/ov2640.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_saturation	src/ov3660.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_saturation	src/ov5640.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_saturation	src/ov5642.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_saturation	src/ov7740.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_special_effect	src/include/sensor.h	/^    int  (*set_special_effect)  (sensor_t *sensor, sde_t sde);$/;"	m	struct:_sensor
set_special_effect	src/ov5640.c	/^static int set_special_effect(sensor_t *sensor, sde_t sde)$/;"	f	file:
set_special_effect	src/ov5642.c	/^static int set_special_effect(sensor_t *sensor, sde_t sde)$/;"	f	file:
set_special_effect	src/ov7740.c	/^static int set_special_effect(sensor_t *sensor, sde_t sde)$/;"	f	file:
set_vflip	src/include/sensor.h	/^    int  (*set_vflip)           (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_vflip	src/ov2640.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	src/ov3660.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	src/ov5640.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	src/ov5642.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	src/ov7740.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_windowing	src/include/sensor.h	/^    int  (*set_windowing)       (framesize_t framesize, int x, int y, int w, int h);$/;"	m	struct:_sensor
setup_qr_perspective	src/img/qrcode.c	/^static void setup_qr_perspective(struct quirc *q, int index)$/;"	f	file:
sev	zbar/error.h	/^    errsev_t sev;$/;"	m	struct:errinfo_s
sev_str	zbar/error.c	/^static const char *  sev_str[] = {$/;"	v	file:
sgn	src/img/apriltag.c	/^static inline double sgn(double v)$/;"	f	file:
shift	src/img/dmtx.c	/^   int             shift;$/;"	m	struct:C40TextState_struct	file:
side	src/img/zbar.c	/^    unsigned side : 1;          \/* data character side of finder *\/$/;"	m	struct:databar_segment_s	file:
signed_randf	src/img/apriltag.c	/^static inline float signed_randf()$/;"	f	file:
similarity_max	src/img/stats.c	/^    float similarity_sum, similarity_sum_2, similarity_min, similarity_max;$/;"	m	struct:imlib_similatiry_line_op_state	file:
similarity_min	src/img/stats.c	/^    float similarity_sum, similarity_sum_2, similarity_min, similarity_max;$/;"	m	struct:imlib_similatiry_line_op_state	file:
similarity_sum	src/img/stats.c	/^    float similarity_sum, similarity_sum_2, similarity_min, similarity_max;$/;"	m	struct:imlib_similatiry_line_op_state	file:
similarity_sum_2	src/img/stats.c	/^    float similarity_sum, similarity_sum_2, similarity_min, similarity_max;$/;"	m	struct:imlib_similatiry_line_op_state	file:
simple_color	src/img/include/imlib.h	/^typedef struct simple_color {$/;"	s
simple_color	test/python_module/test.c	/^typedef struct simple_color {$/;"	s	file:
simple_color_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) simple_color_t;$/;"	t	typeref:struct:simple_color
simple_color_t	test/python_module/test.c	/^} __attribute__((aligned(8))) simple_color_t;$/;"	t	typeref:struct:simple_color	file:
sin	src/img/apriltag.c	273;"	d	file:
sin	src/img/dmtx.c	54;"	d	file:
sin	src/img/lsd.c	43;"	d	file:
sinTable_f32	src/img/apriltag.c	/^const float32_t sinTable_f32[FAST_MATH_TABLE_SIZE + 1] = {$/;"	v
sin_table	src/img/sincos_tab.c	/^const float sin_table[360] = {$/;"	v
singular	src/img/apriltag.c	/^    int singular;$/;"	m	struct:__anon7	file:
sinh	src/img/lsd.c	45;"	d	file:
size	src/img/apriltag.c	/^    int size; \/\/ how many elements?$/;"	m	struct:zarray	file:
size	src/img/include/collections.h	/^    size_t head_ptr, tail_ptr, len, size, data_len;$/;"	m	struct:fifo
size	src/img/include/collections.h	/^    size_t len, size, data_len;$/;"	m	struct:lifo
size	src/img/include/collections.h	/^    size_t size, data_len;$/;"	m	struct:list
size	src/img/include/collections.h	/^    size_t size;$/;"	m	struct:bitmap
size	src/img/include/imlib.h	/^typedef struct size {$/;"	s
size	src/img/lsd.c	/^  unsigned int size;$/;"	m	struct:ntuple_list_s	file:
size	src/img/picojpeg_util.c	/^   uint     size;$/;"	m	struct:__anon38	file:
size	src/img/qrcode.c	/^    int                 size;$/;"	m	struct:quirc_code	file:
size	src/img/selective_search.c	/^    uint16_t size;$/;"	m	struct:__anon41	file:
size	src/include/framebuffer.h	/^    int size;$/;"	m	struct:jpegbuffer
size	zbar/image.c	/^    uint32_t size;$/;"	m	struct:zimg_hdr_s	file:
size	zbar/qrdec.c	/^  int                size[2];$/;"	m	struct:qr_finder	file:
sizeIdx	src/img/dmtx.c	/^   int             sizeIdx;       \/* Index of arrays that store Data Matrix constants *\/$/;"	m	struct:DmtxRegion_struct	file:
sizeIdxExpected	src/img/dmtx.c	/^   int             sizeIdxExpected;$/;"	m	struct:DmtxDecode_struct	file:
size_buf	src/img/zbar.c	/^static inline char size_buf (zbar_decoder_t *dcode,$/;"	f	file:
size_buf	zbar/decoder.h	/^static inline char size_buf (zbar_decoder_t *dcode,$/;"	f
size_set	src/include/sensor.h	/^    bool     size_set;          \/\/ set_framesie called$/;"	m	struct:_sensor
size_similarity	src/img/selective_search.c	/^static inline float size_similarity (int a, int b, int size)$/;"	f	file:
skipVariableMarker	src/img/picojpeg.c	/^static uint8 skipVariableMarker(void)$/;"	f	file:
sleep	src/include/sensor.h	/^    int  (*sleep)               (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
sleep	src/ov5640.c	/^static int sleep(sensor_t *sensor, int enable)$/;"	f	file:
sleep	src/ov5642.c	/^static int sleep(sensor_t *sensor, int enable)$/;"	f	file:
slv_addr	src/include/sensor.h	/^    uint8_t  slv_addr;          \/\/ Sensor I2C slave address.$/;"	m	struct:_sensor
snapshot	src/include/sensor.h	/^    int  (*snapshot)            (sensor_t *sensor, image_t *image, streaming_cb_t streaming_cb, bool update_jb);$/;"	m	struct:_sensor
snprintf	src/img/dmtx.c	18;"	d	file:
source	src/img/font.c	/^  uint8_t source;$/;"	m	struct:font	file:
spammodule	test/python_module/image.c	/^static struct PyModuleDef spammodule = {$/;"	v	typeref:struct:PyModuleDef	file:
spammodule	test/python_module/image_new.c	/^static struct PyModuleDef spammodule = {$/;"	v	typeref:struct:PyModuleDef	file:
span_func_t	src/img/qrcode.c	/^typedef void (*span_func_t)(void *user_data, int y, int left, int right);$/;"	t	file:
sq	src/img/apriltag.c	/^static inline double sq(double v)$/;"	f	file:
sqrt	src/img/apriltag.c	58;"	d	file:
sqrt	src/img/dmtx.c	29;"	d	file:
sqrt	src/img/lsd.c	32;"	d	file:
sqrtf	src/img/apriltag.c	59;"	d	file:
sqrtf	src/img/dmtx.c	30;"	d	file:
square	src/img/selective_search.c	/^static inline float square(float x) { return x*x; };$/;"	f	file:
squareDevn	src/img/dmtx.c	/^   double          squareDevn;$/;"	m	struct:DmtxDecode_struct	file:
src	zbar/image.h	/^    zbar_video_t *src;          \/* originator *\/$/;"	m	struct:zbar_image_s
srcidx	zbar/image.h	/^    int srcidx;                 \/* index used by originator *\/$/;"	m	struct:zbar_image_s
ssq	src/img/include/imlib.h	/^    mw_image_t *ssq;                \/\/ Squared integral image.$/;"	m	struct:cascade
stages_array	src/img/include/imlib.h	/^    uint8_t *stages_array;          \/\/ Number of features per stage.$/;"	m	struct:cascade
stages_thresh_array	src/img/include/imlib.h	/^    int16_t *stages_thresh_array;   \/\/ Stages thresholds.$/;"	m	struct:cascade
start	src/img/zbar.c	/^    unsigned char start;        \/* start character *\/$/;"	m	struct:code128_decoder_s	file:
startPos	src/img/dmtx.c	/^   int             startPos;      \/* X and Y coordinate of first cross center in pattern *\/$/;"	m	struct:DmtxScanGrid_struct	file:
stat_img_syms_inuse	src/img/zbar.c	/^    int stat_img_syms_inuse, stat_img_syms_recycle;$/;"	m	struct:zbar_image_scanner_s	file:
stat_img_syms_inuse	zbar/img_scanner.c	/^    int stat_img_syms_inuse, stat_img_syms_recycle;$/;"	m	struct:zbar_image_scanner_s	file:
stat_img_syms_recycle	src/img/zbar.c	/^    int stat_img_syms_inuse, stat_img_syms_recycle;$/;"	m	struct:zbar_image_scanner_s	file:
stat_img_syms_recycle	zbar/img_scanner.c	/^    int stat_img_syms_inuse, stat_img_syms_recycle;$/;"	m	struct:zbar_image_scanner_s	file:
stat_iscn_syms_inuse	src/img/zbar.c	/^    int stat_iscn_syms_inuse, stat_iscn_syms_recycle;$/;"	m	struct:zbar_image_scanner_s	file:
stat_iscn_syms_inuse	zbar/img_scanner.c	/^    int stat_iscn_syms_inuse, stat_iscn_syms_recycle;$/;"	m	struct:zbar_image_scanner_s	file:
stat_iscn_syms_recycle	src/img/zbar.c	/^    int stat_iscn_syms_inuse, stat_iscn_syms_recycle;$/;"	m	struct:zbar_image_scanner_s	file:
stat_iscn_syms_recycle	zbar/img_scanner.c	/^    int stat_iscn_syms_inuse, stat_iscn_syms_recycle;$/;"	m	struct:zbar_image_scanner_s	file:
stat_sym_new	src/img/zbar.c	/^    int stat_sym_new;$/;"	m	struct:zbar_image_scanner_s	file:
stat_sym_new	zbar/img_scanner.c	/^    int stat_sym_new;$/;"	m	struct:zbar_image_scanner_s	file:
stat_sym_recycle	src/img/zbar.c	/^    int stat_sym_recycle[RECYCLE_BUCKETS];$/;"	m	struct:zbar_image_scanner_s	file:
stat_sym_recycle	zbar/img_scanner.c	/^    int stat_sym_recycle[RECYCLE_BUCKETS];$/;"	m	struct:zbar_image_scanner_s	file:
stat_syms_new	src/img/zbar.c	/^    int stat_syms_new;$/;"	m	struct:zbar_image_scanner_s	file:
stat_syms_new	zbar/img_scanner.c	/^    int stat_syms_new;$/;"	m	struct:zbar_image_scanner_s	file:
state	src/img/zbar.c	/^    signed char state;          \/* module position of w[idx] in symbol *\/$/;"	m	struct:ean_pass_s	file:
statistics	src/img/include/imlib.h	/^typedef struct statistics {$/;"	s
statistics_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) statistics_t;$/;"	t	typeref:struct:statistics
std	src/img/include/imlib.h	/^    int std;                        \/\/ Image standard deviation.$/;"	m	struct:cascade
std	src/py/py_image.c	/^    mp_obj_t avg, std, min, max;$/;"	m	struct:py_similarity_obj	file:
std_ac_chrominance_nrcodes	src/img/jpeg.c	/^static const uint8_t std_ac_chrominance_nrcodes[] = {0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77};$/;"	v	file:
std_ac_chrominance_values	src/img/jpeg.c	/^static const uint8_t std_ac_chrominance_values[] = {$/;"	v	file:
std_ac_luminance_nrcodes	src/img/jpeg.c	/^static const uint8_t std_ac_luminance_nrcodes[] = {0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d};$/;"	v	file:
std_ac_luminance_values	src/img/jpeg.c	/^static const uint8_t std_ac_luminance_values[] = {$/;"	v	file:
std_dc_chrominance_nrcodes	src/img/jpeg.c	/^static const uint8_t std_dc_chrominance_nrcodes[] = {0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0};$/;"	v	file:
std_dc_chrominance_values	src/img/jpeg.c	/^static const uint8_t std_dc_chrominance_values[] = {0,1,2,3,4,5,6,7,8,9,10,11};$/;"	v	file:
std_dc_luminance_nrcodes	src/img/jpeg.c	/^static const uint8_t std_dc_luminance_nrcodes[] = {0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0};$/;"	v	file:
std_dc_luminance_values	src/img/jpeg.c	/^static const uint8_t std_dc_luminance_values[] = {0,1,2,3,4,5,6,7,8,9,10,11};$/;"	v	file:
steep	src/img/dmtx.c	/^   int             steep;$/;"	m	struct:DmtxBresLine_struct	file:
step	src/img/dmtx.c	/^   int             step;$/;"	m	struct:DmtxFollow_struct	file:
step	src/img/include/imlib.h	/^    int step;                       \/\/ Image scanning factor.$/;"	m	struct:cascade
stepBeg	src/img/dmtx.c	/^   int             stepBeg;$/;"	m	struct:DmtxBestLine_struct	file:
stepNeg	src/img/dmtx.c	/^   int             stepNeg;$/;"	m	struct:DmtxBestLine_struct	file:
stepPos	src/img/dmtx.c	/^   int             stepPos;$/;"	m	struct:DmtxBestLine_struct	file:
stepR	src/img/dmtx.c	/^   int             stepR;$/;"	m	struct:DmtxRegion_struct	file:
stepT	src/img/dmtx.c	/^   int             stepT;$/;"	m	struct:DmtxRegion_struct	file:
stepsTotal	src/img/dmtx.c	/^   int             stepsTotal;    \/* *\/$/;"	m	struct:DmtxRegion_struct	file:
stone	src/img/qrcode.c	/^    int                 stone;$/;"	m	struct:quirc_capstone	file:
storage	zbar/qrdec.c	/^  int                  storage;$/;"	m	struct:qr_pack_buf	file:
streaming_cb_t	src/include/sensor.h	/^typedef bool (*streaming_cb_t)(image_t *image);$/;"	t
stride	src/img/apriltag.c	/^    const int32_t stride; \/\/ bytes per line$/;"	m	struct:image_u8x3	file:
stride	src/img/apriltag.c	/^    const int32_t stride; \/\/ bytes per line$/;"	m	struct:image_u8x4	file:
stride	src/img/apriltag.c	/^    const int32_t stride; \/\/ floats per line$/;"	m	struct:image_f32	file:
stride	src/img/apriltag.c	/^    const int32_t stride; \/\/ int32_ts per line$/;"	m	struct:image_u32	file:
stride	src/img/apriltag.c	/^    int32_t stride;$/;"	m	struct:image_u8	file:
student	pybind_test/whjy.h	/^    student(string n){  $/;"	f	struct:student
student	pybind_test/whjy.h	/^struct student{  $/;"	s
stuffChar	src/img/picojpeg.c	/^static PJPG_INLINE void stuffChar(uint8 i)$/;"	f	file:
subAndClamp	src/img/picojpeg.c	/^static PJPG_INLINE uint8 subAndClamp(uint8 a, int16 b)$/;"	f	file:
sum	src/img/include/imlib.h	/^    mw_image_t *sum;                \/\/ Integral image.$/;"	m	struct:cascade
sum	src/img/zbar.c	/^    unsigned short sum;$/;"	m	struct:group_s	file:
sum2Buckets	src/img/stats.c	/^    int *sumBucketsOfX, *sumBucketsOfY, *sum2BucketsOfX, *sum2BucketsOfY, *sum2Buckets;$/;"	m	struct:imlib_similatiry_line_op_state	file:
sum2BucketsOfX	src/img/stats.c	/^    int *sumBucketsOfX, *sumBucketsOfY, *sum2BucketsOfX, *sum2BucketsOfY, *sum2Buckets;$/;"	m	struct:imlib_similatiry_line_op_state	file:
sum2BucketsOfY	src/img/stats.c	/^    int *sumBucketsOfX, *sumBucketsOfY, *sum2BucketsOfX, *sum2BucketsOfY, *sum2Buckets;$/;"	m	struct:imlib_similatiry_line_op_state	file:
sumBucketsOfX	src/img/stats.c	/^    int *sumBucketsOfX, *sumBucketsOfY, *sum2BucketsOfX, *sum2BucketsOfY, *sum2Buckets;$/;"	m	struct:imlib_similatiry_line_op_state	file:
sumBucketsOfY	src/img/stats.c	/^    int *sumBucketsOfX, *sumBucketsOfY, *sum2BucketsOfX, *sum2BucketsOfY, *sum2Buckets;$/;"	m	struct:imlib_similatiry_line_op_state	file:
svd22	src/img/affine.c	/^static void svd22(const float a[4], float u[4], float s[2], float v[4])$/;"	f	file:
svd22	src/img/apriltag.c	/^void svd22(const double A[4], double U[4], double S[2], double V[4])$/;"	f
svd_sym_singular_values	src/img/apriltag.c	/^void svd_sym_singular_values(double A00, double A01, double A11,$/;"	f
svg_close	src/img/zbar.c	33;"	d	file:
svg_group_end	src/img/zbar.c	32;"	d	file:
svg_group_start	src/img/zbar.c	29;"	d	file:
svg_image	src/img/zbar.c	28;"	d	file:
svg_open	src/img/zbar.c	27;"	d	file:
svg_path_end	src/img/zbar.c	31;"	d	file:
svg_path_start	src/img/zbar.c	30;"	d	file:
svga_config	src/ov2640.c	/^static const uint8_t svga_config[][2] = { \/\/k210 $/;"	v	file:
swap	pybind_test/image.cpp	/^void swap(int* a, int* b) {$/;"	f
swap	src/img/fft.c	/^ALWAYS_INLINE static void swap(float *a, float *b)$/;"	f	file:
swap	src/img/include/imlib.h	/^    uint32_t **swap;$/;"	m	struct:__anon28
swap	src/img/qsort.c	57;"	d	file:
swapcode	src/img/qsort.c	35;"	d	file:
swapfunc	src/img/qsort.c	/^static __inline void swapfunc(char *a, char *b, size_t n, int swaptype)$/;"	f	file:
sym_add_point	src/img/zbar.c	/^static inline void sym_add_point (zbar_symbol_t *sym,$/;"	f	file:
sym_add_point	zbar/symbol.h	/^static inline void sym_add_point (zbar_symbol_t *sym,$/;"	f
sym_configs	src/img/zbar.c	/^    int sym_configs[1][NUM_SYMS]; \/* per-symbology configurations *\/$/;"	m	struct:zbar_image_scanner_s	file:
symbolCols	src/img/dmtx.c	/^   int             symbolCols;    \/* Number of total columns in symbol including alignment patterns *\/$/;"	m	struct:DmtxRegion_struct	file:
symbolRows	src/img/dmtx.c	/^   int             symbolRows;    \/* Number of total rows in symbol including alignment patterns *\/$/;"	m	struct:DmtxRegion_struct	file:
symbol_handler	src/img/zbar.c	/^static void symbol_handler (zbar_decoder_t *dcode)$/;"	f	file:
symbol_handler	zbar/img_scanner.c	/^static void symbol_handler (zbar_decoder_t *dcode)$/;"	f	file:
symbol_partial_e	src/img/zbar.c	/^typedef enum symbol_partial_e {$/;"	g	file:
symbol_partial_t	src/img/zbar.c	/^} __attribute__((aligned(8)))symbol_partial_t;$/;"	t	typeref:enum:symbol_partial_e	file:
syms	src/img/zbar.c	/^    zbar_symbol_set_t *syms;    \/* components of composite result *\/$/;"	m	struct:zbar_symbol_s	file:
syms	src/img/zbar.c	/^    zbar_symbol_set_t *syms;    \/* decoded result set *\/$/;"	m	struct:zbar_image_s	file:
syms	src/img/zbar.c	/^    zbar_symbol_set_t *syms;    \/* previous decode results *\/$/;"	m	struct:zbar_image_scanner_s	file:
syms	zbar/image.h	/^    zbar_symbol_set_t *syms;    \/* decoded result set *\/$/;"	m	struct:zbar_image_s
syms	zbar/img_scanner.c	/^    zbar_symbol_set_t *syms;    \/* previous decode results *\/$/;"	m	struct:zbar_image_scanner_s	file:
syms	zbar/symbol.h	/^    zbar_symbol_set_t *syms;    \/* components of composite result *\/$/;"	m	struct:zbar_symbol_s
systick_sleep	src/sensor.c	41;"	d	file:
t	src/img/edge.c	/^    uint16_t t;$/;"	m	struct:gvec	file:
tMax	src/img/dmtx.c	/^   double          tMax;$/;"	m	struct:DmtxRay2_struct	file:
tMin	src/img/dmtx.c	/^   double          tMin;$/;"	m	struct:DmtxRay2_struct	file:
tag16h5	src/img/apriltag.c	/^const apriltag_family_t tag16h5 = {$/;"	v
tag25h7	src/img/apriltag.c	/^const apriltag_family_t tag25h7 = {$/;"	v
tag25h9	src/img/apriltag.c	/^const apriltag_family_t tag25h9 = {$/;"	v
tag36h10	src/img/apriltag.c	/^const apriltag_family_t tag36h10 = {$/;"	v
tag36h11	src/img/apriltag.c	/^const apriltag_family_t tag36h11 = {$/;"	v
tag_families	src/img/apriltag.c	/^    zarray_t *tag_families;$/;"	m	struct:apriltag_detector	file:
tail	src/img/zbar.c	/^    zbar_symbol_t *tail;        \/* last of unfiltered symbol results *\/$/;"	m	struct:zbar_symbol_set_s	file:
tail	zbar/symbol.h	/^    zbar_symbol_t *tail;        \/* last of unfiltered symbol results *\/$/;"	m	struct:zbar_symbol_set_s
tail_ptr	src/img/include/collections.h	/^    list_lnk_t *head_ptr, *tail_ptr;$/;"	m	struct:list
tail_ptr	src/img/include/collections.h	/^    size_t head_ptr, tail_ptr, len, size, data_len;$/;"	m	struct:fifo
take_bits	src/img/qrcode.c	/^static int take_bits(struct datastream *ds, int len)$/;"	f	file:
temp_size	src/ide_dbg.c	/^static size_t           temp_size;$/;"	v	file:
template_match	src/img/include/imlib.h	/^typedef enum template_match {$/;"	g
template_match_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) template_match_t;$/;"	t	typeref:enum:template_match
test_capstone	src/img/qrcode.c	/^static void test_capstone(struct quirc *q, int x, int y, int *pb)$/;"	f	file:
test_grouping	src/img/qrcode.c	/^static void test_grouping(struct quirc *q, int i)$/;"	f	file:
test_neighbours	src/img/qrcode.c	/^static void test_neighbours(struct quirc *q, int i,$/;"	f	file:
teven	src/img/zbar.c	/^    unsigned char teven;$/;"	m	struct:group_s	file:
text_is_ascii	zbar/qrdectxt.c	/^static int text_is_ascii(const unsigned char *_text,int _len){$/;"	f	file:
text_is_latin1	zbar/qrdectxt.c	/^static int text_is_latin1(const unsigned char *_text,int _len){$/;"	f	file:
theta	src/img/apriltag.c	/^    float theta;$/;"	m	struct:pt	file:
theta	src/img/include/imlib.h	/^    int16_t theta, rho;$/;"	m	struct:find_lines_list_lnk_data
theta	src/img/lsd.c	/^  double theta;        \/* angle *\/$/;"	m	struct:rect	file:
theta	src/py/py_image.c	/^    mp_obj_t theta;$/;"	m	struct:_py_kptmatch_obj_t	file:
theta	src/py/py_image.c	/^    mp_obj_t x1, y1, x2, y2, length, magnitude, theta, rho;$/;"	m	struct:py_line_obj	file:
theta_to_int	src/img/apriltag.c	/^static inline int theta_to_int(double theta, int max)$/;"	f	file:
this	src/img/font.c	/^  void *this;$/;"	m	struct:font	file:
threshold	src/img/apriltag.c	/^image_u8_t *threshold(apriltag_detector_t *td, image_u8_t *im)$/;"	f
threshold	src/img/include/imlib.h	/^    float threshold;                \/\/ Detection threshold.$/;"	m	struct:cascade
threshold	src/img/include/imlib.h	/^typedef struct threshold {$/;"	s
threshold	src/img/qrcode.c	/^static void threshold(struct quirc *q)$/;"	f	file:
threshold	src/py/py_image.c	/^    int threshold;$/;"	m	struct:_py_kp_obj_t	file:
threshold_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) threshold_t;$/;"	t	typeref:struct:threshold
tid	src/include/mutex.h	/^	uint32_t tid;$/;"	m	struct:__anon47
time	src/img/zbar.c	/^    unsigned long time;         \/* relative symbol capture time *\/$/;"	m	struct:zbar_symbol_s	file:
time	src/img/zbar.c	/^    unsigned long time;         \/* scan start time *\/$/;"	m	struct:zbar_image_scanner_s	file:
time	zbar/img_scanner.c	/^    unsigned long time;         \/* scan start time *\/$/;"	m	struct:zbar_image_scanner_s	file:
time	zbar/symbol.h	/^    unsigned long time;         \/* relative symbol capture time *\/$/;"	m	struct:zbar_symbol_s
timing_scan	src/img/qrcode.c	/^static int timing_scan(const struct quirc *q,$/;"	f	file:
to_degrees	src/img/apriltag.c	816;"	d	file:
to_radians	src/img/apriltag.c	815;"	d	file:
todd	src/img/zbar.c	/^    unsigned char todd;$/;"	m	struct:group_s	file:
topAngle	src/img/dmtx.c	/^   int             topAngle;      \/* hough angle of top edge *\/$/;"	m	struct:DmtxRegion_struct	file:
topKnown	src/img/dmtx.c	/^   int             topKnown;      \/* known == 1; unknown == 0 *\/$/;"	m	struct:DmtxRegion_struct	file:
topLoc	src/img/dmtx.c	/^   DmtxPixelLoc    topLoc;        \/* known (arbitrary) location on top edge *\/$/;"	m	struct:DmtxRegion_struct	file:
total	pybind_test/whjy.h	/^    int total;  $/;"	m	struct:student
total	src/img/dmtx.c	/^   int             total;         \/* Total number of crosses at this size *\/$/;"	m	struct:DmtxScanGrid_struct	file:
tpep	src/img/qrcode.c	/^    struct quirc_point  tpep[3];$/;"	m	struct:quirc_grid	typeref:struct:quirc_grid::quirc_point	file:
trace_line	src/img/line.c	/^size_t trace_line(image_t *ptr, line_t *l, int *theta_buffer, uint32_t *mag_buffer, point_t *point_buffer)$/;"	f
transformBlock	src/img/picojpeg.c	/^static void transformBlock(uint8 mcuBlock)$/;"	f	file:
transformBlockReduce	src/img/picojpeg.c	/^static void transformBlockReduce(uint8 mcuBlock)$/;"	f	file:
transpose	src/img/mathop.c	/^    bool hmirror, vflip, transpose;$/;"	m	struct:imlib_replace_line_op_state	file:
travel	src/img/dmtx.c	/^   int             travel;$/;"	m	struct:DmtxBresLine_struct	file:
tree_thresh_array	src/img/include/imlib.h	/^    int16_t *tree_thresh_array;     \/\/ Features threshold (1 per feature).$/;"	m	struct:cascade
type	src/img/include/imlib.h	/^    uint16_t type, rotation;$/;"	m	struct:find_barcodes_list_lnk_data
type	src/img/zbar.c	/^    zbar_symbol_type_t type;            \/* type of last decoded data *\/$/;"	m	struct:zbar_decoder_s	file:
type	src/img/zbar.c	/^    zbar_symbol_type_t type;    \/* symbol type *\/$/;"	m	struct:zbar_symbol_s	file:
type	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, type, rotation, quality;$/;"	m	struct:py_barcode_obj	file:
type	src/py/py_lcd.c	/^} type = DEV_NONE; \/\/ device type$/;"	v	typeref:enum:__anon56	file:
type	zbar/decoder.h	/^    zbar_symbol_type_t type;            \/* type of last decoded data *\/$/;"	m	struct:zbar_decoder_s
type	zbar/error.h	/^    zbar_error_t type;$/;"	m	struct:errinfo_s
type	zbar/symbol.h	/^    zbar_symbol_type_t type;    \/* symbol type *\/$/;"	m	struct:zbar_symbol_s
u	src/img/apriltag.c	/^    double u[2]; \/\/ always a unit vector$/;"	m	struct:__anon9	file:
u	src/img/apriltag.c	/^    matd_t *u;$/;"	m	struct:__anon8	file:
u	src/include/framebuffer.h	/^    int u,v;$/;"	m	struct:framebuffer
u0	zbar/qrdec.c	/^  int u0;$/;"	m	struct:qr_hom_cell	file:
u64hash_2	src/img/apriltag.c	/^static inline uint32_t u64hash_2(uint64_t x) {$/;"	f	file:
u_max	src/img/orb.c	/^const static int u_max[] = {$/;"	v	file:
ufrec	src/img/apriltag.c	/^struct ufrec$/;"	s	file:
uiMAX_REG_X	src/img/clahe.c	/^const unsigned int uiMAX_REG_X = 16;      \/* max. # contextual regions in x-direction *\/$/;"	v
uiMAX_REG_Y	src/img/clahe.c	/^const unsigned int uiMAX_REG_Y = 16;      \/* max. # contextual regions in y-direction *\/$/;"	v
uiNR_OF_GREY	src/img/clahe.c	39;"	d	file:
uiNR_OF_GREY	src/img/clahe.c	42;"	d	file:
uint	src/img/picojpeg_util.c	/^typedef unsigned int uint;$/;"	t	file:
uint16	src/img/picojpeg.c	/^typedef unsigned short  uint16;$/;"	t	file:
uint32_zarray_entry	src/img/apriltag.c	/^struct uint32_zarray_entry$/;"	s	file:
uint8	src/img/picojpeg.c	/^typedef unsigned char   uint8;$/;"	t	file:
uint8	src/img/picojpeg_util.c	/^typedef unsigned char uint8;$/;"	t	file:
uint8_t	src/img/include/imdefs.h	/^typedef unsigned char uint8_t;$/;"	t
umin	src/img/zbar.c	/^    int dx, dy, du, umin, v;    \/* current scan direction *\/$/;"	m	struct:zbar_image_scanner_s	file:
umin	zbar/img_scanner.c	/^    int dx, dy, du, umin, v;    \/* current scan direction *\/$/;"	m	struct:zbar_image_scanner_s	file:
umm_alloc_fail	src/umm_malloc.c	/^void umm_alloc_fail()$/;"	f
umm_assimilate_down	src/umm_malloc.c	/^static unsigned short int umm_assimilate_down( unsigned short int c, unsigned short int freemask ) {$/;"	f	file:
umm_assimilate_up	src/umm_malloc.c	/^static void umm_assimilate_up( unsigned short int c ) {$/;"	f	file:
umm_block	src/umm_malloc.c	/^} __attribute__((packed, aligned(8))) umm_block;$/;"	t	typeref:struct:umm_block_t	file:
umm_block_t	src/umm_malloc.c	/^UMM_H_ATTPACKPRE typedef struct umm_block_t {$/;"	s	file:
umm_blocks	src/umm_malloc.c	/^static unsigned short int umm_blocks( size_t size ) {$/;"	f	file:
umm_calloc	src/umm_malloc.c	/^void *umm_calloc( size_t num, size_t item_size ) {$/;"	f
umm_disconnect_from_free_list	src/umm_malloc.c	/^static void umm_disconnect_from_free_list( unsigned short int c ) {$/;"	f	file:
umm_free	src/umm_malloc.c	/^void umm_free( void *ptr ) {$/;"	f
umm_heap	src/umm_malloc.c	/^umm_block *umm_heap = NULL;$/;"	v
umm_init	src/umm_malloc.c	/^void umm_init( void ) {$/;"	f
umm_init_x	src/umm_malloc.c	/^void umm_init_x( size_t size ) {$/;"	f
umm_malloc	src/umm_malloc.c	/^void *umm_malloc( size_t size ) {$/;"	f
umm_numblocks	src/umm_malloc.c	/^unsigned short int umm_numblocks = 0;$/;"	v
umm_ptr	src/umm_malloc.c	/^} __attribute__((packed, aligned(8))) umm_ptr;$/;"	t	typeref:struct:umm_ptr_t	file:
umm_ptr_t	src/umm_malloc.c	/^UMM_H_ATTPACKPRE typedef struct umm_ptr_t {$/;"	s	file:
umm_realloc	src/umm_malloc.c	/^void *umm_realloc( void *ptr, size_t size ) {$/;"	f
umm_split_block	src/umm_malloc.c	/^static void umm_split_block( unsigned short int c,$/;"	f	file:
uni_elt	src/img/selective_search.c	/^} __attribute__((aligned(8)))uni_elt;$/;"	t	typeref:struct:__anon41	file:
uniform_tbl	src/img/lbp.c	/^const static uint8_t uniform_tbl[256] = {$/;"	v	file:
unionfind	src/img/apriltag.c	/^struct unionfind$/;"	s	file:
unionfind_connect	src/img/apriltag.c	/^static inline uint16_t unionfind_connect(unionfind_t *uf, uint16_t aid, uint16_t bid)$/;"	f	file:
unionfind_create	src/img/apriltag.c	/^static inline unionfind_t *unionfind_create(uint32_t maxid)$/;"	f	file:
unionfind_destroy	src/img/apriltag.c	/^static inline void unionfind_destroy()$/;"	f	file:
unionfind_get_representative	src/img/apriltag.c	/^static inline uint16_t unionfind_get_representative(unionfind_t *uf, uint16_t id)$/;"	f	file:
unionfind_t	src/img/apriltag.c	/^typedef struct unionfind unionfind_t;$/;"	t	typeref:struct:unionfind	file:
universe	src/img/selective_search.c	/^} __attribute__((aligned(8)))universe;$/;"	t	typeref:struct:__anon42	file:
universe_create	src/img/selective_search.c	/^static universe *universe_create(int elements)$/;"	f	file:
universe_find	src/img/selective_search.c	/^static int universe_find(universe * uni, int x)$/;"	f	file:
universe_get_id	src/img/selective_search.c	/^static int universe_get_id(universe * this, int x)$/;"	f	file:
universe_join	src/img/selective_search.c	/^static void universe_join (universe * uni, int x, int y)$/;"	f	file:
universe_num_sets	src/img/selective_search.c	/^static int universe_num_sets(universe * uni)$/;"	f	file:
universe_set_id	src/img/selective_search.c	/^static void universe_set_id(universe * this, int x, int id)$/;"	f	file:
universe_size	src/img/selective_search.c	/^static int universe_size(universe * uni, int x)$/;"	f	file:
unpack_fft	src/img/fft.c	/^static void unpack_fft(float *in, float *out, int N_pow2)$/;"	f	file:
upca_config	src/img/zbar.c	/^    unsigned upca_config;$/;"	m	struct:ean_decoder_s	file:
upce_config	src/img/zbar.c	/^    unsigned upce_config;$/;"	m	struct:ean_decoder_s	file:
update_offset	src/py/py_lcd.c	/^void update_offset(uint8_t type, uint8_t rotation)$/;"	f
upperShift	src/img/dmtx.c	/^   DmtxBoolean     upperShift;$/;"	m	struct:C40TextState_struct	file:
upsampleCb	src/img/picojpeg.c	/^static void upsampleCb(uint8 srcOfs, uint8 dstOfs)$/;"	f	file:
upsampleCbH	src/img/picojpeg.c	/^static void upsampleCbH(uint8 srcOfs, uint8 dstOfs)$/;"	f	file:
upsampleCbV	src/img/picojpeg.c	/^static void upsampleCbV(uint8 srcOfs, uint8 dstOfs)$/;"	f	file:
upsampleCr	src/img/picojpeg.c	/^static void upsampleCr(uint8 srcOfs, uint8 dstOfs)$/;"	f	file:
upsampleCrH	src/img/picojpeg.c	/^static void upsampleCrH(uint8 srcOfs, uint8 dstOfs)$/;"	f	file:
upsampleCrV	src/img/picojpeg.c	/^static void upsampleCrV(uint8 srcOfs, uint8 dstOfs)$/;"	f	file:
usbdbg_cmd	src/include/ide_dbg.h	/^enum usbdbg_cmd {$/;"	g
used	src/umm_malloc.c	/^    umm_ptr used;$/;"	m	union:umm_block_t::__anon57	file:
userdata	src/img/zbar.c	/^    const void *userdata;       \/* application data *\/$/;"	m	struct:zbar_image_scanner_s	file:
userdata	src/img/zbar.c	/^    void *userdata;                     \/* application data *\/$/;"	m	struct:zbar_decoder_s	file:
userdata	src/img/zbar.c	/^    void *userdata;             \/* user specified data associated w\/image *\/$/;"	m	struct:zbar_image_s	file:
userdata	zbar/decoder.h	/^    void *userdata;                     \/* application data *\/$/;"	m	struct:zbar_decoder_s
userdata	zbar/image.h	/^    void *userdata;             \/* user specified data associated w\/image *\/$/;"	m	struct:zbar_image_s
userdata	zbar/img_scanner.c	/^    const void *userdata;       \/* application data *\/$/;"	m	struct:zbar_image_scanner_s	file:
uxga_regs	src/ov2640.c	/^static const uint8_t uxga_regs[][2] = {$/;"	v	file:
v	src/img/dmtx.c	/^   DmtxVector2     v;$/;"	m	struct:DmtxRay2_struct	file:
v	src/img/zbar.c	/^    int dx, dy, du, umin, v;    \/* current scan direction *\/$/;"	m	struct:zbar_image_scanner_s	file:
v	src/include/framebuffer.h	/^    int u,v;$/;"	m	struct:framebuffer
v	zbar/img_scanner.c	/^    int dx, dy, du, umin, v;    \/* current scan direction *\/$/;"	m	struct:zbar_image_scanner_s	file:
v0	zbar/qrdec.c	/^  int v0;$/;"	m	struct:qr_hom_cell	file:
valid	src/fb_alloc.c	/^    bool valid;$/;"	m	struct:__anon1	file:
validate_checksum	src/img/zbar.c	/^static inline unsigned char validate_checksum (zbar_decoder_t *dcode)$/;"	f	file:
validate_checksums	src/img/zbar.c	/^validate_checksums (zbar_decoder_t *dcode)$/;"	f	file:
validate_sig	src/img/zbar.c	/^validate_sig (int sig)$/;"	f	file:
value	src/mt9d111.c	/^    uint16_t    value;      \/**< struct Register value. *\/$/;"	m	struct:Register	file:
values	src/img/lsd.c	/^  double * values;$/;"	m	struct:ntuple_list_s	file:
vec_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) vec_t;$/;"	t	typeref:struct:_vector
vecswap	src/img/qsort.c	65;"	d	file:
version	src/img/include/imlib.h	/^    uint8_t version, ecc_level, mask, data_type;$/;"	m	struct:find_qrcodes_list_lnk_data
version	src/img/qrcode.c	/^    int         version;$/;"	m	struct:quirc_data	file:
version	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;$/;"	m	struct:py_qrcode_obj	file:
version	zbar/qrdec.h	/^  unsigned char       version;$/;"	m	struct:qr_code_data
vflip	src/img/mathop.c	/^    bool hmirror, vflip, transpose;$/;"	m	struct:imlib_replace_line_op_state	file:
vflip	src/include/sensor.h	/^    bool vflip;$/;"	m	struct:_sensor
vga_config	src/gc0328.c	/^static const uint8_t vga_config[][2] = { \/\/k210 $/;"	v	file:
vscan	src/img/qrcode.c	/^    int                 vscan;$/;"	m	struct:quirc_grid	file:
vstr_add_strn_00	src/ide_dbg.c	/^void vstr_add_strn_00(vstr_t *vstr, const char *str, size_t len) {$/;"	f
vstr_ensure_extra_00	src/ide_dbg.c	/^STATIC void vstr_ensure_extra_00(vstr_t *vstr, size_t size) {$/;"	f
vstr_init_00	src/ide_dbg.c	/^static void vstr_init_00(vstr_t *vstr, size_t alloc) {$/;"	f	file:
vstr_init_11	src/ide_dbg.c	/^static void vstr_init_11(vstr_t *vstr, size_t alloc) {$/;"	f	file:
vsync_pin	src/include/sensor.h	/^    uint32_t vsync_pin;         \/\/ VSYNC GPIO output pin.$/;"	m	struct:_sensor
vx	src/img/lsd.c	/^  double vx[4];  \/* rectangle's corner X coordinates in circular order *\/$/;"	m	struct:__anon35	file:
vy	src/img/lsd.c	/^  double vy[4];  \/* rectangle's corner Y coordinates in circular order *\/$/;"	m	struct:__anon35	file:
w	src/img/include/imdefs.h	/^    int w;$/;"	m	struct:image
w	src/img/include/imdefs.h	/^    int w;$/;"	m	struct:image_py
w	src/img/include/imlib.h	/^    int w;$/;"	m	struct:__anon28
w	src/img/include/imlib.h	/^    int w;$/;"	m	struct:integral_image
w	src/img/include/imlib.h	/^    int w;$/;"	m	struct:size
w	src/img/include/imlib.h	/^    int x, y, w, h;$/;"	m	struct:cluster
w	src/img/include/imlib.h	/^    int16_t w;$/;"	m	struct:rectangle
w	src/img/qrcode.c	/^    int                     w;$/;"	m	struct:quirc	file:
w	src/img/selective_search.c	/^    float    w;$/;"	m	struct:__anon43	file:
w	src/img/selective_search.c	/^    uint16_t w;$/;"	m	struct:__anon40	file:
w	src/img/zbar.c	/^    unsigned w[DECODE_WINDOW];          \/* window of last N bar widths *\/$/;"	m	struct:zbar_decoder_s	file:
w	src/include/framebuffer.h	/^    int w,h;$/;"	m	struct:framebuffer
w	src/include/framebuffer.h	/^    int w,h;$/;"	m	struct:jpegbuffer
w	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
w	src/py/py_image.c	/^    mp_obj_t x, y, w, h, magnitude;$/;"	m	struct:py_rect_obj	file:
w	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;$/;"	m	struct:py_datamatrix_obj	file:
w	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, type, rotation, quality;$/;"	m	struct:py_barcode_obj	file:
w	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;$/;"	m	struct:py_qrcode_obj	file:
w	src/py/py_image.c	/^    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count;$/;"	m	struct:py_blob_obj	file:
w	src/py/py_image.c	/^    mp_obj_t x, y, w, h;$/;"	m	struct:_py_kptmatch_obj_t	file:
w	zbar/decoder.h	/^    unsigned w[DECODE_WINDOW];          \/* window of last N bar widths *\/$/;"	m	struct:zbar_decoder_s
w_max	src/include/framebuffer.h	/^    int w_max, h_max;$/;"	m	struct:framebuffer
w_pow2	src/img/include/omv_fft.h	/^    int w_pow2, h_pow2;$/;"	m	struct:fft2d_controller
weights_array	src/img/include/imlib.h	/^    int8_t *weights_array;          \/\/ Rectangles weights (1 per rectangle).$/;"	m	struct:cascade
width	src/img/apriltag.c	/^    const int32_t width;$/;"	m	struct:image_f32	file:
width	src/img/apriltag.c	/^    const int32_t width;$/;"	m	struct:image_u32	file:
width	src/img/apriltag.c	/^    const int32_t width;$/;"	m	struct:image_u8x3	file:
width	src/img/apriltag.c	/^    const int32_t width;$/;"	m	struct:image_u8x4	file:
width	src/img/apriltag.c	/^    int32_t width;$/;"	m	struct:image_u8	file:
width	src/img/dmtx.c	/^   int             width;$/;"	m	struct:DmtxImage_struct	file:
width	src/img/font.c	/^  uint8_t width;$/;"	m	struct:font	file:
width	src/img/lsd.c	/^  double width;        \/* rectangle width *\/$/;"	m	struct:rect	file:
width	src/img/zbar.c	/^    unsigned s4, width;         \/* character width *\/$/;"	m	struct:ean_decoder_s	file:
width	src/img/zbar.c	/^    unsigned short width;       \/* measured width of finder (14 modules) *\/$/;"	m	struct:databar_segment_s	file:
width	src/img/zbar.c	/^    unsigned width, height;     \/* image size *\/$/;"	m	struct:zbar_image_s	file:
width	src/img/zbar.c	/^    unsigned width;             \/* last character width *\/$/;"	m	struct:codabar_decoder_s	file:
width	src/img/zbar.c	/^    unsigned width;             \/* last character width *\/$/;"	m	struct:code128_decoder_s	file:
width	src/img/zbar.c	/^    unsigned width;             \/* last character width *\/$/;"	m	struct:code39_decoder_s	file:
width	src/img/zbar.c	/^    unsigned width;             \/* last character width *\/$/;"	m	struct:code93_decoder_s	file:
width	src/img/zbar.c	/^    unsigned width;             \/* last character width *\/$/;"	m	struct:i25_decoder_s	file:
width	src/img/zbar.c	/^    unsigned width;             \/* width of last character *\/$/;"	m	struct:ean_pass_s	file:
width	src/img/zbar.c	/^    unsigned width;         \/* last element width *\/$/;"	m	struct:zbar_scanner_s	file:
width	src/py/py_gif.c	/^    int width;$/;"	m	struct:py_gif_obj	file:
width	src/py/py_mjpeg.c	/^    int width;$/;"	m	struct:py_mjpeg_obj	file:
width	zbar/image.c	/^    uint16_t width, height;$/;"	m	struct:zimg_hdr_s	file:
width	zbar/image.h	/^    unsigned width, height;     \/* image size *\/$/;"	m	struct:zbar_image_s
width	zbar/scanner.c	/^    unsigned width;         \/* last element width *\/$/;"	m	struct:zbar_scanner_s	file:
width_curr	src/py/py_lcd.c	/^static uint16_t width_curr = 0;$/;"	v	file:
window	src/img/include/imlib.h	/^    struct size window;             \/\/ Detection window size.$/;"	m	struct:cascade	typeref:struct:cascade::size
wmax	src/img/zbar.c	/^    unsigned char wmax;$/;"	m	struct:group_s	file:
write_bus_delay	src/cambus.c	/^static uint32_t write_bus_delay = 10; \/\/ms$/;"	v	file:
write_byte	src/vfs_wrapper.c	/^int write_byte(mp_obj_t fp, uint8_t value)$/;"	f
write_byte_raise	src/vfs_wrapper.c	/^int write_byte_raise(mp_obj_t fp, uint8_t value)$/;"	f
write_data	src/vfs_wrapper.c	/^int write_data(mp_obj_t fp, const void *data, mp_uint_t size)$/;"	f
write_data_raise	src/vfs_wrapper.c	/^int write_data_raise(mp_obj_t fp, const void *data, mp_uint_t size)$/;"	f
write_long	src/vfs_wrapper.c	/^int write_long(mp_obj_t fp, uint32_t value)$/;"	f
write_long_raise	src/vfs_wrapper.c	/^int write_long_raise(mp_obj_t fp, uint32_t value)$/;"	f
write_reg	src/include/sensor.h	/^    int  (*write_reg)           (sensor_t *sensor, uint8_t reg_addr, uint16_t reg_data);$/;"	m	struct:_sensor
write_reg	src/ov2640.c	/^static int write_reg(sensor_t *sensor, uint8_t reg_addr, uint16_t reg_data)$/;"	f	file:
write_reg	src/ov3660.c	/^static int write_reg(sensor_t *sensor, uint8_t reg_addr, uint16_t reg_data)$/;"	f	file:
write_reg	src/ov5640.c	/^static int write_reg(sensor_t *sensor, uint16_t reg_addr, uint16_t reg_data)$/;"	f	file:
write_reg	src/ov5642.c	/^static int write_reg(sensor_t *sensor, uint16_t reg_addr, uint16_t reg_data)$/;"	f	file:
write_reg	src/ov7740.c	/^static int write_reg(sensor_t *sensor, uint8_t reg_addr, uint16_t reg_data)$/;"	f	file:
write_word	src/vfs_wrapper.c	/^int write_word(mp_obj_t fp, uint16_t value)$/;"	f
write_word_raise	src/vfs_wrapper.c	/^int write_word_raise(mp_obj_t fp, uint16_t value)$/;"	f
wsize_t	src/img/include/imlib.h	/^} __attribute__((aligned(8))) wsize_t;$/;"	t	typeref:struct:size
x	src/img/agast.c	/^    uint16_t x;$/;"	m	struct:__anon4	file:
x	src/img/apriltag.c	/^    uint16_t x, y;$/;"	m	struct:pt	file:
x	src/img/blob.c	/^    int16_t x, y, l, r;$/;"	m	struct:xylf	file:
x	src/img/fast.c	/^    uint16_t x;$/;"	m	struct:__anon21	file:
x	src/img/include/imlib.h	/^    float x;$/;"	m	struct:_vector
x	src/img/include/imlib.h	/^    int x, y, w, h;$/;"	m	struct:cluster
x	src/img/include/imlib.h	/^    int16_t x;$/;"	m	struct:point
x	src/img/include/imlib.h	/^    int16_t x;$/;"	m	struct:rectangle
x	src/img/include/imlib.h	/^    uint16_t x;$/;"	m	struct:kp
x	src/img/lsd.c	/^  double x,y;          \/* center of the rectangle *\/$/;"	m	struct:rect	file:
x	src/img/lsd.c	/^  int x,y;       \/* coordinates of currently explored pixel *\/$/;"	m	struct:__anon35	file:
x	src/img/lsd.c	/^  int16_t x,y;$/;"	m	struct:coorlist	file:
x	src/img/lsd.c	/^struct lsd_point {int16_t x,y;}__attribute__((aligned(8)));$/;"	m	struct:lsd_point	file:
x	src/img/orb.c	/^    int x;$/;"	m	struct:__anon36	file:
x	src/img/qrcode.c	/^    int x;$/;"	m	struct:quirc_point	file:
x	src/img/qrcode.c	/^    int16_t x, y, l, r;$/;"	m	struct:xylf	file:
x	src/img/selective_search.c	/^    uint16_t x;$/;"	m	struct:__anon40	file:
x	src/img/zbar.c	/^    int x, y;$/;"	m	struct:zbar_point_s	file:
x	src/img/zbar.c	/^    unsigned x;             \/* relative scan position of next sample *\/$/;"	m	struct:zbar_scanner_s	file:
x	src/include/framebuffer.h	/^    int x,y;$/;"	m	struct:framebuffer
x	src/py/py_image.c	/^    mp_obj_t x, y, r, magnitude;$/;"	m	struct:py_circle_obj	file:
x	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
x	src/py/py_image.c	/^    mp_obj_t x, y, w, h, magnitude;$/;"	m	struct:py_rect_obj	file:
x	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;$/;"	m	struct:py_datamatrix_obj	file:
x	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, type, rotation, quality;$/;"	m	struct:py_barcode_obj	file:
x	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;$/;"	m	struct:py_qrcode_obj	file:
x	src/py/py_image.c	/^    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count;$/;"	m	struct:py_blob_obj	file:
x	src/py/py_image.c	/^    mp_obj_t x, y, w, h;$/;"	m	struct:_py_kptmatch_obj_t	file:
x	zbar/scanner.c	/^    unsigned x;             \/* relative scan position of next sample *\/$/;"	m	struct:zbar_scanner_s	file:
x	zbar/symbol.h	/^    int x, y;$/;"	m	struct:point_s
x0	zbar/qrdec.c	/^  int x0;$/;"	m	struct:qr_aff	file:
x0	zbar/qrdec.c	/^  int x0;$/;"	m	struct:qr_hom	file:
x0	zbar/qrdec.c	/^  int x0;$/;"	m	struct:qr_hom_cell	file:
x1	src/img/include/imlib.h	/^    int16_t x1;$/;"	m	struct:line
x1	src/img/lsd.c	/^  double x1,y1,x2,y2;  \/* first and second point of the line segment *\/$/;"	m	struct:rect	file:
x1	src/py/py_image.c	/^    mp_obj_t x1, y1, x2, y2, length, magnitude, theta, rho;$/;"	m	struct:py_line_obj	file:
x2	src/img/include/imlib.h	/^    int16_t x2;$/;"	m	struct:line
x2	src/img/lsd.c	/^  double x1,y1,x2,y2;  \/* first and second point of the line segment *\/$/;"	m	struct:rect	file:
x2	src/py/py_image.c	/^    mp_obj_t x1, y1, x2, y2, length, magnitude, theta, rho;$/;"	m	struct:py_line_obj	file:
xCenter	src/img/dmtx.c	/^   int             xCenter;       \/* X center of current cross pattern *\/$/;"	m	struct:DmtxScanGrid_struct	file:
xDelta	src/img/dmtx.c	/^   int             xDelta;$/;"	m	struct:DmtxBresLine_struct	file:
xLine	src/img/draw.c	/^static void xLine(image_t *img, int x1, int x2, int y, int c)$/;"	f	file:
xMax	src/img/dmtx.c	/^   int             xMax;          \/* Maximum X in image coordinate system *\/$/;"	m	struct:DmtxScanGrid_struct	file:
xMax	src/img/dmtx.c	/^   int             xMax;$/;"	m	struct:DmtxDecode_struct	file:
xMin	src/img/dmtx.c	/^   int             xMin;          \/* Minimum X in image coordinate system *\/$/;"	m	struct:DmtxScanGrid_struct	file:
xMin	src/img/dmtx.c	/^   int             xMin;$/;"	m	struct:DmtxDecode_struct	file:
xOffset	src/img/dmtx.c	/^   int             xOffset;       \/* Offset to obtain image X coordinate *\/$/;"	m	struct:DmtxScanGrid_struct	file:
xOut	src/img/dmtx.c	/^   int             xOut;$/;"	m	struct:DmtxBresLine_struct	file:
xStep	src/img/dmtx.c	/^   int             xStep;$/;"	m	struct:DmtxBresLine_struct	file:
x_offset	src/img/jpeg.c	/^    int x_offset;$/;"	m	struct:_jpeg_enc	file:
x_ratio	src/img/include/imlib.h	/^    int x_ratio;$/;"	m	struct:__anon28
x_rotation	src/img/include/imlib.h	/^    float x_rotation, y_rotation, z_rotation;$/;"	m	struct:find_apriltags_list_lnk_data
x_rotation	src/py/py_image.c	/^    mp_obj_t x_rotation, y_rotation, z_rotation;$/;"	m	struct:py_apriltag_obj	file:
x_translation	src/img/include/imlib.h	/^    float x_translation, y_translation, z_translation;$/;"	m	struct:find_apriltags_list_lnk_data
x_translation	src/py/py_image.c	/^    mp_obj_t x_translation, y_translation, rotation, scale, response;$/;"	m	struct:py_displacement_obj	file:
x_translation	src/py/py_image.c	/^    mp_obj_t x_translation, y_translation, z_translation;$/;"	m	struct:py_apriltag_obj	file:
xalloc	src/xalloc.c	/^void *xalloc(uint32_t size)$/;"	f
xalloc0	src/xalloc.c	/^void *xalloc0(uint32_t size)$/;"	f
xalloc_fail	src/xalloc.c	/^NORETURN static void xalloc_fail()$/;"	f	file:
xalloc_try_alloc	src/xalloc.c	/^void *xalloc_try_alloc(uint32_t size)$/;"	f
xfer_bytes	src/ide_dbg.c	/^static volatile int xfer_bytes;   \/\/ bytes sent$/;"	v	file:
xfer_length	src/ide_dbg.c	/^static volatile int xfer_length;  \/\/ bytes need to send$/;"	v	file:
xfree	src/xalloc.c	/^void xfree(void *mem)$/;"	f
xmlfmt	zbar/symbol.c	/^static const char *xmlfmt[] = {$/;"	v	file:
xrealloc	src/xalloc.c	/^void *xrealloc(void *mem, uint32_t size)$/;"	f
xsize	src/img/lsd.c	/^  unsigned int xsize,ysize;$/;"	m	struct:image_char_s	file:
xsize	src/img/lsd.c	/^  unsigned int xsize,ysize;$/;"	m	struct:image_double_s	file:
xsize	src/img/lsd.c	/^  unsigned int xsize,ysize;$/;"	m	struct:image_int_s	file:
xsub2	zbar/image.h	/^            uint8_t xsub2, ysub2;       \/* chroma subsampling in each axis *\/$/;"	m	struct:zbar_format_def_s::__anon62::__anon64
xylf	src/img/blob.c	/^typedef struct xylf$/;"	s	file:
xylf	src/img/qrcode.c	/^typedef struct xylf$/;"	s	file:
xylf_t	src/img/blob.c	/^xylf_t;$/;"	t	typeref:struct:xylf	file:
xylf_t	src/img/qrcode.c	/^xylf_t;$/;"	t	typeref:struct:xylf	file:
xyz_table	src/img/xyz_tab.c	/^const float xyz_table[256] = {$/;"	v
y	src/img/agast.c	/^    uint16_t y;$/;"	m	struct:__anon4	file:
y	src/img/apriltag.c	/^    uint16_t x, y;$/;"	m	struct:pt	file:
y	src/img/blob.c	/^    int16_t x, y, l, r;$/;"	m	struct:xylf	file:
y	src/img/fast.c	/^    uint16_t y;$/;"	m	struct:__anon21	file:
y	src/img/include/imlib.h	/^    float y;$/;"	m	struct:_vector
y	src/img/include/imlib.h	/^    int x, y, w, h;$/;"	m	struct:cluster
y	src/img/include/imlib.h	/^    int16_t y;$/;"	m	struct:point
y	src/img/include/imlib.h	/^    int16_t y;$/;"	m	struct:rectangle
y	src/img/include/imlib.h	/^    uint16_t y;$/;"	m	struct:kp
y	src/img/lsd.c	/^  double x,y;          \/* center of the rectangle *\/$/;"	m	struct:rect	file:
y	src/img/lsd.c	/^  int x,y;       \/* coordinates of currently explored pixel *\/$/;"	m	struct:__anon35	file:
y	src/img/lsd.c	/^  int16_t x,y;$/;"	m	struct:coorlist	file:
y	src/img/lsd.c	/^struct lsd_point {int16_t x,y;}__attribute__((aligned(8)));$/;"	m	struct:lsd_point	file:
y	src/img/orb.c	/^    int y;$/;"	m	struct:__anon36	file:
y	src/img/qrcode.c	/^    int y;$/;"	m	struct:quirc_point	file:
y	src/img/qrcode.c	/^    int16_t x, y, l, r;$/;"	m	struct:xylf	file:
y	src/img/selective_search.c	/^    uint16_t y;$/;"	m	struct:__anon40	file:
y	src/img/zbar.c	/^    int x, y;$/;"	m	struct:zbar_point_s	file:
y	src/include/framebuffer.h	/^    int x,y;$/;"	m	struct:framebuffer
y	src/py/py_image.c	/^    mp_obj_t x, y, r, magnitude;$/;"	m	struct:py_circle_obj	file:
y	src/py/py_image.c	/^    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;$/;"	m	struct:py_apriltag_obj	file:
y	src/py/py_image.c	/^    mp_obj_t x, y, w, h, magnitude;$/;"	m	struct:py_rect_obj	file:
y	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;$/;"	m	struct:py_datamatrix_obj	file:
y	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, type, rotation, quality;$/;"	m	struct:py_barcode_obj	file:
y	src/py/py_image.c	/^    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;$/;"	m	struct:py_qrcode_obj	file:
y	src/py/py_image.c	/^    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count;$/;"	m	struct:py_blob_obj	file:
y	src/py/py_image.c	/^    mp_obj_t x, y, w, h;$/;"	m	struct:_py_kptmatch_obj_t	file:
y	zbar/symbol.h	/^    int x, y;$/;"	m	struct:point_s
y0	src/img/zbar.c	/^    int y0[4];              \/* short circular buffer of average intensities *\/$/;"	m	struct:zbar_scanner_s	file:
y0	zbar/qrdec.c	/^  int y0;$/;"	m	struct:qr_aff	file:
y0	zbar/qrdec.c	/^  int y0;$/;"	m	struct:qr_hom	file:
y0	zbar/qrdec.c	/^  int y0;$/;"	m	struct:qr_hom_cell	file:
y0	zbar/scanner.c	/^    int y0[4];              \/* short circular buffer of average intensities *\/$/;"	m	struct:zbar_scanner_s	file:
y1	src/img/include/imlib.h	/^    int16_t y1;$/;"	m	struct:line
y1	src/img/lsd.c	/^  double x1,y1,x2,y2;  \/* first and second point of the line segment *\/$/;"	m	struct:rect	file:
y1	src/py/py_image.c	/^    mp_obj_t x1, y1, x2, y2, length, magnitude, theta, rho;$/;"	m	struct:py_line_obj	file:
y1_min_thresh	src/img/zbar.c	/^    unsigned y1_min_thresh; \/* minimum threshold *\/$/;"	m	struct:zbar_scanner_s	file:
y1_min_thresh	zbar/scanner.c	/^    unsigned y1_min_thresh; \/* minimum threshold *\/$/;"	m	struct:zbar_scanner_s	file:
y1_sign	src/img/zbar.c	/^    int y1_sign;            \/* slope at last crossing *\/$/;"	m	struct:zbar_scanner_s	file:
y1_sign	zbar/scanner.c	/^    int y1_sign;            \/* slope at last crossing *\/$/;"	m	struct:zbar_scanner_s	file:
y1_thresh	src/img/zbar.c	/^    unsigned y1_thresh;     \/* current slope threshold *\/$/;"	m	struct:zbar_scanner_s	file:
y1_thresh	zbar/scanner.c	/^    unsigned y1_thresh;     \/* current slope threshold *\/$/;"	m	struct:zbar_scanner_s	file:
y2	src/img/include/imlib.h	/^    int16_t y2;$/;"	m	struct:line
y2	src/img/lsd.c	/^  double x1,y1,x2,y2;  \/* first and second point of the line segment *\/$/;"	m	struct:rect	file:
y2	src/py/py_image.c	/^    mp_obj_t x1, y1, x2, y2, length, magnitude, theta, rho;$/;"	m	struct:py_line_obj	file:
yCenter	src/img/dmtx.c	/^   int             yCenter;       \/* Y center of current cross pattern *\/$/;"	m	struct:DmtxScanGrid_struct	file:
yDelta	src/img/dmtx.c	/^   int             yDelta;$/;"	m	struct:DmtxBresLine_struct	file:
yLine	src/img/draw.c	/^static void yLine(image_t *img, int x, int y1, int y2, int c)$/;"	f	file:
yMax	src/img/dmtx.c	/^   int             yMax;          \/* Maximum Y in image coordinate system *\/$/;"	m	struct:DmtxScanGrid_struct	file:
yMax	src/img/dmtx.c	/^   int             yMax;$/;"	m	struct:DmtxDecode_struct	file:
yMin	src/img/dmtx.c	/^   int             yMin;          \/* Minimum Y in image coordinate system *\/$/;"	m	struct:DmtxScanGrid_struct	file:
yMin	src/img/dmtx.c	/^   int             yMin;$/;"	m	struct:DmtxDecode_struct	file:
yOffset	src/img/dmtx.c	/^   int             yOffset;       \/* Offset to obtain image Y coordinate *\/$/;"	m	struct:DmtxScanGrid_struct	file:
yOut	src/img/dmtx.c	/^   int             yOut;$/;"	m	struct:DmtxBresLine_struct	file:
yStep	src/img/dmtx.c	/^   int             yStep;$/;"	m	struct:DmtxBresLine_struct	file:
y_offs	src/img/include/imlib.h	/^    int y_offs;$/;"	m	struct:__anon28
y_offset	src/img/jpeg.c	/^    int y_offset;$/;"	m	struct:_jpeg_enc	file:
y_ratio	src/img/include/imlib.h	/^    int y_ratio;$/;"	m	struct:__anon28
y_rotation	src/img/include/imlib.h	/^    float x_rotation, y_rotation, z_rotation;$/;"	m	struct:find_apriltags_list_lnk_data
y_rotation	src/py/py_image.c	/^    mp_obj_t x_rotation, y_rotation, z_rotation;$/;"	m	struct:py_apriltag_obj	file:
y_translation	src/img/include/imlib.h	/^    float x_translation, y_translation, z_translation;$/;"	m	struct:find_apriltags_list_lnk_data
y_translation	src/py/py_image.c	/^    mp_obj_t x_translation, y_translation, rotation, scale, response;$/;"	m	struct:py_displacement_obj	file:
y_translation	src/py/py_image.c	/^    mp_obj_t x_translation, y_translation, z_translation;$/;"	m	struct:py_apriltag_obj	file:
ye	src/img/lsd.c	/^  double ys,ye;  \/* start and end Y values of current 'column' *\/$/;"	m	struct:__anon35	file:
ys	src/img/lsd.c	/^  double ys,ye;  \/* start and end Y values of current 'column' *\/$/;"	m	struct:__anon35	file:
ysize	src/img/lsd.c	/^  unsigned int xsize,ysize;$/;"	m	struct:image_char_s	file:
ysize	src/img/lsd.c	/^  unsigned int xsize,ysize;$/;"	m	struct:image_double_s	file:
ysize	src/img/lsd.c	/^  unsigned int xsize,ysize;$/;"	m	struct:image_int_s	file:
ysub2	zbar/image.h	/^            uint8_t xsub2, ysub2;       \/* chroma subsampling in each axis *\/$/;"	m	struct:zbar_format_def_s::__anon62::__anon64
yuv	zbar/image.h	/^        } yuv;$/;"	m	union:zbar_format_def_s::__anon62	typeref:struct:zbar_format_def_s::__anon62::__anon64
yuv_table	src/img/yuv_tab.c	/^const int8_t yuv_table[196608] = {$/;"	v
yuv_table	src/img/yuv_tab.c	/^int8_t yuv_table(uint32_t idx)$/;"	f
yuv_table_small	src/img/yuv_tab.c	/^const int8_t yuv_table_small[] = {$/;"	v
z_rotation	src/img/include/imlib.h	/^    float x_rotation, y_rotation, z_rotation;$/;"	m	struct:find_apriltags_list_lnk_data
z_rotation	src/py/py_image.c	/^    mp_obj_t x_rotation, y_rotation, z_rotation;$/;"	m	struct:py_apriltag_obj	file:
z_translation	src/img/include/imlib.h	/^    float x_translation, y_translation, z_translation;$/;"	m	struct:find_apriltags_list_lnk_data
z_translation	src/py/py_image.c	/^    mp_obj_t x_translation, y_translation, z_translation;$/;"	m	struct:py_apriltag_obj	file:
zarray	src/img/apriltag.c	/^struct zarray$/;"	s	file:
zarray_add	src/img/apriltag.c	/^static inline void zarray_add(zarray_t *za, const void *p)$/;"	f	file:
zarray_add_all	src/img/apriltag.c	/^static inline void zarray_add_all(zarray_t * dest, const zarray_t * source)$/;"	f	file:
zarray_add_fail_ok	src/img/apriltag.c	/^static inline void zarray_add_fail_ok(zarray_t *za, const void *p)$/;"	f	file:
zarray_clear	src/img/apriltag.c	/^static inline void zarray_clear(zarray_t *za)$/;"	f	file:
zarray_contains	src/img/apriltag.c	/^static inline int zarray_contains(const zarray_t *za, const void *p)$/;"	f	file:
zarray_copy	src/img/apriltag.c	/^static inline zarray_t *zarray_copy(const zarray_t *za)$/;"	f	file:
zarray_copy_data	src/img/apriltag.c	/^static inline size_t zarray_copy_data(const zarray_t *za, void *buffer, size_t buffer_bytes)$/;"	f	file:
zarray_copy_subset	src/img/apriltag.c	/^static inline zarray_t *zarray_copy_subset(const zarray_t *za,$/;"	f	file:
zarray_create	src/img/apriltag.c	/^static inline zarray_t *zarray_create(size_t el_sz)$/;"	f	file:
zarray_create_fail_ok	src/img/apriltag.c	/^static inline zarray_t *zarray_create_fail_ok(size_t el_sz)$/;"	f	file:
zarray_destroy	src/img/apriltag.c	/^static inline void zarray_destroy(zarray_t *za)$/;"	f	file:
zarray_ensure_capacity	src/img/apriltag.c	/^static inline void zarray_ensure_capacity(zarray_t *za, int capacity)$/;"	f	file:
zarray_get	src/img/apriltag.c	/^static inline void zarray_get(const zarray_t *za, int idx, void *p)$/;"	f	file:
zarray_get_volatile	src/img/apriltag.c	/^inline static void zarray_get_volatile(const zarray_t *za, int idx, void *p)$/;"	f	file:
zarray_index_of	src/img/apriltag.c	/^static inline int zarray_index_of(const zarray_t *za, const void *p)$/;"	f	file:
zarray_insert	src/img/apriltag.c	/^static inline void zarray_insert(zarray_t *za, int idx, const void *p)$/;"	f	file:
zarray_map	src/img/apriltag.c	/^static inline void zarray_map(zarray_t *za, void (*f)(void*))$/;"	f	file:
zarray_remove_index	src/img/apriltag.c	/^static inline void zarray_remove_index(zarray_t *za, int idx, int shuffle)$/;"	f	file:
zarray_remove_value	src/img/apriltag.c	/^static inline int zarray_remove_value(zarray_t *za, const void *p, int shuffle)$/;"	f	file:
zarray_set	src/img/apriltag.c	/^static inline void zarray_set(zarray_t *za, int idx, const void *p, void *outp)$/;"	f	file:
zarray_size	src/img/apriltag.c	/^static inline int zarray_size(const zarray_t *za)$/;"	f	file:
zarray_sort	src/img/apriltag.c	/^static inline void zarray_sort(zarray_t *za, int (*compar)(const void*, const void*))$/;"	f	file:
zarray_t	src/img/apriltag.c	/^typedef struct zarray zarray_t;$/;"	t	typeref:struct:zarray	file:
zarray_truncate	src/img/apriltag.c	/^inline static void zarray_truncate(zarray_t *za, int sz)$/;"	f	file:
zarray_vmap	src/img/apriltag.c	/^void zarray_vmap(zarray_t *za, void (*f)())$/;"	f
zassert	src/img/zbar.c	24;"	d	file:
zassert	zbar/debug.h	86;"	d
zassert	zbar/debug.h	89;"	d
zbar	zbar/zbar.h	/^namespace zbar {$/;"	n
zbar_color_e	src/img/zbar.c	/^typedef enum zbar_color_e {$/;"	g	file:
zbar_color_e	zbar/zbar.h	/^typedef enum zbar_color_e {$/;"	g
zbar_color_t	src/img/zbar.c	/^} __attribute__((aligned(8)))zbar_color_t;$/;"	t	typeref:enum:zbar_color_e	file:
zbar_color_t	zbar/zbar.h	/^} zbar_color_t;$/;"	t	typeref:enum:zbar::zbar_color_e
zbar_config_e	src/img/zbar.c	/^typedef enum zbar_config_e {$/;"	g	file:
zbar_config_e	zbar/zbar.h	/^typedef enum zbar_config_e {$/;"	g
zbar_config_t	src/img/zbar.c	/^}__attribute__((aligned(8))) zbar_config_t;$/;"	t	typeref:enum:zbar_config_e	file:
zbar_config_t	zbar/zbar.h	/^} zbar_config_t;$/;"	t	typeref:enum:zbar::zbar_config_e
zbar_decode_width	src/img/zbar.c	/^zbar_symbol_type_t zbar_decode_width (zbar_decoder_t *dcode,$/;"	f
zbar_decode_width	zbar/decoder.c	/^zbar_symbol_type_t zbar_decode_width (zbar_decoder_t *dcode,$/;"	f
zbar_decoder_create	src/img/zbar.c	/^zbar_decoder_t *zbar_decoder_create ()$/;"	f
zbar_decoder_create	zbar/decoder.c	/^zbar_decoder_t *zbar_decoder_create ()$/;"	f
zbar_decoder_destroy	src/img/zbar.c	/^void zbar_decoder_destroy (zbar_decoder_t *dcode)$/;"	f
zbar_decoder_destroy	zbar/decoder.c	/^void zbar_decoder_destroy (zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_color	src/img/zbar.c	/^zbar_color_t zbar_decoder_get_color (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_color	zbar/decoder.c	/^zbar_color_t zbar_decoder_get_color (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_configs	src/img/zbar.c	/^unsigned int zbar_decoder_get_configs (const zbar_decoder_t *dcode,$/;"	f
zbar_decoder_get_data	src/img/zbar.c	/^const char *zbar_decoder_get_data (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_data	zbar/decoder.c	/^const char *zbar_decoder_get_data (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_data_length	src/img/zbar.c	/^unsigned int zbar_decoder_get_data_length (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_data_length	zbar/decoder.c	/^unsigned int zbar_decoder_get_data_length (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_direction	src/img/zbar.c	/^int zbar_decoder_get_direction (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_modifiers	src/img/zbar.c	/^unsigned int zbar_decoder_get_modifiers (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_type	src/img/zbar.c	/^zbar_symbol_type_t zbar_decoder_get_type (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_type	zbar/decoder.c	/^zbar_symbol_type_t zbar_decoder_get_type (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_userdata	src/img/zbar.c	/^void *zbar_decoder_get_userdata (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_get_userdata	zbar/decoder.c	/^void *zbar_decoder_get_userdata (const zbar_decoder_t *dcode)$/;"	f
zbar_decoder_handler_t	src/img/zbar.c	/^typedef void (zbar_decoder_handler_t)(zbar_decoder_t *decoder);$/;"	t	file:
zbar_decoder_handler_t	zbar/zbar.h	/^typedef void (zbar_decoder_handler_t)(zbar_decoder_t *decoder);$/;"	t
zbar_decoder_new_scan	src/img/zbar.c	/^void zbar_decoder_new_scan (zbar_decoder_t *dcode)$/;"	f
zbar_decoder_new_scan	zbar/decoder.c	/^void zbar_decoder_new_scan (zbar_decoder_t *dcode)$/;"	f
zbar_decoder_parse_config	src/img/zbar.c	/^static inline int zbar_decoder_parse_config (zbar_decoder_t *decoder,$/;"	f	file:
zbar_decoder_parse_config	zbar/zbar.h	/^static inline int zbar_decoder_parse_config (zbar_decoder_t *decoder,$/;"	f
zbar_decoder_reset	src/img/zbar.c	/^void zbar_decoder_reset (zbar_decoder_t *dcode)$/;"	f
zbar_decoder_reset	zbar/decoder.c	/^void zbar_decoder_reset (zbar_decoder_t *dcode)$/;"	f
zbar_decoder_s	src/img/zbar.c	/^struct zbar_decoder_s {$/;"	s	file:
zbar_decoder_s	zbar/decoder.h	/^struct zbar_decoder_s {$/;"	s
zbar_decoder_set_config	src/img/zbar.c	/^int zbar_decoder_set_config (zbar_decoder_t *dcode,$/;"	f
zbar_decoder_set_config	zbar/decoder.c	/^int zbar_decoder_set_config (zbar_decoder_t *dcode,$/;"	f
zbar_decoder_set_handler	src/img/zbar.c	/^zbar_decoder_set_handler (zbar_decoder_t *dcode,$/;"	f
zbar_decoder_set_handler	zbar/decoder.c	/^zbar_decoder_set_handler (zbar_decoder_t *dcode,$/;"	f
zbar_decoder_set_userdata	src/img/zbar.c	/^void zbar_decoder_set_userdata (zbar_decoder_t *dcode,$/;"	f
zbar_decoder_set_userdata	zbar/decoder.c	/^void zbar_decoder_set_userdata (zbar_decoder_t *dcode,$/;"	f
zbar_decoder_t	src/img/zbar.c	/^typedef struct zbar_decoder_s zbar_decoder_t;$/;"	t	typeref:struct:zbar_decoder_s	file:
zbar_decoder_t	zbar/zbar.h	/^typedef struct zbar_decoder_s zbar_decoder_t;$/;"	t	typeref:struct:zbar::zbar_decoder_s
zbar_error_e	zbar/zbar.h	/^typedef enum zbar_error_e {$/;"	g
zbar_error_t	zbar/zbar.h	/^} zbar_error_t;$/;"	t	typeref:enum:zbar::zbar_error_e
zbar_format_def_s	zbar/image.h	/^typedef struct zbar_format_def_s {$/;"	s
zbar_format_def_t	zbar/image.h	/^} zbar_format_def_t;$/;"	t	typeref:struct:zbar_format_def_s
zbar_format_group_e	zbar/image.h	/^typedef enum zbar_format_group_e {$/;"	g
zbar_format_group_t	zbar/image.h	/^} zbar_format_group_t;$/;"	t	typeref:enum:zbar_format_group_e
zbar_fourcc	src/img/zbar.c	274;"	d	file:
zbar_fourcc_parse	src/img/zbar.c	/^static inline unsigned long zbar_fourcc_parse (const char *format)$/;"	f	file:
zbar_get_addon_name	src/img/zbar.c	/^const char *zbar_get_addon_name (zbar_symbol_type_t sym)$/;"	f
zbar_get_addon_name	zbar/symbol.c	/^const char *zbar_get_addon_name (zbar_symbol_type_t sym)$/;"	f
zbar_get_config_name	src/img/zbar.c	/^const char *zbar_get_config_name (zbar_config_t cfg)$/;"	f
zbar_get_modifier_name	src/img/zbar.c	/^const char *zbar_get_modifier_name (zbar_modifier_t mod)$/;"	f
zbar_get_orientation_name	src/img/zbar.c	/^const char *zbar_get_orientation_name (zbar_orientation_t orient)$/;"	f
zbar_get_symbol_name	src/img/zbar.c	/^const char *zbar_get_symbol_name (zbar_symbol_type_t sym)$/;"	f
zbar_get_symbol_name	zbar/symbol.c	/^const char *zbar_get_symbol_name (zbar_symbol_type_t sym)$/;"	f
zbar_iconv_t	zbar/qrdectxt.c	/^typedef void* zbar_iconv_t;$/;"	t	file:
zbar_image_cleanup_handler_t	src/img/zbar.c	/^typedef void (zbar_image_cleanup_handler_t)(zbar_image_t *image);$/;"	t	file:
zbar_image_cleanup_handler_t	zbar/zbar.h	/^typedef void (zbar_image_cleanup_handler_t)(zbar_image_t *image);$/;"	t
zbar_image_copy	zbar/image.c	/^zbar_image_t *zbar_image_copy (const zbar_image_t *src)$/;"	f
zbar_image_create	zbar/image.c	/^zbar_image_t *zbar_image_create ()$/;"	f
zbar_image_data_handler_t	src/img/zbar.c	/^typedef void (zbar_image_data_handler_t)(zbar_image_t *image,$/;"	t	file:
zbar_image_data_handler_t	zbar/zbar.h	/^typedef void (zbar_image_data_handler_t)(zbar_image_t *image,$/;"	t
zbar_image_destroy	zbar/image.c	/^void zbar_image_destroy (zbar_image_t *img)$/;"	f
zbar_image_first_symbol	zbar/image.c	/^const zbar_symbol_t *zbar_image_first_symbol (const zbar_image_t *img)$/;"	f
zbar_image_free_data	zbar/image.c	/^inline void zbar_image_free_data (zbar_image_t *img)$/;"	f
zbar_image_get_data	zbar/image.c	/^const void *zbar_image_get_data (const zbar_image_t *img)$/;"	f
zbar_image_get_data_length	zbar/image.c	/^unsigned long zbar_image_get_data_length (const zbar_image_t *img)$/;"	f
zbar_image_get_format	zbar/image.c	/^unsigned long zbar_image_get_format (const zbar_image_t *img)$/;"	f
zbar_image_get_height	zbar/image.c	/^unsigned zbar_image_get_height (const zbar_image_t *img)$/;"	f
zbar_image_get_sequence	zbar/image.c	/^unsigned zbar_image_get_sequence (const zbar_image_t *img)$/;"	f
zbar_image_get_symbols	zbar/image.c	/^const zbar_symbol_set_t *zbar_image_get_symbols (const zbar_image_t *img)$/;"	f
zbar_image_get_userdata	zbar/image.c	/^void *zbar_image_get_userdata (const zbar_image_t *img)$/;"	f
zbar_image_get_width	zbar/image.c	/^unsigned zbar_image_get_width (const zbar_image_t *img)$/;"	f
zbar_image_ref	zbar/image.c	/^void zbar_image_ref (zbar_image_t *img,$/;"	f
zbar_image_s	src/img/zbar.c	/^struct zbar_image_s {$/;"	s	file:
zbar_image_s	zbar/image.h	/^struct zbar_image_s {$/;"	s
zbar_image_scanner_create	src/img/zbar.c	/^zbar_image_scanner_t *zbar_image_scanner_create ()$/;"	f
zbar_image_scanner_create	zbar/img_scanner.c	/^zbar_image_scanner_t *zbar_image_scanner_create ()$/;"	f
zbar_image_scanner_destroy	src/img/zbar.c	/^void zbar_image_scanner_destroy (zbar_image_scanner_t *iscn)$/;"	f
zbar_image_scanner_destroy	zbar/img_scanner.c	/^void zbar_image_scanner_destroy (zbar_image_scanner_t *iscn)$/;"	f
zbar_image_scanner_enable_cache	src/img/zbar.c	/^void zbar_image_scanner_enable_cache (zbar_image_scanner_t *iscn,$/;"	f
zbar_image_scanner_enable_cache	zbar/img_scanner.c	/^void zbar_image_scanner_enable_cache (zbar_image_scanner_t *iscn,$/;"	f
zbar_image_scanner_get_results	src/img/zbar.c	/^zbar_image_scanner_get_results (const zbar_image_scanner_t *iscn)$/;"	f
zbar_image_scanner_get_results	zbar/img_scanner.c	/^zbar_image_scanner_get_results (const zbar_image_scanner_t *iscn)$/;"	f
zbar_image_scanner_parse_config	src/img/zbar.c	/^zbar_image_scanner_parse_config (zbar_image_scanner_t *scanner,$/;"	f	file:
zbar_image_scanner_parse_config	zbar/zbar.h	/^zbar_image_scanner_parse_config (zbar_image_scanner_t *scanner,$/;"	f
zbar_image_scanner_recycle_image	src/img/zbar.c	/^inline void zbar_image_scanner_recycle_image (zbar_image_scanner_t *iscn,$/;"	f
zbar_image_scanner_recycle_image	zbar/img_scanner.c	/^inline void zbar_image_scanner_recycle_image (zbar_image_scanner_t *iscn,$/;"	f
zbar_image_scanner_s	src/img/zbar.c	/^struct zbar_image_scanner_s {$/;"	s	file:
zbar_image_scanner_s	zbar/img_scanner.c	/^struct zbar_image_scanner_s {$/;"	s	file:
zbar_image_scanner_set_config	src/img/zbar.c	/^int zbar_image_scanner_set_config (zbar_image_scanner_t *iscn,$/;"	f
zbar_image_scanner_set_config	zbar/img_scanner.c	/^int zbar_image_scanner_set_config (zbar_image_scanner_t *iscn,$/;"	f
zbar_image_scanner_set_data_handler	src/img/zbar.c	/^zbar_image_scanner_set_data_handler (zbar_image_scanner_t *iscn,$/;"	f
zbar_image_scanner_set_data_handler	zbar/img_scanner.c	/^zbar_image_scanner_set_data_handler (zbar_image_scanner_t *iscn,$/;"	f
zbar_image_scanner_t	src/img/zbar.c	/^typedef struct zbar_image_scanner_s zbar_image_scanner_t;$/;"	t	typeref:struct:zbar_image_scanner_s	file:
zbar_image_scanner_t	zbar/zbar.h	/^typedef struct zbar_image_scanner_s zbar_image_scanner_t;$/;"	t	typeref:struct:zbar::zbar_image_scanner_s
zbar_image_set_data	zbar/image.c	/^void zbar_image_set_data (zbar_image_t *img,$/;"	f
zbar_image_set_format	zbar/image.c	/^void zbar_image_set_format (zbar_image_t *img,$/;"	f
zbar_image_set_sequence	zbar/image.c	/^void zbar_image_set_sequence (zbar_image_t *img,$/;"	f
zbar_image_set_size	zbar/image.c	/^void zbar_image_set_size (zbar_image_t *img,$/;"	f
zbar_image_set_symbols	zbar/image.c	/^void zbar_image_set_symbols (zbar_image_t *img,$/;"	f
zbar_image_set_userdata	zbar/image.c	/^void zbar_image_set_userdata (zbar_image_t *img,$/;"	f
zbar_image_t	src/img/zbar.c	/^typedef struct zbar_image_s zbar_image_t;$/;"	t	typeref:struct:zbar_image_s	file:
zbar_image_t	zbar/zbar.h	/^typedef struct zbar_image_s zbar_image_t;$/;"	t	typeref:struct:zbar::zbar_image_s
zbar_image_write	zbar/image.c	/^int zbar_image_write (const zbar_image_t *img,$/;"	f
zbar_image_write_png	src/img/zbar.c	26;"	d	file:
zbar_image_write_png	zbar/image.c	/^int zbar_image_write_png (const zbar_image_t *img,$/;"	f
zbar_image_write_png	zbar/image.h	112;"	d
zbar_increase_verbosity	zbar/error.c	/^void zbar_increase_verbosity ()$/;"	f
zbar_modifier_e	src/img/zbar.c	/^typedef enum zbar_modifier_e {$/;"	g	file:
zbar_modifier_t	src/img/zbar.c	/^} __attribute__((aligned(8)))zbar_modifier_t;$/;"	t	typeref:enum:zbar_modifier_e	file:
zbar_orientation_e	src/img/zbar.c	/^typedef enum zbar_orientation_e {$/;"	g	file:
zbar_orientation_t	src/img/zbar.c	/^} __attribute__((aligned(8)))zbar_orientation_t;$/;"	t	typeref:enum:zbar_orientation_e	file:
zbar_parse_config	src/img/zbar.c	/^int zbar_parse_config (const char *cfgstr,$/;"	f
zbar_point_s	src/img/zbar.c	/^typedef struct zbar_point_s {$/;"	s	file:
zbar_point_t	src/img/zbar.c	/^} __attribute__((aligned(8)))zbar_point_t;$/;"	t	typeref:struct:zbar_point_s	file:
zbar_processor_error_spew	zbar/zbar.h	/^zbar_processor_error_spew (const zbar_processor_t *processor,$/;"	f
zbar_processor_error_string	zbar/zbar.h	/^zbar_processor_error_string (const zbar_processor_t *processor,$/;"	f
zbar_processor_get_error_code	zbar/zbar.h	/^zbar_processor_get_error_code (const zbar_processor_t *processor)$/;"	f
zbar_processor_parse_config	zbar/zbar.h	/^static inline int zbar_processor_parse_config (zbar_processor_t *processor,$/;"	f
zbar_processor_t	zbar/zbar.h	/^typedef struct zbar_processor_s zbar_processor_t;$/;"	t	typeref:struct:zbar::zbar_processor_s
zbar_scan_image	src/img/zbar.c	/^int zbar_scan_image (zbar_image_scanner_t *iscn,$/;"	f
zbar_scan_image	zbar/img_scanner.c	/^int zbar_scan_image (zbar_image_scanner_t *iscn,$/;"	f
zbar_scan_rgb24	src/img/zbar.c	/^static inline zbar_symbol_type_t zbar_scan_rgb24 (zbar_scanner_t *scanner,$/;"	f	file:
zbar_scan_rgb24	zbar/zbar.h	/^static inline zbar_symbol_type_t zbar_scan_rgb24 (zbar_scanner_t *scanner,$/;"	f
zbar_scan_y	src/img/zbar.c	/^zbar_symbol_type_t zbar_scan_y (zbar_scanner_t *scn,$/;"	f
zbar_scan_y	zbar/scanner.c	/^zbar_symbol_type_t zbar_scan_y (zbar_scanner_t *scn,$/;"	f
zbar_scanner_create	src/img/zbar.c	/^zbar_scanner_t *zbar_scanner_create (zbar_decoder_t *dcode)$/;"	f
zbar_scanner_create	zbar/scanner.c	/^zbar_scanner_t *zbar_scanner_create (zbar_decoder_t *dcode)$/;"	f
zbar_scanner_destroy	src/img/zbar.c	/^void zbar_scanner_destroy (zbar_scanner_t *scn)$/;"	f
zbar_scanner_destroy	zbar/scanner.c	/^void zbar_scanner_destroy (zbar_scanner_t *scn)$/;"	f
zbar_scanner_flush	src/img/zbar.c	/^inline zbar_symbol_type_t zbar_scanner_flush (zbar_scanner_t *scn)$/;"	f
zbar_scanner_flush	zbar/scanner.c	/^inline zbar_symbol_type_t zbar_scanner_flush (zbar_scanner_t *scn)$/;"	f
zbar_scanner_get_color	src/img/zbar.c	/^zbar_color_t zbar_scanner_get_color (const zbar_scanner_t *scn)$/;"	f
zbar_scanner_get_color	zbar/scanner.c	/^zbar_color_t zbar_scanner_get_color (const zbar_scanner_t *scn)$/;"	f
zbar_scanner_get_edge	src/img/zbar.c	/^unsigned zbar_scanner_get_edge (const zbar_scanner_t *scn,$/;"	f
zbar_scanner_get_edge	zbar/scanner.c	/^unsigned zbar_scanner_get_edge (const zbar_scanner_t *scn,$/;"	f
zbar_scanner_get_state	src/img/zbar.c	/^void zbar_scanner_get_state (const zbar_scanner_t *scn,$/;"	f
zbar_scanner_get_state	zbar/scanner.c	/^void zbar_scanner_get_state (const zbar_scanner_t *scn,$/;"	f
zbar_scanner_get_width	src/img/zbar.c	/^unsigned zbar_scanner_get_width (const zbar_scanner_t *scn)$/;"	f
zbar_scanner_get_width	zbar/scanner.c	/^unsigned zbar_scanner_get_width (const zbar_scanner_t *scn)$/;"	f
zbar_scanner_new_scan	src/img/zbar.c	/^zbar_symbol_type_t zbar_scanner_new_scan (zbar_scanner_t *scn)$/;"	f
zbar_scanner_new_scan	zbar/scanner.c	/^zbar_symbol_type_t zbar_scanner_new_scan (zbar_scanner_t *scn)$/;"	f
zbar_scanner_reset	src/img/zbar.c	/^zbar_symbol_type_t zbar_scanner_reset (zbar_scanner_t *scn)$/;"	f
zbar_scanner_reset	zbar/scanner.c	/^zbar_symbol_type_t zbar_scanner_reset (zbar_scanner_t *scn)$/;"	f
zbar_scanner_s	src/img/zbar.c	/^struct zbar_scanner_s {$/;"	s	file:
zbar_scanner_s	zbar/scanner.c	/^struct zbar_scanner_s {$/;"	s	file:
zbar_scanner_t	src/img/zbar.c	/^typedef struct zbar_scanner_s zbar_scanner_t;$/;"	t	typeref:struct:zbar_scanner_s	file:
zbar_scanner_t	zbar/zbar.h	/^typedef struct zbar_scanner_s zbar_scanner_t;$/;"	t	typeref:struct:zbar::zbar_scanner_s
zbar_set_verbosity	zbar/error.c	/^void zbar_set_verbosity (int level)$/;"	f
zbar_symbol_first_component	src/img/zbar.c	/^const zbar_symbol_t *zbar_symbol_first_component (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_first_component	zbar/symbol.c	/^const zbar_symbol_t *zbar_symbol_first_component (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_components	src/img/zbar.c	/^zbar_symbol_get_components (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_components	zbar/symbol.c	/^zbar_symbol_get_components (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_configs	src/img/zbar.c	/^unsigned int zbar_symbol_get_configs (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_count	src/img/zbar.c	/^int zbar_symbol_get_count (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_count	zbar/symbol.c	/^int zbar_symbol_get_count (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_data	src/img/zbar.c	/^const char *zbar_symbol_get_data (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_data	zbar/symbol.c	/^const char *zbar_symbol_get_data (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_data_length	src/img/zbar.c	/^unsigned int zbar_symbol_get_data_length (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_data_length	zbar/symbol.c	/^unsigned int zbar_symbol_get_data_length (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_loc_size	src/img/zbar.c	/^unsigned zbar_symbol_get_loc_size (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_loc_size	zbar/symbol.c	/^unsigned zbar_symbol_get_loc_size (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_loc_x	src/img/zbar.c	/^int zbar_symbol_get_loc_x (const zbar_symbol_t *sym,$/;"	f
zbar_symbol_get_loc_x	zbar/symbol.c	/^int zbar_symbol_get_loc_x (const zbar_symbol_t *sym,$/;"	f
zbar_symbol_get_loc_y	src/img/zbar.c	/^int zbar_symbol_get_loc_y (const zbar_symbol_t *sym,$/;"	f
zbar_symbol_get_loc_y	zbar/symbol.c	/^int zbar_symbol_get_loc_y (const zbar_symbol_t *sym,$/;"	f
zbar_symbol_get_modifiers	src/img/zbar.c	/^unsigned int zbar_symbol_get_modifiers (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_orientation	src/img/zbar.c	/^zbar_orientation_t zbar_symbol_get_orientation (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_quality	src/img/zbar.c	/^int zbar_symbol_get_quality (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_quality	zbar/symbol.c	/^int zbar_symbol_get_quality (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_type	src/img/zbar.c	/^zbar_symbol_type_t zbar_symbol_get_type (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_get_type	zbar/symbol.c	/^zbar_symbol_type_t zbar_symbol_get_type (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_next	src/img/zbar.c	/^const zbar_symbol_t *zbar_symbol_next (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_next	zbar/symbol.c	/^const zbar_symbol_t *zbar_symbol_next (const zbar_symbol_t *sym)$/;"	f
zbar_symbol_ref	src/img/zbar.c	/^void zbar_symbol_ref (const zbar_symbol_t *sym,$/;"	f
zbar_symbol_ref	zbar/symbol.c	/^void zbar_symbol_ref (const zbar_symbol_t *sym,$/;"	f
zbar_symbol_s	src/img/zbar.c	/^struct zbar_symbol_s {$/;"	s	file:
zbar_symbol_s	zbar/symbol.h	/^struct zbar_symbol_s {$/;"	s
zbar_symbol_set_first_symbol	src/img/zbar.c	/^zbar_symbol_set_first_symbol (const zbar_symbol_set_t *syms)$/;"	f
zbar_symbol_set_first_symbol	zbar/symbol.c	/^zbar_symbol_set_first_symbol (const zbar_symbol_set_t *syms)$/;"	f
zbar_symbol_set_first_unfiltered	src/img/zbar.c	/^zbar_symbol_set_first_unfiltered (const zbar_symbol_set_t *syms)$/;"	f
zbar_symbol_set_get_size	src/img/zbar.c	/^int zbar_symbol_set_get_size (const zbar_symbol_set_t *syms)$/;"	f
zbar_symbol_set_get_size	zbar/symbol.c	/^int zbar_symbol_set_get_size (const zbar_symbol_set_t *syms)$/;"	f
zbar_symbol_set_ref	src/img/zbar.c	/^void zbar_symbol_set_ref (const zbar_symbol_set_t *syms,$/;"	f
zbar_symbol_set_ref	zbar/symbol.c	/^void zbar_symbol_set_ref (const zbar_symbol_set_t *syms,$/;"	f
zbar_symbol_set_s	src/img/zbar.c	/^struct zbar_symbol_set_s {$/;"	s	file:
zbar_symbol_set_s	zbar/symbol.h	/^struct zbar_symbol_set_s {$/;"	s
zbar_symbol_set_t	src/img/zbar.c	/^typedef struct zbar_symbol_set_s zbar_symbol_set_t;$/;"	t	typeref:struct:zbar_symbol_set_s	file:
zbar_symbol_set_t	zbar/zbar.h	/^typedef struct zbar_symbol_set_s zbar_symbol_set_t;$/;"	t	typeref:struct:zbar::zbar_symbol_set_s
zbar_symbol_t	src/img/zbar.c	/^typedef struct zbar_symbol_s zbar_symbol_t;$/;"	t	typeref:struct:zbar_symbol_s	file:
zbar_symbol_t	zbar/zbar.h	/^typedef struct zbar_symbol_s zbar_symbol_t;$/;"	t	typeref:struct:zbar::zbar_symbol_s
zbar_symbol_type_e	src/img/zbar.c	/^typedef enum zbar_symbol_type_e {$/;"	g	file:
zbar_symbol_type_e	zbar/zbar.h	/^typedef enum zbar_symbol_type_e {$/;"	g
zbar_symbol_type_t	src/img/zbar.c	/^}__attribute__((aligned(8))) zbar_symbol_type_t;$/;"	t	typeref:enum:zbar_symbol_type_e	file:
zbar_symbol_type_t	zbar/zbar.h	/^} zbar_symbol_type_t;$/;"	t	typeref:enum:zbar::zbar_symbol_type_e
zbar_symbol_xml	zbar/symbol.c	/^char *zbar_symbol_xml (const zbar_symbol_t *sym,$/;"	f
zbar_utf8_to_gb18030	zbar/qrdectxt.c	/^int zbar_utf8_to_gb18030(uint8_t* utf8_code, uint32_t utf8_len, uint8_t* gb18030)$/;"	f
zbar_version	zbar/error.c	/^int zbar_version (unsigned *major,$/;"	f
zbar_video_error_spew	zbar/zbar.h	/^static inline int zbar_video_error_spew (const zbar_video_t *video,$/;"	f
zbar_video_error_string	zbar/zbar.h	/^static inline const char *zbar_video_error_string (const zbar_video_t *video,$/;"	f
zbar_video_get_error_code	zbar/zbar.h	/^zbar_video_get_error_code (const zbar_video_t *video)$/;"	f
zbar_video_t	zbar/zbar.h	/^typedef struct zbar_video_s zbar_video_t;$/;"	t	typeref:struct:zbar::zbar_video_s
zbar_window_error_spew	zbar/zbar.h	/^static inline int zbar_window_error_spew (const zbar_window_t *window,$/;"	f
zbar_window_error_string	zbar/zbar.h	/^zbar_window_error_string (const zbar_window_t *window,$/;"	f
zbar_window_get_error_code	zbar/zbar.h	/^zbar_window_get_error_code (const zbar_window_t *window)$/;"	f
zbar_window_t	zbar/zbar.h	/^typedef struct zbar_window_s zbar_window_t;$/;"	t	typeref:struct:zbar::zbar_window_s
zimg_hdr_s	zbar/image.c	/^typedef struct zimg_hdr_s {$/;"	s	file:
zimg_hdr_t	zbar/image.c	/^} zimg_hdr_t;$/;"	t	typeref:struct:zimg_hdr_s	file:
zprintf	src/img/zbar.c	22;"	d	file:
zprintf	zbar/error.h	105;"	d
zprintf	zbar/error.h	112;"	d
zprintf	zbar/error.h	96;"	d
zprintf	zbar/error.h	99;"	d
zstrcmp	src/img/apriltag.c	/^int zstrcmp(const void * a_pp, const void * b_pp)$/;"	f
